<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2016" minor="2"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="true" autoexpanding_sections="false" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="0" preplot="" helpbrowser="standard" contextmenusize="automatic" displayprecision="-1" echo="1" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="2160" rtablesize="10" useclientjvm="true" labelwidth="20" postplot="" typesetting="standard" ansi="false" elisiondigitsthreshold="10000" showassumed="1" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Metadata-table>
    <Metadata-category name="&lt;default&gt;"/>
    <Metadata-tag id="0" category="&lt;default&gt;" name="Document Properties">
        <Metadata-attribute name="Item List" value="true"/>
        <Metadata-attribute name="Keywords" value="&lt;default&gt;"/>
        <Metadata-attribute name="\344\275\234\346\210\220\350\200\205" value="&lt;default&gt;"/>
        <Metadata-attribute name="\343\202\242\343\202\244\343\203\206\343\203\240\344\270\200\350\246\247" value="true"/>
        <Metadata-attribute name="Author" value="&lt;default&gt;"/>
        <Metadata-attribute name="Title" value="&lt;default&gt;"/>
        <Metadata-attribute name="\343\202\277\343\202\244\343\203\210\343\203\253" value="&lt;default&gt;"/>
        <Metadata-attribute name="\343\202\255\343\203\274\343\203\257\343\203\274\343\203\211" value="&lt;default&gt;"/>
        <Metadata-attribute name="Subject" value="&lt;default&gt;"/>
        <Metadata-attribute name="\344\273\266\345\220\215" value="&lt;default&gt;"/>
    </Metadata-tag>
</Metadata-table>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L51671" drawlabel="true">
<Input><Text-field style="Text" layout="Normal" alignment="centred"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L48306" drawlabel="true">
<Input><Text-field style="Text" layout="Normal" alignment="centred"><Font size="20" bold="true">AutoGenU for Maple
</Font><Font size="14" bold="true">(Command version)</Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="true" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Introduction</Text-field></Title>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Nonlinear Model Predictive Control Problem</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70406" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Let us consider the following nonlinear model predictive control problem.</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70461" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="group" postexecute="insert" drawcaption="false" drawtitle="false" width="65.33084808946877%" captionalignment="1" showinput="true" captionposition="1" id="Table0" alignment="center" randomized="false" labelreference="L70399" showgroup="true" order="row"><Table-Column weight="163" separator="true"></Table-Column><Table-Column weight="538" separator="false"></Table-Column><Table-Row align="center" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70385" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">State Equation:</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70402" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkmbW92ZXJHRiQ2JS1GIzYlLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjcvRjtRJ25vcm1hbEYnLUkjbW9HRiQ2L1EiLkYnRjcvJSxwbGFjZWhvbGRlckdGNkY9LyUmZmVuY2VHUSZ1bnNldEYnLyUqc2VwYXJhdG9yR0ZHLyUpc3RyZXRjaHlHRkcvJSpzeW1tZXRyaWNHRkcvJShsYXJnZW9wR0ZHLyUubW92YWJsZWxpbWl0c0dGRy8lJ2FjY2VudEdGRy8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRlYvRlNGNi1JKG1mZW5jZWRHRiQ2JS1GIzYlLUYxNiZRInRGJ0Y0RjdGOkY3Rj1GN0Y9LUZANi5RIj1GJ0Y3Rj0vRkZGOS9GSUY5L0ZLRjkvRk1GOS9GT0Y5L0ZRRjkvRlNGOS9GVVEsMC4yNzc3Nzc4ZW1GJy9GWEZnby1GQDYuUSJ+RidGN0Y9Rl9vRmBvRmFvRmJvRmNvRmRvRmVvRlRGVy1GMTYmUSJmRidGNEY3RjotRmVuNiUtRiM2LkYwRlotRkA2LlEiLEYnRjdGPUZfby9GSUY2RmFvRmJvRmNvRmRvRmVvRlQvRlhRLDAuMzMzMzMzM2VtRidGaW8tRjE2JlEidUYnRjRGN0Y6RlpGY3BGaW8tRjE2JlEicEYnRjRGN0Y6RlpGN0Y9RjdGPS1GMTYjUSFGJ0Y3Rj0=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkmbW92ZXJHRiQ2JS1GIzYlLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjcvRjtRJ25vcm1hbEYnLUkjbW9HRiQ2L1EiLkYnRjcvJSxwbGFjZWhvbGRlckdGNkY9LyUmZmVuY2VHUSZ1bnNldEYnLyUqc2VwYXJhdG9yR0ZHLyUpc3RyZXRjaHlHRkcvJSpzeW1tZXRyaWNHRkcvJShsYXJnZW9wR0ZHLyUubW92YWJsZWxpbWl0c0dGRy8lJ2FjY2VudEdGRy8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRlYvRlNGNi1JKG1mZW5jZWRHRiQ2JS1GIzYlLUYxNiZRInRGJ0Y0RjdGOkY3Rj1GN0Y9LUZANi5RIj1GJ0Y3Rj0vRkZGOS9GSUY5L0ZLRjkvRk1GOS9GT0Y5L0ZRRjkvRlNGOS9GVVEsMC4yNzc3Nzc4ZW1GJy9GWEZnby1GQDYuUSJ+RidGN0Y9Rl9vRmBvRmFvRmJvRmNvRmRvRmVvRlRGVy1GMTYmUSJmRidGNEY3RjotRmVuNiUtRiM2LkYwRlotRkA2LlEiLEYnRjdGPUZfby9GSUY2RmFvRmJvRmNvRmRvRmVvRlQvRlhRLDAuMzMzMzMzM2VtRidGaW8tRjE2JlEidUYnRjRGN0Y6RlpGY3BGaW8tRjE2JlEicEYnRjRGN0Y6RlpGN0Y9RjdGPS1GMTYjUSFGJ0Y3Rj0=</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="center" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70401" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Performance Index:</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70377" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYxLUkjbWlHRiQ2JlEiSkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LlEiPUYnRjIvRjZRJ25vcm1hbEYnLyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjQvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTi1GLDYmUScmIzk4MTtGJy9GMEY0RjJGPC1GOTYuUSJ+RidGMkY8Rj5GQEZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBGWS1JKG1mZW5jZWRHRiQ2JS1GIzYrLUYsNiZRInhGJ0YvRjJGNS1GZm42JS1GIzYnLUYsNiNRIUYnLUYjNictRiw2JlEidEYnRi9GMkY1LUY5Ni5RIitGJ0YyRjxGPkZARkJGREZGRkhGSi9GTVEsMC4yMjIyMjIyZW1GJy9GUEZdcC1GLDYmUSJURidGL0YyRjVGMkY8RmFvRjJGPEYyRjwtRjk2LlEiLEYnRjJGPEY+L0ZBRjFGQkZERkZGSEZKRlgvRlBRLDAuMzMzMzMzM2VtRidGVUZVLUYsNiZRInBGJ0YvRjJGNUZdb0YyRjxGMkY8RmlvLUkobXN1YnN1cEdGJDYnLUY5NjBRKCYjODc0NztGJy8lK2ZvcmVncm91bmRHUS5bMTQ0LDE0NCwxNDRdRidGMkY8L0krbXNlbWFudGljc0dGJFEmaW5lcnRGJ0Y+RkBGQkZERkZGSEZKRlhGWkZmb0Zkby8lMXN1cGVyc2NyaXB0c2hpZnRHUSIyRicvJS9zdWJzY3JpcHRzaGlmdEdRIjBGJy1GLDYmUSJMRidGL0YyRjUtRmZuNiUtRiM2K0Zhby1GIzYnRmpuLUY5Ni5RMCZBcHBseUZ1bmN0aW9uO0YnRjJGPEY+RkBGQkZERkZGSEZKRlhGWi1GZm42JS1GIzYlLUYsNiZRJyYjOTY0O0YnRlRGMkY8RjJGPEYyRjxGMkY8RmJwLUYjNictRiw2JlEidUYnRi9GMkY1RmZyRmlyRjJGPEZicC1GIzYnRmhwRmZyRmlyRjJGPEZhb0YyRjxGMkY8RmFvLUknbXNwYWNlR0YkNiYvJSdoZWlnaHRHUSYwLjBleEYnLyUmd2lkdGhHUSYwLjNlbUYnLyUmZGVwdGhHRlx0LyUqbGluZWJyZWFrR1ElYXV0b0YnLUY5NjBRMCZEaWZmZXJlbnRpYWxEO0YnRmFxRjJGPEZkcUY+RkBGQkZERkZGSEZKRlhGWkZdc0YyRjw=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYxLUkjbWlHRiQ2JlEiSkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LlEiPUYnRjIvRjZRJ25vcm1hbEYnLyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjQvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTi1GLDYmUScmIzk4MTtGJy9GMEY0RjJGPC1GOTYuUSJ+RidGMkY8Rj5GQEZCRkRGRkZIRkovRk1RJjAuMGVtRicvRlBGWS1JKG1mZW5jZWRHRiQ2JS1GIzYrLUYsNiZRInhGJ0YvRjJGNS1GZm42JS1GIzYnLUYsNiNRIUYnLUYjNictRiw2JlEidEYnRi9GMkY1LUY5Ni5RIitGJ0YyRjxGPkZARkJGREZGRkhGSi9GTVEsMC4yMjIyMjIyZW1GJy9GUEZdcC1GLDYmUSJURidGL0YyRjVGMkY8RmFvRjJGPEYyRjwtRjk2LlEiLEYnRjJGPEY+L0ZBRjFGQkZERkZGSEZKRlgvRlBRLDAuMzMzMzMzM2VtRidGVUZVLUYsNiZRInBGJ0YvRjJGNUZdb0YyRjxGMkY8RmlvLUkobXN1YnN1cEdGJDYnLUY5NjBRKCYjODc0NztGJy8lK2ZvcmVncm91bmRHUS5bMTQ0LDE0NCwxNDRdRidGMkY8L0krbXNlbWFudGljc0dGJFEmaW5lcnRGJ0Y+RkBGQkZERkZGSEZKRlhGWkZmb0Zkby8lMXN1cGVyc2NyaXB0c2hpZnRHUSIyRicvJS9zdWJzY3JpcHRzaGlmdEdRIjBGJy1GLDYmUSJMRidGL0YyRjUtRmZuNiUtRiM2K0Zhby1GIzYnRmpuLUY5Ni5RMCZBcHBseUZ1bmN0aW9uO0YnRjJGPEY+RkBGQkZERkZGSEZKRlhGWi1GZm42JS1GIzYlLUYsNiZRJyYjOTY0O0YnRlRGMkY8RjJGPEYyRjxGMkY8RmJwLUYjNictRiw2JlEidUYnRi9GMkY1RmZyRmlyRjJGPEZicC1GIzYnRmhwRmZyRmlyRjJGPEZhb0YyRjxGMkY8RmFvLUknbXNwYWNlR0YkNiYvJSdoZWlnaHRHUSYwLjBleEYnLyUmd2lkdGhHUSYwLjNlbUYnLyUmZGVwdGhHRlx0LyUqbGluZWJyZWFrR1ElYXV0b0YnLUY5NjBRMCZEaWZmZXJlbnRpYWxEO0YnRmFxRjJGPEZkcUY+RkBGQkZERkZGSEZKRlhGWkZdc0YyRjw=</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="center" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70380" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Constraint:</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70440" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi8tRiw2JlEieEYnRi9GMkY1LUY5NiUtRiM2Ji1GLDYmUSJ0RidGL0YyRjVGMi8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RicvRjZRJ25vcm1hbEYnRjJGSi1JI21vR0YkNi5RIixGJ0YyRkovJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGMS8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GTTYuUSJ+RidGMkZKRlAvRlNGNEZURlZGWEZaRmZuRmhuL0Zcb0Zqbi1GLDYmUSJ1RidGL0YyRjVGQEZMRl5vLUYsNiZRInBGJ0YvRjJGNUZARjJGR0ZKRjJGSkZeby1GTTYuUSI9RidGMkZKRlBGYW9GVEZWRlhGWkZmbi9GaW5RLDAuMjc3Nzc3OGVtRicvRlxvRl1wRl5vLUkjbW5HRiQ2JVEiMEYnRjJGSkYyRkdGSg==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi8tRiw2JlEieEYnRi9GMkY1LUY5NiUtRiM2Ji1GLDYmUSJ0RidGL0YyRjVGMi8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RicvRjZRJ25vcm1hbEYnRjJGSi1JI21vR0YkNi5RIixGJ0YyRkovJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGMS8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GTTYuUSJ+RidGMkZKRlAvRlNGNEZURlZGWEZaRmZuRmhuL0Zcb0Zqbi1GLDYmUSJ1RidGL0YyRjVGQEZMRl5vLUYsNiZRInBGJ0YvRjJGNUZARjJGR0ZKRjJGSkZeby1GTTYuUSI9RidGMkZKRlBGYW9GVEZWRlhGWkZmbi9GaW5RLDAuMjc3Nzc3OGVtRicvRlxvRl1wRl5vLUkjbW5HRiQ2JVEiMEYnRjJGSkYyRkdGSg==</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="2"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70443" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=</Equation>:  state vector</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70435" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1GLDYjUSFGJ0YyRkA=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1GLDYjUSFGJ0YyRkA=</Equation>:  control input vector</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70441" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEicEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEicEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=</Equation>:  vector of given time-dependent parameters</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70427" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEiVEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEiVEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation> : Horizon length</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70374" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70463" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">If  the inequality constraint  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYpLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi8tRiw2JlEieEYnRi9GMkY1LUY5NiUtRiM2JS1GLDYmUSJ0RidGL0YyRjVGMi9GNlEnbm9ybWFsRidGMkZHLUkjbW9HRiQ2LlEiLEYnRjJGRy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZKNi5RIn5GJ0YyRkdGTS9GUEY0RlFGU0ZVRldGWUZlbi9GaW5GZ24tRiw2JlEidUYnRi9GMkY1RkBGSUZbby1GLDYmUSJwRidGL0YyRjVGQC1GLDYjUSFGJ0YyRkdGMkZHLUZKNi5RJSZsZTtGJ0YyRkdGTUZeb0ZRRlNGVUZXRlkvRmZuUSwwLjI3Nzc3NzhlbUYnL0ZpbkZdcEZbby1JI21uR0YkNiVRIjBGJ0YyRkdGMkZH">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYpLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi8tRiw2JlEieEYnRi9GMkY1LUY5NiUtRiM2JS1GLDYmUSJ0RidGL0YyRjVGMi9GNlEnbm9ybWFsRidGMkZHLUkjbW9HRiQ2LlEiLEYnRjJGRy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZKNi5RIn5GJ0YyRkdGTS9GUEY0RlFGU0ZVRldGWUZlbi9GaW5GZ24tRiw2JlEidUYnRi9GMkY1RkBGSUZbby1GLDYmUSJwRidGL0YyRjVGQC1GLDYjUSFGJ0YyRkdGMkZHLUZKNi5RJSZsZTtGJ0YyRkdGTUZeb0ZRRlNGVUZXRlkvRmZuUSwwLjI3Nzc3NzhlbUYnL0ZpbkZdcEZbby1JI21uR0YkNiVRIjBGJ0YyRkdGMkZH</Equation>,  then it is modified to the equality constraint and it is replaced the constraint <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation>. </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70407" drawlabel="true">
<Input><Text-field style="Text" layout="Normal" alignment="centred"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2I1EhRictRiM2J0YrLUYjNihGKy1GIzYpRistRiM2Jy1GLDYmUSJDRicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYuUTAmQXBwbHlGdW5jdGlvbjtGJ0Y9L0ZBUSdub3JtYWxGJy8lJmZlbmNlR0Y/LyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRlktSShtZmVuY2VkR0YkNiUtRiM2K0YrLUYjNictRiw2JlEieEYnRjpGPUZARkMtRmduNiUtRiM2JS1GLDYmUSJ0RidGOkY9RkBGPUZHRj1GR0Y9RkctRkQ2LlEiLEYnRj1GR0ZJL0ZMRjxGTUZPRlFGU0ZVRlcvRmVuUSwwLjMzMzMzMzNlbUYnLUYjNictRiw2JlEidUYnRjpGPUZARkNGYG9GPUZHRmdvLUYjNictRiw2JlEicEYnRjpGPUZARkNGYG9GPUZHRitGPUZHRj1GR0Y9RkctRkQ2LlEiK0YnRj1GR0ZJRktGTUZPRlFGU0ZVL0ZYUSwwLjIyMjIyMjJlbUYnL0ZlbkZbcS1GIzYlLUklbXN1cEdGJDYlLUYsNidRInZGJ0Y6LyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnRj1GQC1JI21uR0YkNiZRIjJGJ0ZlcUY9RkcvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnRj1GR0YrRj1GRy1GRDYuUSI9RidGPUZHRklGS0ZNRk9GUUZTRlUvRlhRLDAuMjc3Nzc3OGVtRicvRmVuRmNyLUZpcTYlRl5yRj1GR0Y9RkdGK0Y9RkdGK0Y9Rkc=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2I1EhRictRiM2J0YrLUYjNihGKy1GIzYpRistRiM2Jy1GLDYmUSJDRicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYuUTAmQXBwbHlGdW5jdGlvbjtGJ0Y9L0ZBUSdub3JtYWxGJy8lJmZlbmNlR0Y/LyUqc2VwYXJhdG9yR0Y/LyUpc3RyZXRjaHlHRj8vJSpzeW1tZXRyaWNHRj8vJShsYXJnZW9wR0Y/LyUubW92YWJsZWxpbWl0c0dGPy8lJ2FjY2VudEdGPy8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRlktSShtZmVuY2VkR0YkNiUtRiM2K0YrLUYjNictRiw2JlEieEYnRjpGPUZARkMtRmduNiUtRiM2JS1GLDYmUSJ0RidGOkY9RkBGPUZHRj1GR0Y9RkctRkQ2LlEiLEYnRj1GR0ZJL0ZMRjxGTUZPRlFGU0ZVRlcvRmVuUSwwLjMzMzMzMzNlbUYnLUYjNictRiw2JlEidUYnRjpGPUZARkNGYG9GPUZHRmdvLUYjNictRiw2JlEicEYnRjpGPUZARkNGYG9GPUZHRitGPUZHRj1GR0Y9RkctRkQ2LlEiK0YnRj1GR0ZJRktGTUZPRlFGU0ZVL0ZYUSwwLjIyMjIyMjJlbUYnL0ZlbkZbcS1GIzYlLUklbXN1cEdGJDYlLUYsNidRInZGJ0Y6LyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnRj1GQC1JI21uR0YkNiZRIjJGJ0ZlcUY9RkcvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnRj1GR0YrRj1GRy1GRDYuUSI9RidGPUZHRklGS0ZNRk9GUUZTRlUvRlhRLDAuMjc3Nzc3OGVtRicvRmVuRmNyLUZpcTYlRl5yRj1GR0Y9RkdGK0Y9RkdGK0Y9Rkc=</Equation>, </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70408" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">where  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2J1EidkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2L1EifkYnRjJGNS9GOVEnbm9ybWFsRicvJSZmZW5jZUdGNy8lKnNlcGFyYXRvckdGNy8lKXN0cmV0Y2h5R0Y3LyUqc3ltbWV0cmljR0Y3LyUobGFyZ2VvcEdGNy8lLm1vdmFibGVsaW1pdHNHRjcvJSdhY2NlbnRHRjcvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZRRjJGNUY/">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2J1EidkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2L1EifkYnRjJGNS9GOVEnbm9ybWFsRicvJSZmZW5jZUdGNy8lKnNlcGFyYXRvckdGNy8lKXN0cmV0Y2h5R0Y3LyUqc3ltbWV0cmljR0Y3LyUobGFyZ2VvcEdGNy8lLm1vdmFibGVsaW1pdHNHRjcvJSdhY2NlbnRHRjcvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZRRjJGNUY/</Equation> is a dummy input (slack variable) vector. </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70462" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70413" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Discretization of the Horizon</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70433" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Discretize the problem to be solved at time <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation>. </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70405" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="none" postexecute="insert" drawcaption="false" drawtitle="false" width="67.96875%" captionalignment="0" showinput="true" captionposition="1" id="Table1" alignment="center" randomized="false" labelreference="L70448" showgroup="true" order="row"><Table-Column weight="609" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70383" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Unknown  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYpLUkjbWlHRiQ2JlEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1JI21vR0YkNi5RIn5GJ0YyRkAvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZWLUZDNi5RKiZjb2xvbmVxO0YnRjJGQEZGRkhGSkZMRk5GUEZSL0ZVUSwwLjI3Nzc3NzhlbUYnL0ZYRmduLUklbXN1cEdGJDYlLUY5NictRiM2NS1JKG1zdWJzdXBHRiQ2KC1GLDYmUSJ1RidGL0YyRjUtRiM2JS1JI21uR0YkNiVRIjBGJ0YyRkBGMkZALUYjNiYtRkM2LlEiKkYnRjJGQEZGRkhGSkZMRk5GUEZSL0ZVUSwwLjE2NjY2NjdlbUYnL0ZYRmJwLUYsNiZRIlRGJ0YvRjJGNUYyRkAvJTFzdXBlcnNjcmlwdHNoaWZ0R0ZbcC8lL3N1YnNjcmlwdHNoaWZ0R0ZbcC9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRidGOC1GQzYuUSIsRidGMkZARkYvRklGMUZKRkxGTkZQRlJGVC9GWFEsMC4zMzMzMzMzZW1GJy1GYW82KC1GLDYmUSUmbXU7RicvRjBGNEYyRkBGZm9GXHBGZ3BGaXBGW3FGOEZecUZCLUZDNi5RIy4uRidGMkZARkZGSEZKRkxGTkZQRlIvRlVRLDAuMjIyMjIyMmVtRidGVy1GQzYuUSIuRidGMkZARkZGSEZKRkxGTkZQRlJGVEZXRkJGXnEtRmFvNihGY28tRiM2Jy1GLDYmUSJORidGL0YyRjUtRkM2LlEoJm1pbnVzO0YnRjJGQEZGRkhGSkZMRk5GUEZSRl1yL0ZYRl5yLUZpbzYlUSIxRidGMkZARjJGQEZccEZncEZpcEZbcUY4Rl5xRkItRmFvNihGZnFGZHJGXHBGZ3BGaXBGW3FGOEYyRkBGMkZALyUlb3BlbkdRIltGJy8lJmNsb3NlR1EiXUYnLUYjNiVGZHBGMkZARmdwRjJGQA==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYpLUkjbWlHRiQ2JlEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1JI21vR0YkNi5RIn5GJ0YyRkAvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZWLUZDNi5RKiZjb2xvbmVxO0YnRjJGQEZGRkhGSkZMRk5GUEZSL0ZVUSwwLjI3Nzc3NzhlbUYnL0ZYRmduLUklbXN1cEdGJDYlLUY5NictRiM2NS1JKG1zdWJzdXBHRiQ2KC1GLDYmUSJ1RidGL0YyRjUtRiM2JS1JI21uR0YkNiVRIjBGJ0YyRkBGMkZALUYjNiYtRkM2LlEiKkYnRjJGQEZGRkhGSkZMRk5GUEZSL0ZVUSwwLjE2NjY2NjdlbUYnL0ZYRmJwLUYsNiZRIlRGJ0YvRjJGNUYyRkAvJTFzdXBlcnNjcmlwdHNoaWZ0R0ZbcC8lL3N1YnNjcmlwdHNoaWZ0R0ZbcC9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRidGOC1GQzYuUSIsRidGMkZARkYvRklGMUZKRkxGTkZQRlJGVC9GWFEsMC4zMzMzMzMzZW1GJy1GYW82KC1GLDYmUSUmbXU7RicvRjBGNEYyRkBGZm9GXHBGZ3BGaXBGW3FGOEZecUZCLUZDNi5RIy4uRidGMkZARkZGSEZKRkxGTkZQRlIvRlVRLDAuMjIyMjIyMmVtRidGVy1GQzYuUSIuRidGMkZARkZGSEZKRkxGTkZQRlJGVEZXRkJGXnEtRmFvNihGY28tRiM2Jy1GLDYmUSJORidGL0YyRjUtRkM2LlEoJm1pbnVzO0YnRjJGQEZGRkhGSkZMRk5GUEZSRl1yL0ZYRl5yLUZpbzYlUSIxRidGMkZARjJGQEZccEZncEZpcEZbcUY4Rl5xRkItRmFvNihGZnFGZHJGXHBGZ3BGaXBGW3FGOEYyRkBGMkZALyUlb3BlbkdRIltGJy8lJmNsb3NlR1EiXUYnLUYjNiVGZHBGMkZARmdwRjJGQA==</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70460" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Actual Input   <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1JI21vR0YkNi5RIn5GJ0YyRkAvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZWLUZDNi5RIj1GJ0YyRkBGRkZIRkpGTEZORlBGUi9GVVEsMC4yNzc3Nzc4ZW1GJy9GWEZnbkZCLUkobXN1YnN1cEdGJDYoLUYsNidGLkYvRjIvJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnRjUtRiM2JS1JI21uR0YkNiZRIjBGJ0YyRl5vRkBGMkZALUYjNiUtRkM2L1EiKkYnRjJGXm9GQEZGRkhGSkZMRk5GUEZSL0ZVUSwwLjE2NjY2NjdlbUYnL0ZYRl1wRjJGQC8lMXN1cGVyc2NyaXB0c2hpZnRHRmZvLyUvc3Vic2NyaXB0c2hpZnRHRmZvL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1GOTYmLUYjNiUtRiw2J0Y/Ri9GMkZeb0Y1RjJGQEYyRl5vRkBGMkZA">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1JI21vR0YkNi5RIn5GJ0YyRkAvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZWLUZDNi5RIj1GJ0YyRkBGRkZIRkpGTEZORlBGUi9GVVEsMC4yNzc3Nzc4ZW1GJy9GWEZnbkZCLUkobXN1YnN1cEdGJDYoLUYsNidGLkYvRjIvJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnRjUtRiM2JS1JI21uR0YkNiZRIjBGJ0YyRl5vRkBGMkZALUYjNiUtRkM2L1EiKkYnRjJGXm9GQEZGRkhGSkZMRk5GUEZSL0ZVUSwwLjE2NjY2NjdlbUYnL0ZYRl1wRjJGQC8lMXN1cGVyc2NyaXB0c2hpZnRHRmZvLyUvc3Vic2NyaXB0c2hpZnRHRmZvL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1GOTYmLUYjNiUtRiw2J0Y/Ri9GMkZeb0Y1RjJGQEYyRl5vRkBGMkZA</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70403" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Lagrange Multiplier  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2I1EhRictSShtc3Vic3VwR0YkNigtRiw2JlElJm11O0YnLyUnaXRhbGljR1EmZmFsc2VGJy8lK2V4ZWN1dGFibGVHRjcvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLUYjNiUtRiw2JlEiaUYnL0Y2USV0cnVlRidGOC9GO1EnaXRhbGljRidGOEY6LUYjNiUtSSNtb0dGJDYuUSIqRidGOEY6LyUmZmVuY2VHRjcvJSpzZXBhcmF0b3JHRjcvJSlzdHJldGNoeUdGNy8lKnN5bW1ldHJpY0dGNy8lKGxhcmdlb3BHRjcvJS5tb3ZhYmxlbGltaXRzR0Y3LyUnYWNjZW50R0Y3LyUnbHNwYWNlR1EsMC4xNjY2NjY3ZW1GJy8lJ3JzcGFjZUdGZm5GOEY6LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Zbby9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRidGOEY6">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2I1EhRictSShtc3Vic3VwR0YkNigtRiw2JlElJm11O0YnLyUnaXRhbGljR1EmZmFsc2VGJy8lK2V4ZWN1dGFibGVHRjcvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLUYjNiUtRiw2JlEiaUYnL0Y2USV0cnVlRidGOC9GO1EnaXRhbGljRidGOEY6LUYjNiUtSSNtb0dGJDYuUSIqRidGOEY6LyUmZmVuY2VHRjcvJSpzZXBhcmF0b3JHRjcvJSlzdHJldGNoeUdGNy8lKnN5bW1ldHJpY0dGNy8lKGxhcmdlb3BHRjcvJS5tb3ZhYmxlbGltaXRzR0Y3LyUnYWNjZW50R0Y3LyUnbHNwYWNlR1EsMC4xNjY2NjY3ZW1GJy8lJ3JzcGFjZUdGZm5GOEY6LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Zbby9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRidGOEY6</Equation> for <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi4tRiw2JlEieEYnRi9GMkY1LUY5NiUtRiM2JS1GLDYmUSJ0RidGL0YyRjVGMi9GNlEnbm9ybWFsRidGMkZHLUkjbW9HRiQ2LlEiLEYnRjJGRy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZKNi5RIn5GJ0YyRkdGTS9GUEY0RlFGU0ZVRldGWUZlbi9GaW5GZ24tRiw2JlEidUYnRi9GMkY1RkBGSUZbby1GLDYmUSJwRidGL0YyRjVGQEYyRkdGMkZHRltvRjJGRw==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi4tRiw2JlEieEYnRi9GMkY1LUY5NiUtRiM2JS1GLDYmUSJ0RidGL0YyRjVGMi9GNlEnbm9ybWFsRidGMkZHLUkjbW9HRiQ2LlEiLEYnRjJGRy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZKNi5RIn5GJ0YyRkdGTS9GUEY0RlFGU0ZVRldGWUZlbi9GaW5GZ24tRiw2JlEidUYnRi9GMkY1RkBGSUZbby1GLDYmUSJwRidGL0YyRjVGQEYyRkdGMkZHRltvRjJGRw==</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70431" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Discretization Step  </Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70447" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70392" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYtLUkjbWlHRiQ2JlEtJiM5MTY7JiM5NjQ7RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYuUSJ+RidGMi9GNlEnbm9ybWFsRicvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZORjgtRjk2LlEpJkFzc2lnbjtGJ0YyRjxGPkZARkJGREZGRkhGSi9GTVEsMC4yNzc3Nzc4ZW1GJy9GUEZVRjgtSSZtZnJhY0dGJDYoLUYsNiZRIlRGJ0YvRjJGNS1GIzYmLUYsNiZRIk5GJ0YvRjJGNUYvRjJGNS8lLmxpbmV0aGlja25lc3NHUSIxRicvJStkZW5vbWFsaWduR1EnY2VudGVyRicvJSludW1hbGlnbkdGYW8vJSliZXZlbGxlZEdGNEY4LUY5Ni5RKyZOb3RFcXVhbDtGJ0YyRjxGPkZARkJGREZGRkhGSkZURlYtRiw2JlEoJiM5MTY7dEYnRi9GMkY1RjJGPA==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYtLUkjbWlHRiQ2JlEtJiM5MTY7JiM5NjQ7RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYuUSJ+RidGMi9GNlEnbm9ybWFsRicvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZORjgtRjk2LlEpJkFzc2lnbjtGJ0YyRjxGPkZARkJGREZGRkhGSi9GTVEsMC4yNzc3Nzc4ZW1GJy9GUEZVRjgtSSZtZnJhY0dGJDYoLUYsNiZRIlRGJ0YvRjJGNS1GIzYmLUYsNiZRIk5GJ0YvRjJGNUYvRjJGNS8lLmxpbmV0aGlja25lc3NHUSIxRicvJStkZW5vbWFsaWduR1EnY2VudGVyRicvJSludW1hbGlnbkdGYW8vJSliZXZlbGxlZEdGNEY4LUY5Ni5RKyZOb3RFcXVhbDtGJ0YyRjxGPkZARkJGREZGRkhGSkZURlYtRiw2JlEoJiM5MTY7dEYnRi9GMkY1RjJGPA==</Equation>, where <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEiTkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LlEifkYnRjIvRjZRJ25vcm1hbEYnLyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjQvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGTkYyRjw=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEiTkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LlEifkYnRjIvRjZRJ25vcm1hbEYnLyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjQvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGTkYyRjw=</Equation> is  a horizon step number and <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEoJiM5MTY7dEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEoJiM5MTY7dEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation> is sampling period.</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70389" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70386" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Discretized Problem</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70446" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">The discretized problems corresponding the problem are as follows.
</Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="group" postexecute="insert" drawcaption="false" drawtitle="false" width="68.08035714285714%" captionalignment="1" showinput="true" captionposition="1" id="Table2" alignment="center" randomized="false" labelreference="L70400" showgroup="true" order="row"><Table-Column weight="156" separator="true"></Table-Column><Table-Column weight="454" separator="false"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70416" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Performance Index:</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70442" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY0LUkjbWlHRiQ2JlEiSkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi4tRiw2JlEiVUYnRi9GMkY1LUY5NiUtRiM2Ji1GLDYmUSJ0RidGL0YyRjVGMi8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RicvRjZRJ25vcm1hbEYnRjJGSi1JI21vR0YkNi5RIixGJ0YyRkovJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGMS8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GTTYuUSJ+RidGMkZKRlAvRlNGNEZURlZGWEZaRmZuRmhuL0Zcb0Zqbi1GLDYmUSJ4RidGL0YyRjVGQEZMRl5vRkRGMkZHRkpGMkZKRl5vLUZNNi5RIj1GJ0YyRkpGUEZhb0ZURlZGWEZaRmZuL0ZpblEsMC4yNzc3Nzc4ZW1GJy9GXG9Gam9GXm8tRiw2JlEpJnZhcnBoaTtGJy9GMEY0RjJGSi1GOTYlLUYjNictSShtc3Vic3VwR0YkNihGY28tRiM2Ji1GLDYmUSJORidGL0YyRjVGMkZHRkotRiM2Ji1GTTYuUSIqRidGMkZKRlBGYW9GVEZWRlhGWkZmbi9GaW5RLDAuMTY2NjY2N2VtRicvRlxvRmJxRjJGR0ZKLyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0ZmcS9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRidGQEYyRkdGSkYyRkpGXm8tRk02LlEiK0YnRjJGSkZQRmFvRlRGVkZYRlpGZm4vRmluUSwwLjIyMjIyMjJlbUYnL0Zcb0ZgckZeby1JK211bmRlcm92ZXJHRiQ2Jy1GTTYwUSYmU3VtO0YnLyUrZm9yZWdyb3VuZEdRLlsxNDQsMTQ0LDE0NF1GJ0YyRkovRmpxUSZpbmVydEYnL0ZRUSZ1bnNldEYnL0ZTRl5zL0ZVRjEvRldGXnMvRllGMS9GZW5GMS9GZ25GXnNGaG5GY3EtRiM2KC1GLDYmUSJpRidGL0YyRjVGZm8tSSNtbkdGJDYlRmZxRjJGSkYyRkdGSi1GIzYoRmlwLUZNNi5RKCZtaW51cztGJ0YyRkpGUEZhb0ZURlZGWEZaRmZuRl9yRmFyLUZbdDYlUSIxRidGMkZKRjJGR0ZKRmZuLyUsYWNjZW50dW5kZXJHRjQtRiw2JlEiTEYnRi9GMkY1LUY5NiUtRiM2Ly1GZXA2KEZjby1GIzYmRmdzRjJGR0ZKRlxxRmRxRmdxRmlxRkBGTEZeby1GZXA2KC1GLDYmUSJ1RidGL0YyRjVGYHVGXHFGZHFGZ3FGaXFGQEZMRl5vLUZlcDYoLUYsNiZRInBGJ0YvRjJGNUZgdUZccUZkcUZncUZpcUZARjJGR0ZKRjJGSkZeby1GLDYmUS0mRGVsdGE7JnRhdTtGJ0YvRjJGNUYyRkdGSg==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY0LUkjbWlHRiQ2JlEiSkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi4tRiw2JlEiVUYnRi9GMkY1LUY5NiUtRiM2Ji1GLDYmUSJ0RidGL0YyRjVGMi8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RicvRjZRJ25vcm1hbEYnRjJGSi1JI21vR0YkNi5RIixGJ0YyRkovJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGMS8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GTTYuUSJ+RidGMkZKRlAvRlNGNEZURlZGWEZaRmZuRmhuL0Zcb0Zqbi1GLDYmUSJ4RidGL0YyRjVGQEZMRl5vRkRGMkZHRkpGMkZKRl5vLUZNNi5RIj1GJ0YyRkpGUEZhb0ZURlZGWEZaRmZuL0ZpblEsMC4yNzc3Nzc4ZW1GJy9GXG9Gam9GXm8tRiw2JlEpJnZhcnBoaTtGJy9GMEY0RjJGSi1GOTYlLUYjNictSShtc3Vic3VwR0YkNihGY28tRiM2Ji1GLDYmUSJORidGL0YyRjVGMkZHRkotRiM2Ji1GTTYuUSIqRidGMkZKRlBGYW9GVEZWRlhGWkZmbi9GaW5RLDAuMTY2NjY2N2VtRicvRlxvRmJxRjJGR0ZKLyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0ZmcS9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRidGQEYyRkdGSkYyRkpGXm8tRk02LlEiK0YnRjJGSkZQRmFvRlRGVkZYRlpGZm4vRmluUSwwLjIyMjIyMjJlbUYnL0Zcb0ZgckZeby1JK211bmRlcm92ZXJHRiQ2Jy1GTTYwUSYmU3VtO0YnLyUrZm9yZWdyb3VuZEdRLlsxNDQsMTQ0LDE0NF1GJ0YyRkovRmpxUSZpbmVydEYnL0ZRUSZ1bnNldEYnL0ZTRl5zL0ZVRjEvRldGXnMvRllGMS9GZW5GMS9GZ25GXnNGaG5GY3EtRiM2KC1GLDYmUSJpRidGL0YyRjVGZm8tSSNtbkdGJDYlRmZxRjJGSkYyRkdGSi1GIzYoRmlwLUZNNi5RKCZtaW51cztGJ0YyRkpGUEZhb0ZURlZGWEZaRmZuRl9yRmFyLUZbdDYlUSIxRidGMkZKRjJGR0ZKRmZuLyUsYWNjZW50dW5kZXJHRjQtRiw2JlEiTEYnRi9GMkY1LUY5NiUtRiM2Ly1GZXA2KEZjby1GIzYmRmdzRjJGR0ZKRlxxRmRxRmdxRmlxRkBGTEZeby1GZXA2KC1GLDYmUSJ1RidGL0YyRjVGYHVGXHFGZHFGZ3FGaXFGQEZMRl5vLUZlcDYoLUYsNiZRInBGJ0YvRjJGNUZgdUZccUZkcUZncUZpcUZARjJGR0ZKRjJGSkZeby1GLDYmUS0mRGVsdGE7JnRhdTtGJ0YvRjJGNUYyRkdGSg==</Equation><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70426" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Optimality Condition:</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70430" drawlabel="true">
<Input><Text-field style="Text" foreground="[255,0,0]" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYzLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2J1EieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiktRi82J1EiaUYnRjJGNUY4RjstSSNtb0dGJDYvUSIrRidGNUY4L0Y8USdub3JtYWxGJy8lJmZlbmNlR0Y6LyUqc2VwYXJhdG9yR0Y6LyUpc3RyZXRjaHlHRjovJSpzeW1tZXRyaWNHRjovJShsYXJnZW9wR0Y6LyUubW92YWJsZWxpbWl0c0dGOi8lJ2FjY2VudEdGOi8lJ2xzcGFjZUdRLDAuMjIyMjIyMmVtRicvJSdyc3BhY2VHRlktSSNtbkdGJDYmUSIxRidGNUY4RkdGNUY4LyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0ZHLUYjNictRkQ2L1EiKkYnRjVGOEZHRklGS0ZNRk9GUUZTRlUvRlhRLDAuMTY2NjY2N2VtRicvRmVuRmNvRjVGOEZqbkZHLyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Znby9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiYtRiM2Jy1GLzYnUSJ0RidGMkY1RjhGO0Y1RjhGam5GR0Y1RjhGRy1GRDYvUSJ+RidGNUY4RkdGSUZLRk1GT0ZRRlNGVS9GWFEmMC4wZW1GJy9GZW5GaXAtRkQ2L1EiPUYnRjVGOEZHRklGS0ZNRk9GUUZTRlUvRlhRLDAuMjc3Nzc3OGVtRicvRmVuRl9xRmVwLUYsNihGLi1GIzYnRkBGNUY4RmpuRkdGXW9GZW9GaG9Gam9GXXBGZXBGQ0ZlcC1GLzYnUSJmRidGMkY1RjhGOy1GXnA2Ji1GIzYwRmFxRl1wLUZENi9RIixGJ0Y1RjhGR0ZJL0ZMRjRGTUZPRlFGU0ZVRmhwL0ZlblEsMC4zMzMzMzMzZW1GJ0ZlcEZhcUZdcC1GRDYwRl5yRjVGOEZqbkZHRklGX3JGTUZPRlFGU0ZVRmhwRmByLUZENjBGZ3BGNUY4RmpuRkdGSUZLRk1GT0ZRRlNGVUZocEZqcC1GLDYoLUYvNihRInBGJ0YyRjVGOEZqbkY7LUYjNictRi82KEZCRjJGNUY4RmpuRjtGNUY4RmpuRkctRiM2Jy1GRDYwRmFvRjVGOEZqbkZHRklGS0ZNRk9GUUZTRlVGYm9GZG9GNUY4RmpuRkdGZW9GaG9Gam8tRl5wNictRiM2Jy1GLzYoRmRwRjJGNUY4RmpuRjtGNUY4RmpuRkdGNUY4RmpuRkdGNUY4RmpuRkdGNUY4RkctRi82J1EtJiM5MTY7JiM5NjQ7RidGMkY1RjhGO0Y1RjhGam5GRw==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYzLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2J1EieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiktRi82J1EiaUYnRjJGNUY4RjstSSNtb0dGJDYvUSIrRidGNUY4L0Y8USdub3JtYWxGJy8lJmZlbmNlR0Y6LyUqc2VwYXJhdG9yR0Y6LyUpc3RyZXRjaHlHRjovJSpzeW1tZXRyaWNHRjovJShsYXJnZW9wR0Y6LyUubW92YWJsZWxpbWl0c0dGOi8lJ2FjY2VudEdGOi8lJ2xzcGFjZUdRLDAuMjIyMjIyMmVtRicvJSdyc3BhY2VHRlktSSNtbkdGJDYmUSIxRidGNUY4RkdGNUY4LyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0ZHLUYjNictRkQ2L1EiKkYnRjVGOEZHRklGS0ZNRk9GUUZTRlUvRlhRLDAuMTY2NjY2N2VtRicvRmVuRmNvRjVGOEZqbkZHLyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Znby9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiYtRiM2Jy1GLzYnUSJ0RidGMkY1RjhGO0Y1RjhGam5GR0Y1RjhGRy1GRDYvUSJ+RidGNUY4RkdGSUZLRk1GT0ZRRlNGVS9GWFEmMC4wZW1GJy9GZW5GaXAtRkQ2L1EiPUYnRjVGOEZHRklGS0ZNRk9GUUZTRlUvRlhRLDAuMjc3Nzc3OGVtRicvRmVuRl9xRmVwLUYsNihGLi1GIzYnRkBGNUY4RmpuRkdGXW9GZW9GaG9Gam9GXXBGZXBGQ0ZlcC1GLzYnUSJmRidGMkY1RjhGOy1GXnA2Ji1GIzYwRmFxRl1wLUZENi9RIixGJ0Y1RjhGR0ZJL0ZMRjRGTUZPRlFGU0ZVRmhwL0ZlblEsMC4zMzMzMzMzZW1GJ0ZlcEZhcUZdcC1GRDYwRl5yRjVGOEZqbkZHRklGX3JGTUZPRlFGU0ZVRmhwRmByLUZENjBGZ3BGNUY4RmpuRkdGSUZLRk1GT0ZRRlNGVUZocEZqcC1GLDYoLUYvNihRInBGJ0YyRjVGOEZqbkY7LUYjNictRi82KEZCRjJGNUY4RmpuRjtGNUY4RmpuRkctRiM2Jy1GRDYwRmFvRjVGOEZqbkZHRklGS0ZNRk9GUUZTRlVGYm9GZG9GNUY4RmpuRkdGZW9GaG9Gam8tRl5wNictRiM2Jy1GLzYoRmRwRjJGNUY4RmpuRjtGNUY4RmpuRkdGNUY4RmpuRkdGNUY4RmpuRkdGNUY4RkctRi82J1EtJiM5MTY7JiM5NjQ7RidGMkY1RjhGO0Y1RjhGam5GRw==</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70414" drawlabel="true">
<Input><Text-field style="Text" foreground="[255,0,0]" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYtLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYlLUkjbW5HRiQ2JVEiMEYnRjUvRjlRJ25vcm1hbEYnRjVGQS1GIzYlLUkjbW9HRiQ2LlEiKkYnRjVGQS8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGSy8lKXN0cmV0Y2h5R0ZLLyUqc3ltbWV0cmljR0ZLLyUobGFyZ2VvcEdGSy8lLm1vdmFibGVsaW1pdHNHRksvJSdhY2NlbnRHRksvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZaRjVGQS8lMXN1cGVyc2NyaXB0c2hpZnRHRkAvJS9zdWJzY3JpcHRzaGlmdEdGQC9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2JS1GLzYmUSJ0RidGMkY1RjhGNUZBRjVGQS1GRjYuUSJ+RidGNUZBRklGTEZORlBGUkZURlYvRllRJjAuMGVtRicvRmZuRmpvLUZGNi5RIj1GJ0Y1RkFGSUZMRk5GUEZSRlRGVi9GWVEsMC4yNzc3Nzc4ZW1GJy9GZm5GYHBGZm9GLi1GX282JS1GIzYmRmNvRjUvJStleGVjdXRhYmxlR0ZLRkFGNUZBLUYvNiNRIUYnRjVGZnBGQQ==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYjLUkjbW5HRiQ2JVEiMEYnRjUvRjlRJ25vcm1hbEYnLUYjNiMtSSNtb0dGJDYuUSIqRidGNUZBLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0ZLLyUpc3RyZXRjaHlHRksvJSpzeW1tZXRyaWNHRksvJShsYXJnZW9wR0ZLLyUubW92YWJsZWxpbWl0c0dGSy8lJ2FjY2VudEdGSy8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRlovJTFzdXBlcnNjcmlwdHNoaWZ0R0ZALyUvc3Vic2NyaXB0c2hpZnRHRkAvSSttc2VtYW50aWNzR0YkUSxbbm9uZSxub25lXUYnLUkobWZlbmNlZEdGJDYlLUYjNiMtRi82JlEidEYnRjJGNUY4RjVGQS1GRjYuUSJ+RidGNUZBRklGTEZORlBGUkZURlYvRllRJjAuMGVtRicvRmZuRmpvLUZGNi5RIj1GJ0Y1RkFGSUZMRk5GUEZSRlRGVi9GWVEsMC4yNzc3Nzc4ZW1GJy9GZm5GYHBGZm9GLkZeby1GLzYjUSFGJw==</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70384" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70432" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYzLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2J1EpJmxhbWJkYTtGJy8lJ2l0YWxpY0dRJmZhbHNlRicvJStmb3JlZ3JvdW5kR1EqWzAsMCwyNTVdRicvJStleGVjdXRhYmxlR0Y0LyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1GIzYmLUYvNidRImlGJy9GM1EldHJ1ZUYnRjVGOC9GO1EnaXRhbGljRidGOC8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGOi1GIzYmLUkjbW9HRiQ2L1EiKkYnRjVGOEY6LyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjQvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EsMC4xNjY2NjY3ZW1GJy8lJ3JzcGFjZUdGaW5GOEZGRjovJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUvc3Vic2NyaXB0c2hpZnRHRl5vL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2Ji1GIzYmLUYvNidRInRGJ0ZCRjVGOEZERjhGRkY6RjVGOEY6LUZMNi9RIn5GJ0Y1RjhGOkZPRlFGU0ZVRldGWUZlbi9GaG5RJjAuMGVtRicvRltvRmBwLUZMNi9RIj1GJ0Y1RjhGOkZPRlFGU0ZVRldGWUZlbi9GaG5RLDAuMjc3Nzc3OGVtRicvRltvRmZwRlxwLUYsNihGLi1GIzYoRj8tRkw2L1EiK0YnRjVGOEY6Rk9GUUZTRlVGV0ZZRmVuL0ZoblEsMC4yMjIyMjIyZW1GJy9GW29GYHEtSSNtbkdGJDYmUSIxRidGNUY4RjpGOEZGRjpGSUZcb0Zfb0Zhb0Zkb0ZccEZccUZccC1GLDYoLUYvNidRIkhGJ0ZCRjVGOEZELUYjNiYtRi82J1EidUYnRkJGNUY4RkRGOEZGRjotRiM2Ji1GLzYnUSJURidGQkY1RjhGREY4RkZGOkZcb0Zfb0Zhby1GZW82Ji1GIzY7LUYsNigtRi82J1EieEYnRkJGNUY4RkRGPUZJRlxvRl9vRmFvRmRvRlxwLUZMNi9RIixGJ0Y1RjhGOkZPL0ZSRkNGU0ZVRldGWUZlbkZfcC9GW29RLDAuMzMzMzMzM2VtRidGXHBGaHBGZG9GXHBGXnNGXHAtRiw2KEZdckY9RklGXG9GX29GYW9GZG9GXHBGXnNGXHAtRiw2KC1GLzYnUSUmbXU7RidGMkY1RjhGOkY9RklGXG9GX29GYW9GZG9GXnNGXHBGXHAtRiw2KC1GLzYnUSJwRidGQkY1RjhGREY9RklGXG9GX29GYW9GZG9GOEZGRjpGNUY4RjotRi82J1EtJkRlbHRhOyZ0YXU7RidGQkY1RjhGREZec0Y4RkZGOg==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYzLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2J1EpJmxhbWJkYTtGJy8lJ2l0YWxpY0dRJmZhbHNlRicvJStmb3JlZ3JvdW5kR1EqWzAsMCwyNTVdRicvJStleGVjdXRhYmxlR0Y0LyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1GIzYmLUYvNidRImlGJy9GM1EldHJ1ZUYnRjVGOC9GO1EnaXRhbGljRidGOC8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGOi1GIzYmLUkjbW9HRiQ2L1EiKkYnRjVGOEY6LyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjQvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EsMC4xNjY2NjY3ZW1GJy8lJ3JzcGFjZUdGaW5GOEZGRjovJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUvc3Vic2NyaXB0c2hpZnRHRl5vL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2Ji1GIzYmLUYvNidRInRGJ0ZCRjVGOEZERjhGRkY6RjVGOEY6LUZMNi9RIn5GJ0Y1RjhGOkZPRlFGU0ZVRldGWUZlbi9GaG5RJjAuMGVtRicvRltvRmBwLUZMNi9RIj1GJ0Y1RjhGOkZPRlFGU0ZVRldGWUZlbi9GaG5RLDAuMjc3Nzc3OGVtRicvRltvRmZwRlxwLUYsNihGLi1GIzYoRj8tRkw2L1EiK0YnRjVGOEY6Rk9GUUZTRlVGV0ZZRmVuL0ZoblEsMC4yMjIyMjIyZW1GJy9GW29GYHEtSSNtbkdGJDYmUSIxRidGNUY4RjpGOEZGRjpGSUZcb0Zfb0Zhb0Zkb0ZccEZccUZccC1GLDYoLUYvNidRIkhGJ0ZCRjVGOEZELUYjNiYtRi82J1EidUYnRkJGNUY4RkRGOEZGRjotRiM2Ji1GLzYnUSJURidGQkY1RjhGREY4RkZGOkZcb0Zfb0Zhby1GZW82Ji1GIzY7LUYsNigtRi82J1EieEYnRkJGNUY4RkRGPUZJRlxvRl9vRmFvRmRvRlxwLUZMNi9RIixGJ0Y1RjhGOkZPL0ZSRkNGU0ZVRldGWUZlbkZfcC9GW29RLDAuMzMzMzMzM2VtRidGXHBGaHBGZG9GXHBGXnNGXHAtRiw2KEZdckY9RklGXG9GX29GYW9GZG9GXHBGXnNGXHAtRiw2KC1GLzYnUSUmbXU7RidGMkY1RjhGOkY9RklGXG9GX29GYW9GZG9GXnNGXHBGXHAtRiw2KC1GLzYnUSJwRidGQkY1RjhGREY9RklGXG9GX29GYW9GZG9GOEZGRjpGNUY4RjotRi82J1EtJkRlbHRhOyZ0YXU7RidGQkY1RjhGREZec0Y4RkZGOg==</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70434" drawlabel="true">
<Input><Text-field style="Text" foreground="[0,0,255]" layout="Normal"><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYtLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEnJiM5NTU7RicvJSdpdGFsaWNHUSZmYWxzZUYnLyUrZm9yZWdyb3VuZEdRKlswLDAsMjU1XUYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1GIzYlLUYvNiZRIk5GJy9GM1EldHJ1ZUYnRjUvRjlRJ2l0YWxpY0YnRjVGOC1GIzYlLUkjbW9HRiQ2LlEiKkYnRjVGOC8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRlpGNUY4LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Zpbi9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2JS1GLzYmUSJ0RidGQEY1RkJGNUY4RjVGOC1GRzYuUSJ+RidGNUY4RkpGTEZORlBGUkZURlYvRllRJjAuMGVtRicvRmZuRltwLUZHNi5RIj1GJ0Y1RjhGSkZMRk5GUEZSRlRGVi9GWVEsMC4yNzc3Nzc4ZW1GJy9GZm5GYXBGZ28tRiw2KC1GLzYmUScmIzk4MTtGJ0YyRjVGOC1GIzYnLUYvNiZRInhGJ0ZARjVGQkY1LyUrZXhlY3V0YWJsZUdGNC8lMGZvbnRfc3R5bGVfbmFtZUdRKDJEfk1hdGhGJ0Y4LUYjNictRi82JlEiVEYnRkBGNUZCRjVGXXFGX3FGOEZnbkZqbkZcby1GYG82JS1GIzYpLUYsNihGanAtRiM2J0Y9RjVGXXFGX3FGOC1GIzYnRkZGNUZdcUZfcUY4RmduRmpuRlxvLUZgbzYlLUYjNidGZG9GNUZdcUZfcUY4RjVGOC1GLzYjUSFGJ0Y1Rl1xRl9xRjhGNUY4RmVyRjVGXXFGOA==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEpJmxhbWJkYTtGJy8lJ2l0YWxpY0dRJmZhbHNlRicvJStmb3JlZ3JvdW5kR1EqWzAsMCwyNTVdRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLUYjNiMtRi82JlEiTkYnL0YzUSV0cnVlRidGNS9GOVEnaXRhbGljRictRiM2Iy1JI21vR0YkNi5RIipGJ0Y1RjgvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZaLyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Zpbi9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Iy1GLzYmUSJ0RidGQEY1RkJGNUY4LUZHNi5RIn5GJ0Y1RjhGSkZMRk5GUEZSRlRGVi9GWVEmMC4wZW1GJy9GZm5GW3AtRkc2LlEiPUYnRjVGOEZKRkxGTkZQRlJGVEZWL0ZZUSwwLjI3Nzc3NzhlbUYnL0ZmbkZhcEZnby1GLDYoLUYvNiZRKSZ2YXJwaGk7RidGMkY1RjgtRiM2Iy1GLzYmUSJ4RidGQEY1RkItRiM2Iy1GLzYmUSJURidGQEY1RkJGZ25Gam5GXG8tRmBvNiUtRiM2JS1GLDYoRmpwRjtGREZnbkZqbkZcb0Zfby1GLzYjUSFGJ0Y1RjhGaHE=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70444" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70420" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEiSEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtRi82JlEidUYnRjJGNUY4RjUvJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnL0Y5USdub3JtYWxGJy1GIzYmLUYvNiZRIlRGJ0YyRjVGOEY1RkBGQy8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRicvJS9zdWJzY3JpcHRzaGlmdEdGTC9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Oi1GLDYoLUYvNiZRInhGJ0YyRjVGOC1GIzYmLUYvNiZRImlGJ0YyRjVGOEY1RkBGQy1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGQy8lJmZlbmNlR0Y3LyUqc2VwYXJhdG9yR0Y3LyUpc3RyZXRjaHlHRjcvJSpzeW1tZXRyaWNHRjcvJShsYXJnZW9wR0Y3LyUubW92YWJsZWxpbWl0c0dGNy8lJ2FjY2VudEdGNy8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRmFwRjVGQEZDRkpGTUZPLUZTNiUtRiM2Ji1GLzYmUSJ0RidGMkY1RjhGNUZARkNGNUZDLUZebzYuUSJ+RidGNUZDRmFvRmNvRmVvRmdvRmlvRltwRl1wL0ZgcFEmMC4wZW1GJy9GY3BGX3EtRl5vNi5RIixGJ0Y1RkNGYW8vRmRvRjRGZW9GZ29GaW9GW3BGXXBGXnEvRmNwUSwwLjMzMzMzMzNlbUYnRltxLUYsNigtRi82JlEpJmxhbWJkYTtGJy9GM0Y3RjVGQy1GIzYoRmhuLUZebzYuUSIrRidGNUZDRmFvRmNvRmVvRmdvRmlvRltwRl1wL0ZgcFEsMC4yMjIyMjIyZW1GJy9GY3BGY3ItSSNtbkdGJDYlUSIxRidGNUZDRjVGQEZDRltvRkpGTUZPRmRwRltxRmFxRltxLUYsNihGPUZmbkZbb0ZKRk1GT0ZkcEZbcUZhcUZbcS1GLDYoLUYvNiZRJSZtdTtGJ0ZcckY1RkNGZm5GW29GSkZNRk9GZHAtRl5vNi9GY3FGNUZARkNGYW9GZHFGZW9GZ29GaW9GW3BGXXBGXnFGZXEtRl5vNi9GXXFGNUZARkNGYW9GY29GZW9GZ29GaW9GW3BGXXBGXnFGYHEtRiw2KC1GLzYnUSJwRidGMkY1RkBGOC1GIzYmLUYvNidGam5GMkY1RkBGOEY1RkBGQy1GIzYmLUZebzYvRmBvRjVGQEZDRmFvRmNvRmVvRmdvRmlvRltwRl1wRl9wRmJwRjVGQEZDRkpGTUZPLUZTNiYtRiM2Ji1GLzYnRmpwRjJGNUZARjhGNUZARkNGNUZARkNGNUZARkNGNUZDRltxLUZebzYuUSI9RidGNUZDRmFvRmNvRmVvRmdvRmlvRltwRl1wL0ZgcFEsMC4yNzc3Nzc4ZW1GJy9GY3BGW3VGW3EtRmZyNiVGTEY1RkNGNUZARkM=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEiSEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtRi82JlEidUYnRjJGNUY4RjUvJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnL0Y5USdub3JtYWxGJy1GIzYmLUYvNiZRIlRGJ0YyRjVGOEY1RkBGQy8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRicvJS9zdWJzY3JpcHRzaGlmdEdGTC9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Oi1GLDYoLUYvNiZRInhGJ0YyRjVGOC1GIzYmLUYvNiZRImlGJ0YyRjVGOEY1RkBGQy1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGQy8lJmZlbmNlR0Y3LyUqc2VwYXJhdG9yR0Y3LyUpc3RyZXRjaHlHRjcvJSpzeW1tZXRyaWNHRjcvJShsYXJnZW9wR0Y3LyUubW92YWJsZWxpbWl0c0dGNy8lJ2FjY2VudEdGNy8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRmFwRjVGQEZDRkpGTUZPLUZTNiUtRiM2Ji1GLzYmUSJ0RidGMkY1RjhGNUZARkNGNUZDLUZebzYuUSJ+RidGNUZDRmFvRmNvRmVvRmdvRmlvRltwRl1wL0ZgcFEmMC4wZW1GJy9GY3BGX3EtRl5vNi5RIixGJ0Y1RkNGYW8vRmRvRjRGZW9GZ29GaW9GW3BGXXBGXnEvRmNwUSwwLjMzMzMzMzNlbUYnRltxLUYsNigtRi82JlEpJmxhbWJkYTtGJy9GM0Y3RjVGQy1GIzYoRmhuLUZebzYuUSIrRidGNUZDRmFvRmNvRmVvRmdvRmlvRltwRl1wL0ZgcFEsMC4yMjIyMjIyZW1GJy9GY3BGY3ItSSNtbkdGJDYlUSIxRidGNUZDRjVGQEZDRltvRkpGTUZPRmRwRltxRmFxRltxLUYsNihGPUZmbkZbb0ZKRk1GT0ZkcEZbcUZhcUZbcS1GLDYoLUYvNiZRJSZtdTtGJ0ZcckY1RkNGZm5GW29GSkZNRk9GZHAtRl5vNi9GY3FGNUZARkNGYW9GZHFGZW9GZ29GaW9GW3BGXXBGXnFGZXEtRl5vNi9GXXFGNUZARkNGYW9GY29GZW9GZ29GaW9GW3BGXXBGXnFGYHEtRiw2KC1GLzYnUSJwRidGMkY1RkBGOC1GIzYmLUYvNidGam5GMkY1RkBGOEY1RkBGQy1GIzYmLUZebzYvRmBvRjVGQEZDRmFvRmNvRmVvRmdvRmlvRltwRl1wRl9wRmJwRjVGQEZDRkpGTUZPLUZTNiYtRiM2Ji1GLzYnRmpwRjJGNUZARjhGNUZARkNGNUZARkNGNUZARkNGNUZDRltxLUZebzYuUSI9RidGNUZDRmFvRmNvRmVvRmdvRmlvRltwRl1wL0ZgcFEsMC4yNzc3Nzc4ZW1GJy9GY3BGW3VGW3EtRmZyNiVGTEY1RkNGNUZARkM=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70418" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNjEtSShtc3Vic3VwR0YkNigtRiw2JlEieEYnRi9GMkY1LUYjNiYtRiw2JlEiaUYnRi9GMkY1RjIvJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnL0Y2USdub3JtYWxGJy1GIzYmLUkjbW9HRiQ2LlEiKkYnRjJGSy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRl1vRjJGSEZLLyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Ziby9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictRjk2JS1GIzYmLUYsNiZRInRGJ0YvRjJGNUYyRkhGS0YyRkstRlA2LlEiLEYnRjJGS0ZTL0ZWRjFGV0ZZRmVuRmduRmluL0Zcb1EmMC4wZW1GJy9GX29RLDAuMzMzMzMzM2VtRictRlA2LlEifkYnRjJGS0ZTRlVGV0ZZRmVuRmduRmluRmNwL0Zfb0ZkcEZncC1GPjYoLUYsNiZRInVGJ0YvRjJGNUZDRk1GYG9GY29GZW9GaG9GX3BGZ3BGZ3AtRj42KC1GLDYmUSJwRidGL0YyRjVGQ0ZNRmBvRmNvRmVvRmhvRjJGSEZLRjJGSy1GUDYuUSI9RidGMkZLRlNGVUZXRllGZW5GZ25GaW4vRlxvUSwwLjI3Nzc3NzhlbUYnL0Zfb0ZpcUZncC1JI21uR0YkNiVGYm9GMkZLRjJGSEZL">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2JlEiQ0YnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNjEtSShtc3Vic3VwR0YkNigtRiw2JlEieEYnRi9GMkY1LUYjNiYtRiw2JlEiaUYnRi9GMkY1RjIvJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnL0Y2USdub3JtYWxGJy1GIzYmLUkjbW9HRiQ2LlEiKkYnRjJGSy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRl1vRjJGSEZLLyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Ziby9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictRjk2JS1GIzYmLUYsNiZRInRGJ0YvRjJGNUYyRkhGS0YyRkstRlA2LlEiLEYnRjJGS0ZTL0ZWRjFGV0ZZRmVuRmduRmluL0Zcb1EmMC4wZW1GJy9GX29RLDAuMzMzMzMzM2VtRictRlA2LlEifkYnRjJGS0ZTRlVGV0ZZRmVuRmduRmluRmNwL0Zfb0ZkcEZncC1GPjYoLUYsNiZRInVGJ0YvRjJGNUZDRk1GYG9GY29GZW9GaG9GX3BGZ3BGZ3AtRj42KC1GLDYmUSJwRidGL0YyRjVGQ0ZNRmBvRmNvRmVvRmhvRjJGSEZLRjJGSy1GUDYuUSI9RidGMkZLRlNGVUZXRllGZW5GZ25GaW4vRlxvUSwwLjI3Nzc3NzhlbUYnL0Zfb0ZpcUZncC1JI21uR0YkNiVGYm9GMkZLRjJGSEZL</Equation><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70379" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Hamiltonian:</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70394" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY3LUkjbWlHRiQ2JlEiSEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNjEtRiw2JlEieEYnRi9GMkY1LUkjbW9HRiQ2LlEiLEYnRjIvRjZRJ25vcm1hbEYnLyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjEvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdRLDAuMzMzMzMzM2VtRictRkE2LlEifkYnRjJGREZGL0ZJRjRGSkZMRk5GUEZSRlQvRlhGVi1GLDYmUScmIzk1NTtGJy9GMEY0RjJGREZARlotRiw2JlEidUYnRi9GMkY1RkBGWi1GLDYmUScmIzk1NjtGJ0Zcb0YyRkRGQEZaLUYsNiZRInBGJ0YvRjJGNUYyRkRGMkZERlotRkE2LlEqJmNvbG9uZXE7RidGMkZERkZGZ25GSkZMRk5GUEZSL0ZVUSwwLjI3Nzc3NzhlbUYnL0ZYRmpvRlotRiw2JlEiTEYnRi9GMkY1LUY5NiUtRiM2K0Y9RkBGWkZdb0ZARlpGY29GMkZERjJGREZaLUZBNi5RIitGJ0YyRkRGRkZnbkZKRkxGTkZQRlIvRlVRLDAuMjIyMjIyMmVtRicvRlhGZ3BGWi1JJW1zdXBHRiQ2JUZpbi1GIzYmLUYsNiZRIlRGJ0YvRjJGNUYvRjJGNS8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRictRiw2JlEiZkYnRi9GMkY1Rl9wRlpGY3AtRmpwNiVGYG9GXHFGYXEtRiw2JlEiQ0YnRi9GMkY1Rl9wRlpGMkZE">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY3LUkjbWlHRiQ2JlEiSEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNjEtRiw2JlEieEYnRi9GMkY1LUkjbW9HRiQ2LlEiLEYnRjIvRjZRJ25vcm1hbEYnLyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjEvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdRLDAuMzMzMzMzM2VtRictRkE2LlEifkYnRjJGREZGL0ZJRjRGSkZMRk5GUEZSRlQvRlhGVi1GLDYmUScmIzk1NTtGJy9GMEY0RjJGREZARlotRiw2JlEidUYnRi9GMkY1RkBGWi1GLDYmUScmIzk1NjtGJ0Zcb0YyRkRGQEZaLUYsNiZRInBGJ0YvRjJGNUYyRkRGMkZERlotRkE2LlEqJmNvbG9uZXE7RidGMkZERkZGZ25GSkZMRk5GUEZSL0ZVUSwwLjI3Nzc3NzhlbUYnL0ZYRmpvRlotRiw2JlEiTEYnRi9GMkY1LUY5NiUtRiM2K0Y9RkBGWkZdb0ZARlpGY29GMkZERjJGREZaLUZBNi5RIitGJ0YyRkRGRkZnbkZKRkxGTkZQRlIvRlVRLDAuMjIyMjIyMmVtRicvRlhGZ3BGWi1JJW1zdXBHRiQ2JUZpbi1GIzYmLUYsNiZRIlRGJ0YvRjJGNUYvRjJGNS8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRictRiw2JlEiZkYnRi9GMkY1Rl9wRlpGY3AtRmpwNiVGYG9GXHFGYXEtRiw2JlEiQ0YnRi9GMkY1Rl9wRlpGMkZE</Equation></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="2"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70404" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtRi82JlEiaUYnRjJGNUY4RjJGNUY4LUYjNiYtSSNtb0dGJDYuUSIqRidGNS9GOVEnbm9ybWFsRicvJSZmZW5jZUdGNy8lKnNlcGFyYXRvckdGNy8lKXN0cmV0Y2h5R0Y3LyUqc3ltbWV0cmljR0Y3LyUobGFyZ2VvcEdGNy8lLm1vdmFibGVsaW1pdHNHRjcvJSdhY2NlbnRHRjcvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZYRjJGNUY4LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Znbi9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Ji1GLzYmUSJ0RidGMkY1RjhGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGRkY1RkYtRkM2LlEiLEYnRjVGRkZIL0ZLRjRGTEZORlBGUkZUL0ZXUSYwLjBlbUYnL0ZaUSwwLjMzMzMzMzNlbUYnLUZDNi5RIn5GJ0Y1RkZGSEZKRkxGTkZQRlJGVEZccC9GWkZdcC1GXm82JS1GIzY0Rj1GYHAtRkM2LlEiPUYnRjVGRkZIRkpGTEZORlBGUkZUL0ZXUSwwLjI3Nzc3NzhlbUYnL0ZaRlxxRmBwLUkjbW5HRiQ2JUZnbkY1RkZGaG9GYHAtRkM2LlEjLi5GJ0Y1RkZGSEZKRkxGTkZQRlJGVC9GV1EsMC4yMjIyMjIyZW1GJ0ZjcC1GQzYuUSIuRidGNUZGRkhGSkZMRk5GUEZSRlRGXHBGY3BGYHBGaG9GYHAtRi82JlEiTkYnRjJGNUY4LUZDNi5RKCZtaW51cztGJ0Y1RkZGSEZKRkxGTkZQRlJGVEZkcS9GWkZlcS1GX3E2JVEiMUYnRjVGRkY1RmVvRkZGNUZGLUYvNiNRIUYnRjVGZW9GRg==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtRi82JlEiaUYnRjJGNUY4RjJGNUY4LUYjNiYtSSNtb0dGJDYuUSIqRidGNS9GOVEnbm9ybWFsRicvJSZmZW5jZUdGNy8lKnNlcGFyYXRvckdGNy8lKXN0cmV0Y2h5R0Y3LyUqc3ltbWV0cmljR0Y3LyUobGFyZ2VvcEdGNy8lLm1vdmFibGVsaW1pdHNHRjcvJSdhY2NlbnRHRjcvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZYRjJGNUY4LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Znbi9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Ji1GLzYmUSJ0RidGMkY1RjhGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGRkY1RkYtRkM2LlEiLEYnRjVGRkZIL0ZLRjRGTEZORlBGUkZUL0ZXUSYwLjBlbUYnL0ZaUSwwLjMzMzMzMzNlbUYnLUZDNi5RIn5GJ0Y1RkZGSEZKRkxGTkZQRlJGVEZccC9GWkZdcC1GXm82JS1GIzY0Rj1GYHAtRkM2LlEiPUYnRjVGRkZIRkpGTEZORlBGUkZUL0ZXUSwwLjI3Nzc3NzhlbUYnL0ZaRlxxRmBwLUkjbW5HRiQ2JUZnbkY1RkZGaG9GYHAtRkM2LlEjLi5GJ0Y1RkZGSEZKRkxGTkZQRlJGVC9GV1EsMC4yMjIyMjIyZW1GJ0ZjcC1GQzYuUSIuRidGNUZGRkhGSkZMRk5GUEZSRlRGXHBGY3BGYHBGaG9GYHAtRi82JlEiTkYnRjJGNUY4LUZDNi5RKCZtaW51cztGJ0Y1RkZGSEZKRkxGTkZQRlJGVEZkcS9GWkZlcS1GX3E2JVEiMUYnRjVGRkY1RmVvRkZGNUZGLUYvNiNRIUYnRjVGZW9GRg==</Equation>:  Control sequence  (The sequence is optimized at each time <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation>.)
<Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtRi82JlEiaUYnRjJGNUY4RjJGNUY4LUYjNiYtSSNtb0dGJDYuUSIqRidGNS9GOVEnbm9ybWFsRicvJSZmZW5jZUdGNy8lKnNlcGFyYXRvckdGNy8lKXN0cmV0Y2h5R0Y3LyUqc3ltbWV0cmljR0Y3LyUobGFyZ2VvcEdGNy8lLm1vdmFibGVsaW1pdHNHRjcvJSdhY2NlbnRHRjcvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZYRjJGNUY4LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Znbi9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Ji1GLzYmUSJ0RidGMkY1RjhGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGRkY1RkYtRkM2LlEiLEYnRjVGRkZIL0ZLRjRGTEZORlBGUkZUL0ZXUSYwLjBlbUYnL0ZaUSwwLjMzMzMzMzNlbUYnLUZDNi5RIn5GJ0Y1RkZGSEZKRkxGTkZQRlJGVEZccC9GWkZdcC1GXm82JS1GIzYyRj1GYHAtRkM2LlEiPUYnRjVGRkZIRkpGTEZORlBGUkZUL0ZXUSwwLjI3Nzc3NzhlbUYnL0ZaRlxxRmBwLUkjbW5HRiQ2JUZnbkY1RkZGaG9GYHAtRkM2LlEjLi5GJ0Y1RkZGSEZKRkxGTkZQRlJGVC9GV1EsMC4yMjIyMjIyZW1GJ0ZjcC1GQzYuUSIuRidGNUZGRkhGSkZMRk5GUEZSRlRGXHBGY3BGYHBGaG9GYHAtRi82JlEiTkYnRjJGNUY4RjVGZW9GRkY1RkZGNUZlb0ZG">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtRi82JlEiaUYnRjJGNUY4RjJGNUY4LUYjNiYtSSNtb0dGJDYuUSIqRidGNS9GOVEnbm9ybWFsRicvJSZmZW5jZUdGNy8lKnNlcGFyYXRvckdGNy8lKXN0cmV0Y2h5R0Y3LyUqc3ltbWV0cmljR0Y3LyUobGFyZ2VvcEdGNy8lLm1vdmFibGVsaW1pdHNHRjcvJSdhY2NlbnRHRjcvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZYRjJGNUY4LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Znbi9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Ji1GLzYmUSJ0RidGMkY1RjhGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGRkY1RkYtRkM2LlEiLEYnRjVGRkZIL0ZLRjRGTEZORlBGUkZUL0ZXUSYwLjBlbUYnL0ZaUSwwLjMzMzMzMzNlbUYnLUZDNi5RIn5GJ0Y1RkZGSEZKRkxGTkZQRlJGVEZccC9GWkZdcC1GXm82JS1GIzYyRj1GYHAtRkM2LlEiPUYnRjVGRkZIRkpGTEZORlBGUkZUL0ZXUSwwLjI3Nzc3NzhlbUYnL0ZaRlxxRmBwLUkjbW5HRiQ2JUZnbkY1RkZGaG9GYHAtRkM2LlEjLi5GJ0Y1RkZGSEZKRkxGTkZQRlJGVC9GV1EsMC4yMjIyMjIyZW1GJ0ZjcC1GQzYuUSIuRidGNUZGRkhGSkZMRk5GUEZSRlRGXHBGY3BGYHBGaG9GYHAtRi82JlEiTkYnRjJGNUY4RjVGZW9GRkY1RkZGNUZlb0ZG</Equation>: State sequence</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70395" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEnJiM5NTY7RicvJSdpdGFsaWNHUSZmYWxzZUYnLyUrZXhlY3V0YWJsZUdGNC8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRiM2Ji1GLzYmUSJpRicvRjNRJXRydWVGJ0Y1L0Y4USdpdGFsaWNGJ0Y/RjVGQS1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGNy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRllGP0Y1RkEvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUvc3Vic2NyaXB0c2hpZnRHRmhuL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYmLUYvNiZRInRGJ0Y/RjVGQUY1LyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0Y3RjVGNy1GRjYuUSIsRidGNUY3RkkvRkxGQEZNRk9GUUZTRlUvRlhRJjAuMGVtRicvRmVuUSwwLjMzMzMzMzNlbUYnLUZGNi5RIn5GJ0Y1RjdGSUZLRk1GT0ZRRlNGVUZdcC9GZW5GXnAtRl9vNiUtRiM2NEY8RmFwLUZGNi5RIj1GJ0Y1RjdGSUZLRk1GT0ZRRlNGVS9GWFEsMC4yNzc3Nzc4ZW1GJy9GZW5GXXFGYXAtSSNtbkdGJDYlRmhuRjVGN0Zpb0ZhcC1GRjYuUSMuLkYnRjVGN0ZJRktGTUZPRlFGU0ZVL0ZYUSwwLjIyMjIyMjJlbUYnRmRwLUZGNi5RIi5GJ0Y1RjdGSUZLRk1GT0ZRRlNGVUZdcEZkcEZhcEZpb0ZhcC1GLzYmUSJORidGP0Y1RkEtRkY2LlEoJm1pbnVzO0YnRjVGN0ZJRktGTUZPRlFGU0ZVRmVxL0ZlbkZmcS1GYHE2JVEiMUYnRjVGN0Y1RmZvRjdGNUY3RmFwRjVGZm9GNw==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEnJiM5NTY7RicvJSdpdGFsaWNHUSZmYWxzZUYnLyUrZXhlY3V0YWJsZUdGNC8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRiM2Ji1GLzYmUSJpRicvRjNRJXRydWVGJ0Y1L0Y4USdpdGFsaWNGJ0Y/RjVGQS1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGNy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRllGP0Y1RkEvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUvc3Vic2NyaXB0c2hpZnRHRmhuL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYmLUYvNiZRInRGJ0Y/RjVGQUY1LyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0Y3RjVGNy1GRjYuUSIsRidGNUY3RkkvRkxGQEZNRk9GUUZTRlUvRlhRJjAuMGVtRicvRmVuUSwwLjMzMzMzMzNlbUYnLUZGNi5RIn5GJ0Y1RjdGSUZLRk1GT0ZRRlNGVUZdcC9GZW5GXnAtRl9vNiUtRiM2NEY8RmFwLUZGNi5RIj1GJ0Y1RjdGSUZLRk1GT0ZRRlNGVS9GWFEsMC4yNzc3Nzc4ZW1GJy9GZW5GXXFGYXAtSSNtbkdGJDYlRmhuRjVGN0Zpb0ZhcC1GRjYuUSMuLkYnRjVGN0ZJRktGTUZPRlFGU0ZVL0ZYUSwwLjIyMjIyMjJlbUYnRmRwLUZGNi5RIi5GJ0Y1RjdGSUZLRk1GT0ZRRlNGVUZdcEZkcEZhcEZpb0ZhcC1GLzYmUSJORidGP0Y1RkEtRkY2LlEoJm1pbnVzO0YnRjVGN0ZJRktGTUZPRlFGU0ZVRmVxL0ZlbkZmcS1GYHE2JVEiMUYnRjVGN0Y1RmZvRjdGNUY3RmFwRjVGZm9GNw==</Equation>  : Multiplier sequence</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70437" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEnJiM5NTU7RicvJSdpdGFsaWNHUSZmYWxzZUYnLyUrZXhlY3V0YWJsZUdGNC8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRiM2Ji1GLzYmUSJpRicvRjNRJXRydWVGJ0Y1L0Y4USdpdGFsaWNGJ0Y/RjVGQS1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGNy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRllGP0Y1RkEvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUvc3Vic2NyaXB0c2hpZnRHRmhuL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYmLUYvNiZRInRGJ0Y/RjVGQUY1LyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0Y3RjVGNy1GRjYuUSIsRidGNUY3RkkvRkxGQEZNRk9GUUZTRlUvRlhRJjAuMGVtRicvRmVuUSwwLjMzMzMzMzNlbUYnLUZGNi5RIn5GJ0Y1RjdGSUZLRk1GT0ZRRlNGVUZdcC9GZW5GXnAtRl9vNiUtRiM2MkY8RmFwLUZGNi5RIj1GJ0Y1RjdGSUZLRk1GT0ZRRlNGVS9GWFEsMC4yNzc3Nzc4ZW1GJy9GZW5GXXFGYXAtSSNtbkdGJDYlRmhuRjVGN0Zpb0ZhcC1GRjYuUSMuLkYnRjVGN0ZJRktGTUZPRlFGU0ZVL0ZYUSwwLjIyMjIyMjJlbUYnRmRwLUZGNi5RIi5GJ0Y1RjdGSUZLRk1GT0ZRRlNGVUZdcEZkcEZhcEZpb0ZhcC1GLzYmUSJORidGP0Y1RkFGNUZmb0Y3RjVGN0Y1RmZvRjc=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEnJiM5NTU7RicvJSdpdGFsaWNHUSZmYWxzZUYnLyUrZXhlY3V0YWJsZUdGNC8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRiM2Ji1GLzYmUSJpRicvRjNRJXRydWVGJ0Y1L0Y4USdpdGFsaWNGJ0Y/RjVGQS1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGNy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRllGP0Y1RkEvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUvc3Vic2NyaXB0c2hpZnRHRmhuL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYmLUYvNiZRInRGJ0Y/RjVGQUY1LyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0Y3RjVGNy1GRjYuUSIsRidGNUY3RkkvRkxGQEZNRk9GUUZTRlUvRlhRJjAuMGVtRicvRmVuUSwwLjMzMzMzMzNlbUYnLUZGNi5RIn5GJ0Y1RjdGSUZLRk1GT0ZRRlNGVUZdcC9GZW5GXnAtRl9vNiUtRiM2MkY8RmFwLUZGNi5RIj1GJ0Y1RjdGSUZLRk1GT0ZRRlNGVS9GWFEsMC4yNzc3Nzc4ZW1GJy9GZW5GXXFGYXAtSSNtbkdGJDYlRmhuRjVGN0Zpb0ZhcC1GRjYuUSMuLkYnRjVGN0ZJRktGTUZPRlFGU0ZVL0ZYUSwwLjIyMjIyMjJlbUYnRmRwLUZGNi5RIi5GJ0Y1RjdGSUZLRk1GT0ZRRlNGVUZdcEZkcEZhcEZpb0ZhcC1GLzYmUSJORidGP0Y1RkFGNUZmb0Y3RjVGN0Y1RmZvRjc=</Equation>  : Costate sequence</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70382" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70459" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Given the initial state of the discretized problem,  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtSSNtbkdGJDYlUSIwRidGNS9GOVEnbm9ybWFsRidGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGQS1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGQS8lJmZlbmNlR0Y3LyUqc2VwYXJhdG9yR0Y3LyUpc3RyZXRjaHlHRjcvJSpzeW1tZXRyaWNHRjcvJShsYXJnZW9wR0Y3LyUubW92YWJsZWxpbWl0c0dGNy8lJ2FjY2VudEdGNy8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRmZuRjVGQ0ZBLyUxc3VwZXJzY3JpcHRzaGlmdEdGQC8lL3N1YnNjcmlwdHNoaWZ0R0ZAL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYmLUYvNiZRInRGJ0YyRjVGOEY1RkNGQUY1RkEtRkk2LlEifkYnRjVGQUZMRk5GUEZSRlRGVkZYL0ZlblEmMC4wZW1GJy9GaG5GXHAtRkk2LlEiPUYnRjVGQUZMRk5GUEZSRlRGVkZYL0ZlblEsMC4yNzc3Nzc4ZW1GJy9GaG5GYnBGaG9GLi1GYW82JS1GIzYlRmVvRjVGQUY1RkEtRi82I1EhRidGNUZB">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtSSNtbkdGJDYlUSIwRidGNS9GOVEnbm9ybWFsRidGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGQS1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGQS8lJmZlbmNlR0Y3LyUqc2VwYXJhdG9yR0Y3LyUpc3RyZXRjaHlHRjcvJSpzeW1tZXRyaWNHRjcvJShsYXJnZW9wR0Y3LyUubW92YWJsZWxpbWl0c0dGNy8lJ2FjY2VudEdGNy8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRmZuRjVGQ0ZBLyUxc3VwZXJzY3JpcHRzaGlmdEdGQC8lL3N1YnNjcmlwdHNoaWZ0R0ZAL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYmLUYvNiZRInRGJ0YyRjVGOEY1RkNGQUY1RkEtRkk2LlEifkYnRjVGQUZMRk5GUEZSRlRGVkZYL0ZlblEmMC4wZW1GJy9GaG5GXHAtRkk2LlEiPUYnRjVGQUZMRk5GUEZSRlRGVkZYL0ZlblEsMC4yNzc3Nzc4ZW1GJy9GaG5GYnBGaG9GLi1GYW82JS1GIzYlRmVvRjVGQUY1RkEtRi82I1EhRidGNUZB</Equation>, the control sequence  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtRi82JlEiaUYnRjJGNUY4RjJGNUY4LUYjNiYtSSNtb0dGJDYuUSIqRidGNS9GOVEnbm9ybWFsRicvJSZmZW5jZUdGNy8lKnNlcGFyYXRvckdGNy8lKXN0cmV0Y2h5R0Y3LyUqc3ltbWV0cmljR0Y3LyUobGFyZ2VvcEdGNy8lLm1vdmFibGVsaW1pdHNHRjcvJSdhY2NlbnRHRjcvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZYRjJGNUY4LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Znbi9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Ji1GLzYmUSJ0RidGMkY1RjhGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGRkY1RkYtRkM2LlEiLEYnRjVGRkZIL0ZLRjRGTEZORlBGUkZUL0ZXUSYwLjBlbUYnL0ZaUSwwLjMzMzMzMzNlbUYnLUZDNi5RIn5GJ0Y1RkZGSEZKRkxGTkZQRlJGVEZccC9GWkZdcC1GXm82JS1GIzYwRj0tRkM2LlEiPUYnRjVGRkZIRkpGTEZORlBGUkZUL0ZXUSwwLjI3Nzc3NzhlbUYnL0ZaRlxxLUkjbW5HRiQ2JUZnbkY1RkZGaG9GYHAtRkM2LlEjLi5GJ0Y1RkZGSEZKRkxGTkZQRlJGVC9GV1EsMC4yMjIyMjIyZW1GJ0ZjcC1GQzYuUSIuRidGNUZGRkhGSkZMRk5GUEZSRlRGXHBGY3BGYHAtRi82JlEiTkYnRjJGNUY4LUZDNi5RKCZtaW51cztGJ0Y1RkZGSEZKRkxGTkZQRlJGVEZkcS9GWkZlcS1GX3E2JVEiMUYnRjVGRkY1RmVvRkZGNUZGRjVGZW9GRg==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtRi82JlEiaUYnRjJGNUY4RjJGNUY4LUYjNiYtSSNtb0dGJDYuUSIqRidGNS9GOVEnbm9ybWFsRicvJSZmZW5jZUdGNy8lKnNlcGFyYXRvckdGNy8lKXN0cmV0Y2h5R0Y3LyUqc3ltbWV0cmljR0Y3LyUobGFyZ2VvcEdGNy8lLm1vdmFibGVsaW1pdHNHRjcvJSdhY2NlbnRHRjcvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZYRjJGNUY4LyUxc3VwZXJzY3JpcHRzaGlmdEdRIjBGJy8lL3N1YnNjcmlwdHNoaWZ0R0Znbi9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRictSShtZmVuY2VkR0YkNiUtRiM2Ji1GLzYmUSJ0RidGMkY1RjhGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGRkY1RkYtRkM2LlEiLEYnRjVGRkZIL0ZLRjRGTEZORlBGUkZUL0ZXUSYwLjBlbUYnL0ZaUSwwLjMzMzMzMzNlbUYnLUZDNi5RIn5GJ0Y1RkZGSEZKRkxGTkZQRlJGVEZccC9GWkZdcC1GXm82JS1GIzYwRj0tRkM2LlEiPUYnRjVGRkZIRkpGTEZORlBGUkZUL0ZXUSwwLjI3Nzc3NzhlbUYnL0ZaRlxxLUkjbW5HRiQ2JUZnbkY1RkZGaG9GYHAtRkM2LlEjLi5GJ0Y1RkZGSEZKRkxGTkZQRlJGVC9GV1EsMC4yMjIyMjIyZW1GJ0ZjcC1GQzYuUSIuRidGNUZGRkhGSkZMRk5GUEZSRlRGXHBGY3BGYHAtRi82JlEiTkYnRjJGNUY4LUZDNi5RKCZtaW51cztGJ0Y1RkZGSEZKRkxGTkZQRlJGVEZkcS9GWkZlcS1GX3E2JVEiMUYnRjVGRkY1RmVvRkZGNUZGRjVGZW9GRg==</Equation> is optimized at each time <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation>. The actual control input to the system is given by <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1JI21vR0YkNi5RIn5GJ0YyRkAvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZWLUZDNi5RIj1GJ0YyRkBGRkZIRkpGTEZORlBGUi9GVVEsMC4yNzc3Nzc4ZW1GJy9GWEZnbkZCLUYjNiYtSShtc3Vic3VwR0YkNihGKy1GIzYlLUkjbW5HRiQ2JVEiMEYnRjJGQEYyRkAtRiM2JS1GQzYuUSIqRidGMkZARkZGSEZKRkxGTkZQRlIvRlVRLDAuMTY2NjY2N2VtRicvRlhGam9GMkZALyUxc3VwZXJzY3JpcHRzaGlmdEdGY28vJS9zdWJzY3JpcHRzaGlmdEdGY28vSSttc2VtYW50aWNzR0YkUSxbbm9uZSxub25lXUYnRjhGMkZARkJGMkZA">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1JI21vR0YkNi5RIn5GJ0YyRkAvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZWLUZDNi5RIj1GJ0YyRkBGRkZIRkpGTEZORlBGUi9GVVEsMC4yNzc3Nzc4ZW1GJy9GWEZnbkZCLUYjNiYtSShtc3Vic3VwR0YkNihGKy1GIzYlLUkjbW5HRiQ2JVEiMEYnRjJGQEYyRkAtRiM2JS1GQzYuUSIqRidGMkZARkZGSEZKRkxGTkZQRlIvRlVRLDAuMTY2NjY2N2VtRicvRlhGam9GMkZALyUxc3VwZXJzY3JpcHRzaGlmdEdGY28vJS9zdWJzY3JpcHRzaGlmdEdGY28vSSttc2VtYW50aWNzR0YkUSxbbm9uZSxub25lXUYnRjhGMkZARkJGMkZA</Equation>. State <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiUtRi82JlEiaUYnRjJGNUY4RjUvRjlRJ25vcm1hbEYnLUYjNiUtSSNtb0dGJDYuUSIqRidGNUZALyUmZmVuY2VHRjcvJSpzZXBhcmF0b3JHRjcvJSlzdHJldGNoeUdGNy8lKnN5bW1ldHJpY0dGNy8lKGxhcmdlb3BHRjcvJS5tb3ZhYmxlbGltaXRzR0Y3LyUnYWNjZW50R0Y3LyUnbHNwYWNlR1EsMC4xNjY2NjY3ZW1GJy8lJ3JzcGFjZUdGWEY1RkAvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUvc3Vic2NyaXB0c2hpZnRHRmduL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYlLUYvNiZRInRGJ0YyRjVGOEY1RkBGNUZARjVGQA==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiUtRi82JlEiaUYnRjJGNUY4RjUvRjlRJ25vcm1hbEYnLUYjNiUtSSNtb0dGJDYuUSIqRidGNUZALyUmZmVuY2VHRjcvJSpzZXBhcmF0b3JHRjcvJSlzdHJldGNoeUdGNy8lKnN5bW1ldHJpY0dGNy8lKGxhcmdlb3BHRjcvJS5tb3ZhYmxlbGltaXRzR0Y3LyUnYWNjZW50R0Y3LyUnbHNwYWNlR1EsMC4xNjY2NjY3ZW1GJy8lJ3JzcGFjZUdGWEY1RkAvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLyUvc3Vic2NyaXB0c2hpZnRHRmduL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYlLUYvNiZRInRGJ0YyRjVGOEY1RkBGNUZARjVGQA==</Equation> and costate  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEnJiM5NTU7RicvJSdpdGFsaWNHUSZmYWxzZUYnLyUrZXhlY3V0YWJsZUdGNC8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRiM2JS1GLzYmUSJpRicvRjNRJXRydWVGJ0Y1L0Y4USdpdGFsaWNGJ0Y1RjctRiM2JS1JI21vR0YkNi5RIipGJ0Y1RjcvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZZRjVGNy8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRicvJS9zdWJzY3JpcHRzaGlmdEdGaG4vSSttc2VtYW50aWNzR0YkUSxbbm9uZSxub25lXUYnLUkobWZlbmNlZEdGJDYlLUYjNiUtRi82JlEidEYnRj9GNUZBRjVGN0Y1RjdGNUY3">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEnJiM5NTU7RicvJSdpdGFsaWNHUSZmYWxzZUYnLyUrZXhlY3V0YWJsZUdGNC8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictRiM2JS1GLzYmUSJpRicvRjNRJXRydWVGJ0Y1L0Y4USdpdGFsaWNGJ0Y1RjctRiM2JS1JI21vR0YkNi5RIipGJ0Y1RjcvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSwwLjE2NjY2NjdlbUYnLyUncnNwYWNlR0ZZRjVGNy8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRicvJS9zdWJzY3JpcHRzaGlmdEdGaG4vSSttc2VtYW50aWNzR0YkUSxbbm9uZSxub25lXUYnLUkobWZlbmNlZEdGJDYlLUYjNiUtRi82JlEidEYnRj9GNUZBRjVGN0Y1RjdGNUY3</Equation>  are functions of <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=</Equation> and <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtSSNtbkdGJDYlUSIwRidGNS9GOVEnbm9ybWFsRidGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGQS1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGQS8lJmZlbmNlR0Y3LyUqc2VwYXJhdG9yR0Y3LyUpc3RyZXRjaHlHRjcvJSpzeW1tZXRyaWNHRjcvJShsYXJnZW9wR0Y3LyUubW92YWJsZWxpbWl0c0dGNy8lJ2FjY2VudEdGNy8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRmZuRjVGQ0ZBLyUxc3VwZXJzY3JpcHRzaGlmdEdGQC8lL3N1YnNjcmlwdHNoaWZ0R0ZAL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYmLUYvNiZRInRGJ0YyRjVGOEY1RkNGQUY1RkEtRkk2LlEifkYnRjVGQUZMRk5GUEZSRlRGVkZYL0ZlblEmMC4wZW1GJy9GaG5GXHAtRkk2LlEiPUYnRjVGQUZMRk5GUEZSRlRGVkZYL0ZlblEsMC4yNzc3Nzc4ZW1GJy9GaG5GYnBGaG9GLi1GYW82JS1GIzYlRmVvRjVGQUY1RkEtRi82I1EhRidGNUZB">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkobXN1YnN1cEdGJDYoLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiYtSSNtbkdGJDYlUSIwRidGNS9GOVEnbm9ybWFsRidGNS8lMGZvbnRfc3R5bGVfbmFtZUdRKTJEfklucHV0RidGQS1GIzYmLUkjbW9HRiQ2LlEiKkYnRjVGQS8lJmZlbmNlR0Y3LyUqc2VwYXJhdG9yR0Y3LyUpc3RyZXRjaHlHRjcvJSpzeW1tZXRyaWNHRjcvJShsYXJnZW9wR0Y3LyUubW92YWJsZWxpbWl0c0dGNy8lJ2FjY2VudEdGNy8lJ2xzcGFjZUdRLDAuMTY2NjY2N2VtRicvJSdyc3BhY2VHRmZuRjVGQ0ZBLyUxc3VwZXJzY3JpcHRzaGlmdEdGQC8lL3N1YnNjcmlwdHNoaWZ0R0ZAL0krbXNlbWFudGljc0dGJFEsW25vbmUsbm9uZV1GJy1JKG1mZW5jZWRHRiQ2JS1GIzYmLUYvNiZRInRGJ0YyRjVGOEY1RkNGQUY1RkEtRkk2LlEifkYnRjVGQUZMRk5GUEZSRlRGVkZYL0ZlblEmMC4wZW1GJy9GaG5GXHAtRkk2LlEiPUYnRjVGQUZMRk5GUEZSRlRGVkZYL0ZlblEsMC4yNzc3Nzc4ZW1GJy9GaG5GYnBGaG9GLi1GYW82JS1GIzYlRmVvRjVGQUY1RkEtRi82I1EhRidGNUZB</Equation>. The symbol <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUYjNictRiM2Jy1JJW1zdWJHRiQ2JS1JI21pR0YkNiZRIkhGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYlLUYzNiZRInVGJ0Y2RjlGPEY5L0Y9USdub3JtYWxGJy8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUYzNiNRIUYnRjlGRC9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRidGSUY5RkRGTEZJRjlGREZM">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUYjNictRiM2Jy1JJW1zdWJHRiQ2JS1JI21pR0YkNiZRIkhGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYlLUYzNiZRInVGJ0Y2RjlGPEY5L0Y9USdub3JtYWxGJy8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUYzNiNRIUYnRjlGRC9JK21zZW1hbnRpY3NHRiRRLFtub25lLG5vbmVdRidGSUY5RkRGTEZJRjlGREZM</Equation> represents the derivative of  H with respect to the control input vector <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEidUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=</Equation>.</Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70410" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Nonlinear Equation</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70424" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">The nonlinear equation <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi0tRiw2JlEiVUYnRi9GMkY1LUY5NiUtRiM2JS1GLDYmUSJ0RidGL0YyRjVGMi9GNlEnbm9ybWFsRidGMkZHLUkjbW9HRiQ2LlEiLEYnRjJGRy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZKNi5RIn5GJ0YyRkdGTS9GUEY0RlFGU0ZVRldGWUZlbi9GaW5GZ24tRiw2JlEieEYnRi9GMkY1RkBGSUZbb0ZERjJGR0YyRkctRiw2I1EhRidGMkZH">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi0tRiw2JlEiVUYnRi9GMkY1LUY5NiUtRiM2JS1GLDYmUSJ0RidGL0YyRjVGMi9GNlEnbm9ybWFsRidGMkZHLUkjbW9HRiQ2LlEiLEYnRjJGRy8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZKNi5RIn5GJ0YyRkdGTS9GUEY0RlFGU0ZVRldGWUZlbi9GaW5GZ24tRiw2JlEieEYnRi9GMkY1RkBGSUZbb0ZERjJGR0YyRkctRiw2I1EhRidGMkZH</Equation> is defined by  </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70429" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70415" drawlabel="true">
<Input><Text-field style="Text" layout="Normal" alignment="centred"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYwLUkjbW9HRiQ2LlEifkYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHRjEvJSpzZXBhcmF0b3JHRjEvJSlzdHJldGNoeUdGMS8lKnN5bW1ldHJpY0dGMS8lKGxhcmdlb3BHRjEvJS5tb3ZhYmxlbGltaXRzR0YxLyUnYWNjZW50R0YxLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGRS1JI21pR0YkNidRIkZGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2ZvcmVncm91bmRHUSpbMjU1LDAsMF1GJ0YvL0YzUSdpdGFsaWNGJy1JKG1mZW5jZWRHRiQ2Ji1GIzYvLUZJNidRIlVGJ0ZMRk9GL0ZSLUZVNiYtRiM2Jy1GSTYnUSJ0RidGTEZPRi9GUkZPRi8vJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnRjJGT0YvRjItRiw2L1EiLEYnRk9GL0YyRjUvRjhGTkY5RjtGPUY/RkFGQy9GR1EsMC4zMzMzMzMzZW1GJy1GLDYvRi5GT0YvRjJGNUY3RjlGO0Y9Rj9GQUZDRkYtRkk2J1EieEYnRkxGT0YvRlJGZm5GYG9GZm9Gam5GT0YvRl1vRjJGT0YvRjJGZm8tRiw2LlEqJmNvbG9uZXE7RidGL0YyRjVGN0Y5RjtGPUY/RkEvRkRRLDAuMjc3Nzc3OGVtRicvRkdGX3BGKy1JKG1hY3Rpb25HRiQ2JC1GVTYqLUYjNictRkk2I1EhRictSSdtdGFibGVHRiQ2OS1JJG10ckdGJDYmLUkkbXRkR0YkNigtRiM2Jy1JKG1zdWJzdXBHRiQ2KC1GSTYnUSJIRidGTEYvRl1vRlItRiM2JS1GSTYnUSJ1RidGTEYvRl1vRlJGL0YyLUYjNiUtRkk2J1EiVEYnRkxGL0Zdb0ZSRi9GMi8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRicvJS9zdWJzY3JpcHRzaGlmdEdGaHIvSSttc2VtYW50aWNzR0YkUSxbbm9uZSxub25lXUYnLUZVNiYtRiM2OS1GZ3E2KC1GSTYnRmpvRkxGL0Zdb0ZSLUYjNiUtSSNtbkdGJDYmRmhyRi9GXW9GMkYvRjItRiM2JS1GLDYvUSIqRidGL0Zdb0YyRjVGN0Y5RjtGPUY/RkEvRkRRLDAuMTY2NjY2N2VtRicvRkdGYXRGL0YyRmZyRmlyRltzLUZVNiYtRiM2JS1GSTYnRlxvRkxGL0Zdb0ZSRi9GMkYvRl1vRjItRiw2L0YuRi9GXW9GMkY1RjdGOUY7Rj1GP0ZBRkNGRi1GLDYvRmJvRi9GXW9GMkY1RmNvRjlGO0Y9Rj9GQUZDRmRvRml0LUZncTYoLUZJNidRKSZsYW1iZGE7RicvRk1GMUYvRl1vRjItRiM2JS1GaXM2JlEiMUYnRi9GXW9GMkYvRjJGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNihGXnJGZnNGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNigtRkk2J1ElJm11O0YnRmJ1Ri9GXW9GMkZmc0ZbdEZmckZpckZbc0ZjdEZbdUZpdC1GZ3E2KC1GSTYnUSJwRidGTEYvRl1vRlJGZnNGW3RGZnJGaXJGW3NGY3RGL0YyRi9GXW9GMkZpdEYvRjIvJSlyb3dhbGlnbkdGanAvJSxjb2x1bW5hbGlnbkdGanAvJStncm91cGFsaWduR0ZqcC8lKHJvd3NwYW5HRmd1LyUrY29sdW1uc3BhbkdGZ3VGZHZGZnZGaHYtRl9xNiYtRmJxNigtRiM2Jy1GSTYnUSJDRidGTEYvRl1vRlItRlU2Ji1GIzYwRmJzRmN0Rlt1Rml0Rml0Rmh1RmN0Rlt1Rml0Rml0Rl92RmN0Ri9GMkYvRl1vRjJGaHBGL0YyRmR2RmZ2Rmh2Rmp2Rlx3RmR2RmZ2Rmh2LUZfcTYmLUZicTYoLUYjNiYtRiw2L1EjLi5GJ0YvRl1vRjJGNUY3RjlGO0Y9Rj9GQS9GRFEsMC4yMjIyMjIyZW1GJ0ZGLUYsNi9RIi5GJ0YvRl1vRjJGNUY3RjlGO0Y9Rj9GQUZDRkZGL0YyRmR2RmZ2Rmh2Rmp2Rlx3RmR2RmZ2Rmh2LUZfcTYmLUZicTYoLUYjNidGZnEtRlU2Ji1GIzY5LUZncTYoRmRzLUYjNictRkk2J1EiTkYnRkxGL0Zdb0ZSLUYsNi9RKCZtaW51cztGJ0YvRl1vRjJGNUY3RjlGO0Y9Rj9GQUZkeC9GR0ZleEZldUYvRjJGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNihGX3UtRiM2JUZneUYvRjJGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNihGXnJGZXlGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNihGXHZGZXlGW3RGZnJGaXJGW3NGY3RGW3VGaXQtRmdxNihGYXZGZXlGW3RGZnJGaXJGW3NGY3RGL0YyRi9GXW9GMkZpdEYvRjJGZHZGZnZGaHZGanZGXHdGZHZGZnZGaHYtRl9xNiYtRmJxNigtRiM2J0Zkdy1GVTYmLUYjNjBGY3lGY3RGW3VGaXRGaXRGYnpGY3RGW3VGaXRGaXRGZnpGY3RGL0YyRi9GXW9GMkZocEYvRjJGZHZGZnZGaHZGanZGXHdGZHZGZnZGaHYvJSZhbGlnbkdRJWF4aXNGJy9GZXZRKWJhc2VsaW5lRicvRmd2USdjZW50ZXJGJy9GaXZRJ3xmcmxlZnR8aHJGJy8lL2FsaWdubWVudHNjb3BlR0ZOLyUsY29sdW1ud2lkdGhHUSVhdXRvRicvJSZ3aWR0aEdGX1xsLyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRmpcbC8lJmZyYW1lR0ZqXGwvJS1mcmFtZXNwYWNpbmdHUSwwLjRlbX4wLjVleEYnLyUqZXF1YWxyb3dzR0YxLyUtZXF1YWxjb2x1bW5zR0YxLyUtZGlzcGxheXN0eWxlR0YxLyUlc2lkZUdRJnJpZ2h0RicvJTBtaW5sYWJlbHNwYWNpbmdHRmdcbEZocEYvRjJGL0Zdb0YyL0Zcc1EqQ29sVmVjdG9yRicvJSVvcGVuR1EiW0YnLyUmY2xvc2VHUSJdRidGXV5sLyUrYWN0aW9udHlwZUdRLnJ0YWJsZWFkZHJlc3NGJ0ZpdC1GLDYvUSI9RidGL0Zdb0YyRjVGN0Y5RjtGPUY/RkFGXnBGYHBGaXQtRmlzNiZRIzAuRidGL0Zdb0YyRi9GXW9GMg==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYwLUkjbW9HRiQ2LlEifkYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHRjEvJSpzZXBhcmF0b3JHRjEvJSlzdHJldGNoeUdGMS8lKnN5bW1ldHJpY0dGMS8lKGxhcmdlb3BHRjEvJS5tb3ZhYmxlbGltaXRzR0YxLyUnYWNjZW50R0YxLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGRS1JI21pR0YkNidRIkZGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2ZvcmVncm91bmRHUSpbMjU1LDAsMF1GJ0YvL0YzUSdpdGFsaWNGJy1JKG1mZW5jZWRHRiQ2Ji1GIzYvLUZJNidRIlVGJ0ZMRk9GL0ZSLUZVNiYtRiM2Jy1GSTYnUSJ0RidGTEZPRi9GUkZPRi8vJTBmb250X3N0eWxlX25hbWVHUSkyRH5JbnB1dEYnRjJGT0YvRjItRiw2L1EiLEYnRk9GL0YyRjUvRjhGTkY5RjtGPUY/RkFGQy9GR1EsMC4zMzMzMzMzZW1GJy1GLDYvRi5GT0YvRjJGNUY3RjlGO0Y9Rj9GQUZDRkYtRkk2J1EieEYnRkxGT0YvRlJGZm5GYG9GZm9Gam5GT0YvRl1vRjJGT0YvRjJGZm8tRiw2LlEqJmNvbG9uZXE7RidGL0YyRjVGN0Y5RjtGPUY/RkEvRkRRLDAuMjc3Nzc3OGVtRicvRkdGX3BGKy1JKG1hY3Rpb25HRiQ2JC1GVTYqLUYjNictRkk2I1EhRictSSdtdGFibGVHRiQ2OS1JJG10ckdGJDYmLUkkbXRkR0YkNigtRiM2Jy1JKG1zdWJzdXBHRiQ2KC1GSTYnUSJIRidGTEYvRl1vRlItRiM2JS1GSTYnUSJ1RidGTEYvRl1vRlJGL0YyLUYjNiUtRkk2J1EiVEYnRkxGL0Zdb0ZSRi9GMi8lMXN1cGVyc2NyaXB0c2hpZnRHUSIwRicvJS9zdWJzY3JpcHRzaGlmdEdGaHIvSSttc2VtYW50aWNzR0YkUSxbbm9uZSxub25lXUYnLUZVNiYtRiM2OS1GZ3E2KC1GSTYnRmpvRkxGL0Zdb0ZSLUYjNiUtSSNtbkdGJDYmRmhyRi9GXW9GMkYvRjItRiM2JS1GLDYvUSIqRidGL0Zdb0YyRjVGN0Y5RjtGPUY/RkEvRkRRLDAuMTY2NjY2N2VtRicvRkdGYXRGL0YyRmZyRmlyRltzLUZVNiYtRiM2JS1GSTYnRlxvRkxGL0Zdb0ZSRi9GMkYvRl1vRjItRiw2L0YuRi9GXW9GMkY1RjdGOUY7Rj1GP0ZBRkNGRi1GLDYvRmJvRi9GXW9GMkY1RmNvRjlGO0Y9Rj9GQUZDRmRvRml0LUZncTYoLUZJNidRKSZsYW1iZGE7RicvRk1GMUYvRl1vRjItRiM2JS1GaXM2JlEiMUYnRi9GXW9GMkYvRjJGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNihGXnJGZnNGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNigtRkk2J1ElJm11O0YnRmJ1Ri9GXW9GMkZmc0ZbdEZmckZpckZbc0ZjdEZbdUZpdC1GZ3E2KC1GSTYnUSJwRidGTEYvRl1vRlJGZnNGW3RGZnJGaXJGW3NGY3RGL0YyRi9GXW9GMkZpdEYvRjIvJSlyb3dhbGlnbkdGanAvJSxjb2x1bW5hbGlnbkdGanAvJStncm91cGFsaWduR0ZqcC8lKHJvd3NwYW5HRmd1LyUrY29sdW1uc3BhbkdGZ3VGZHZGZnZGaHYtRl9xNiYtRmJxNigtRiM2Jy1GSTYnUSJDRidGTEYvRl1vRlItRlU2Ji1GIzYwRmJzRmN0Rlt1Rml0Rml0Rmh1RmN0Rlt1Rml0Rml0Rl92RmN0Ri9GMkYvRl1vRjJGaHBGL0YyRmR2RmZ2Rmh2Rmp2Rlx3RmR2RmZ2Rmh2LUZfcTYmLUZicTYoLUYjNiYtRiw2L1EjLi5GJ0YvRl1vRjJGNUY3RjlGO0Y9Rj9GQS9GRFEsMC4yMjIyMjIyZW1GJ0ZGLUYsNi9RIi5GJ0YvRl1vRjJGNUY3RjlGO0Y9Rj9GQUZDRkZGL0YyRmR2RmZ2Rmh2Rmp2Rlx3RmR2RmZ2Rmh2LUZfcTYmLUZicTYoLUYjNidGZnEtRlU2Ji1GIzY5LUZncTYoRmRzLUYjNictRkk2J1EiTkYnRkxGL0Zdb0ZSLUYsNi9RKCZtaW51cztGJ0YvRl1vRjJGNUY3RjlGO0Y9Rj9GQUZkeC9GR0ZleEZldUYvRjJGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNihGX3UtRiM2JUZneUYvRjJGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNihGXnJGZXlGW3RGZnJGaXJGW3NGY3RGaXRGW3VGaXQtRmdxNihGXHZGZXlGW3RGZnJGaXJGW3NGY3RGW3VGaXQtRmdxNihGYXZGZXlGW3RGZnJGaXJGW3NGY3RGL0YyRi9GXW9GMkZpdEYvRjJGZHZGZnZGaHZGanZGXHdGZHZGZnZGaHYtRl9xNiYtRmJxNigtRiM2J0Zkdy1GVTYmLUYjNjBGY3lGY3RGW3VGaXRGaXRGYnpGY3RGW3VGaXRGaXRGZnpGY3RGL0YyRi9GXW9GMkZocEYvRjJGZHZGZnZGaHZGanZGXHdGZHZGZnZGaHYvJSZhbGlnbkdRJWF4aXNGJy9GZXZRKWJhc2VsaW5lRicvRmd2USdjZW50ZXJGJy9GaXZRJ3xmcmxlZnR8aHJGJy8lL2FsaWdubWVudHNjb3BlR0ZOLyUsY29sdW1ud2lkdGhHUSVhdXRvRicvJSZ3aWR0aEdGX1xsLyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRmpcbC8lJmZyYW1lR0ZqXGwvJS1mcmFtZXNwYWNpbmdHUSwwLjRlbX4wLjVleEYnLyUqZXF1YWxyb3dzR0YxLyUtZXF1YWxjb2x1bW5zR0YxLyUtZGlzcGxheXN0eWxlR0YxLyUlc2lkZUdRJnJpZ2h0RicvJTBtaW5sYWJlbHNwYWNpbmdHRmdcbEZocEYvRjJGL0Zdb0YyL0Zcc1EqQ29sVmVjdG9yRicvJSVvcGVuR1EiW0YnLyUmY2xvc2VHUSJdRidGXV5sLyUrYWN0aW9udHlwZUdRLnJ0YWJsZWFkZHJlc3NGJ0ZpdC1GLDYvUSI9RidGL0Zdb0YyRjVGN0Y5RjtGPUY/RkFGXnBGYHBGaXQtRmlzNiZRIzAuRidGL0Zdb0YyRi9GXW9GMg==</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70428" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70417" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Iterative methods are unnecessary if the time dependent variation of the optimal solution can be traced exactly. It is used <Font bold="true" foreground="[255,0,0]">Continuation Method</Font> (Homotopy Method)<Font foreground="[255,0,0]"> in Real-Time </Font>for solving the equation. </Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70412" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Continuation/GMRES Algorithm</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70425" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">The algorithm is the following. </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70391" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="none" postexecute="insert" drawcaption="false" drawtitle="false" width="76.59574468085107%" captionalignment="0" showinput="true" captionposition="1" id="Table3" alignment="center" randomized="false" labelreference="L70421" showgroup="true" order="row"><Table-Column weight="36" separator="true"></Table-Column><Table-Column weight="820" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70438" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">1</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70419" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Horizon length: <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2JlEiVEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtSSNtbkdGJDYlUSIwRidGMi9GNlEnbm9ybWFsRidGMkZBRjJGQS1JI21vR0YkNi5RIn5GJ0YyRkEvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZXLUZENi5RIj1GJ0YyRkFGR0ZJRktGTUZPRlFGUy9GVlEsMC4yNzc3Nzc4ZW1GJy9GWUZobkZDRj1GMkZB">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2JlEiVEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtSSNtbkdGJDYlUSIwRidGMi9GNlEnbm9ybWFsRidGMkZBRjJGQS1JI21vR0YkNi5RIn5GJ0YyRkEvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZXLUZENi5RIj1GJ0YyRkFGR0ZJRktGTUZPRlFGUy9GVlEsMC4yNzc3Nzc4ZW1GJy9GWUZobkZDRj1GMkZB</Equation> and <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkjbWlHRiQ2JlEiVEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1JI21vR0YkNi5RKCZzcmFycjtGJ0YyRkAvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZWLUklbXN1YkdGJDYlRistRiM2Jy1GLDYmUSJmRidGL0YyRjUtRkM2LlEifkYnRjJGQEZGRkhGSkZMRk5GUEZSRlRGV0YvRjJGNS8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnRltvRltvLUY5NiUtRiM2KEY9RltvLUZDNi5RLSZSaWdodEFycm93O0YnRjJGQEZGRkgvRktGMUZMRk5GUEZSL0ZVUSwwLjI3Nzc3NzhlbUYnL0ZYRmpvLUZDNi5RKCZpbmZpbjtGJ0YyRkBGRkZIRkpGTEZORlBGUkZURldGMkZARjJGQEYyRkA=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYrLUkjbWlHRiQ2JlEiVEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQC1JI21vR0YkNi5RKCZzcmFycjtGJ0YyRkAvJSZmZW5jZUdGNC8lKnNlcGFyYXRvckdGNC8lKXN0cmV0Y2h5R0Y0LyUqc3ltbWV0cmljR0Y0LyUobGFyZ2VvcEdGNC8lLm1vdmFibGVsaW1pdHNHRjQvJSdhY2NlbnRHRjQvJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZWLUklbXN1YkdGJDYlRistRiM2Jy1GLDYmUSJmRidGL0YyRjUtRkM2LlEifkYnRjJGQEZGRkhGSkZMRk5GUEZSRlRGV0YvRjJGNS8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnRltvRltvLUY5NiUtRiM2KEY9RltvLUZDNi5RLSZSaWdodEFycm93O0YnRjJGQEZGRkgvRktGMUZMRk5GUEZSL0ZVUSwwLjI3Nzc3NzhlbUYnL0ZYRmpvLUZDNi5RKCZpbmZpbjtGJ0YyRkBGRkZIRkpGTEZORlBGUkZURldGMkZARjJGQEYyRkA=</Equation>.  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi0tRiw2JlEiVUYnRi9GMkY1LUY5NiUtRiM2JS1JI21uR0YkNiVRIjBGJ0YyL0Y2USdub3JtYWxGJ0YyRkhGMkZILUkjbW9HRiQ2LlEiLEYnRjJGSC8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZLNi5RIn5GJ0YyRkhGTi9GUUY0RlJGVEZWRlhGWkZmbi9Gam5GaG4tRiw2JlEieEYnRi9GMkY1RkBGSkZcb0ZERjJGSEYyRkhGXG8tRks2LlEiPUYnRjJGSEZORl9vRlJGVEZWRlhGWi9GZ25RLDAuMjc3Nzc3OGVtRicvRmpuRmhvRlxvRkRGMkZI">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYqLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNi0tRiw2JlEiVUYnRi9GMkY1LUY5NiUtRiM2JS1JI21uR0YkNiVRIjBGJ0YyL0Y2USdub3JtYWxGJ0YyRkhGMkZILUkjbW9HRiQ2LlEiLEYnRjJGSC8lJmZlbmNlR0Y0LyUqc2VwYXJhdG9yR0YxLyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZLNi5RIn5GJ0YyRkhGTi9GUUY0RlJGVEZWRlhGWkZmbi9Gam5GaG4tRiw2JlEieEYnRi9GMkY1RkBGSkZcb0ZERjJGSEYyRkhGXG8tRks2LlEiPUYnRjJGSEZORl9vRlJGVEZWRlhGWi9GZ25RLDAuMjc3Nzc3OGVtRicvRmpuRmhvRlxvRkRGMkZI</Equation> is easy to solve.</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70411" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">2</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70398" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">At each time <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation>, measure the state <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiUtRiw2JlEidEYnRi9GMkY1RjIvRjZRJ25vcm1hbEYnRjJGQEYyRkA=</Equation>.</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70423" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">3</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70445" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Solve a linear equation for <Equation executable="false" style="Text" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkmbW92ZXJHRiQ2JS1GIzYlLUkjbWlHRiQ2JVEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJ0Y0RjctSSNtb0dGJDYuUSIuRicvJSxwbGFjZWhvbGRlckdGNi9GOFEnbm9ybWFsRicvJSZmZW5jZUdRJnVuc2V0RicvJSpzZXBhcmF0b3JHRkQvJSlzdHJldGNoeUdGRC8lKnN5bW1ldHJpY0dGRC8lKGxhcmdlb3BHRkQvJS5tb3ZhYmxlbGltaXRzR0ZELyUnYWNjZW50R0ZELyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGUy9GUEY2LUY7Ni1RIn5GJ0ZAL0ZDUSZmYWxzZUYnL0ZGRmVuL0ZIRmVuL0ZKRmVuL0ZMRmVuL0ZORmVuL0ZQRmVuRlFGVEZA">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkmbW92ZXJHRiQ2JS1GIzYlLUkjbWlHRiQ2JVEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJ0Y0RjctSSNtb0dGJDYuUSIuRicvJSxwbGFjZWhvbGRlckdGNi9GOFEnbm9ybWFsRicvJSZmZW5jZUdRJnVuc2V0RicvJSpzZXBhcmF0b3JHRkQvJSlzdHJldGNoeUdGRC8lKnN5bW1ldHJpY0dGRC8lKGxhcmdlb3BHRkQvJS5tb3ZhYmxlbGltaXRzR0ZELyUnYWNjZW50R0ZELyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGUy9GUEY2LUY7Ni1RIn5GJ0ZAL0ZDUSZmYWxzZUYnL0ZGRmVuL0ZIRmVuL0ZKRmVuL0ZMRmVuL0ZORmVuL0ZQRmVuRlFGVEZA</Equation>: </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70409" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">    <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzZPLUkjbW9HRiQ2LlEifkYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHRjEvJSpzZXBhcmF0b3JHRjEvJSlzdHJldGNoeUdGMS8lKnN5bW1ldHJpY0dGMS8lKGxhcmdlb3BHRjEvJS5tb3ZhYmxlbGltaXRzR0YxLyUnYWNjZW50R0YxLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGRS1JJW1zdWJHRiQ2JS1JI21pR0YkNiZRIkZGJy8lJ2l0YWxpY0dRJXRydWVGJ0YvL0YzUSdpdGFsaWNGJy1GIzYmLUZMNiZRIlVGJ0ZPRi9GUkZPRi9GUi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnRitGKy1JJm1vdmVyR0YkNiUtRiM2JkZWRi8vJTBmb250X3N0eWxlX25hbWVHUSVUZXh0RidGMi1GLDYvUSIuRidGLy8lLHBsYWNlaG9sZGVyR0ZRRjJGNUY3RjlGO0Y9Rj9GQUZDRkYvRkJGUUYrLUYsNi5RIj1GJ0YvRjJGNUY3RjlGO0Y9Rj9GQS9GRFEsMC4yNzc3Nzc4ZW1GJy9GR0Zob0YrLUYsNi5RKiZ1bWludXMwO0YnRi9GMkY1RjdGOUY7Rj1GP0ZBL0ZEUSwwLjIyMjIyMjJlbUYnL0ZHRl5wLUZMNiZRJyYjOTU4O0YnL0ZQRjFGL0YyRitGS0YrRmpvRistRkk2JUZLLUYjNiYtRkw2JlEieEYnRk9GL0ZSRk9GL0ZSRllGKy1GZ242JS1GIzYlRmhwRi9GMi1GLDYvRmBvRi9GYW9GMi9GNlEmdW5zZXRGJy9GOEZicS9GOkZicS9GPEZicS9GPkZicS9GQEZicS9GQkZicUZDRkZGY29GK0Zqby1GSTYlRkstRiM2JS1GTDYmUSJ0RidGT0YvRlJGL0YyRllGK0YrRitGK0YrRistRiw2LlE3JkRvdWJsZUxlZnRSaWdodEFycm93O0YnRi9GMkY1RjcvRjpGUUY7Rj1GP0ZBRmdvRmlvRitGKy1GZ242JS1GIzYlRktGL0YyRl9xRmNvRitGZG9GK0Zqb0ZgcEYrRktGK0YrRistSShtZmVuY2VkR0YkNiUtRiM2KUZgcEYrLUYsNi5RIj5GJ0YvRjJGNUY3RjlGO0Y9Rj9GQUZnb0Zpb0YrLUkjbW5HRiQ2JUZlbkYvRjJGL0YyRi9GMi1GTDYjUSFGJ0YvRjI=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzZPLUkjbW9HRiQ2LlEifkYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHRjEvJSpzZXBhcmF0b3JHRjEvJSlzdHJldGNoeUdGMS8lKnN5bW1ldHJpY0dGMS8lKGxhcmdlb3BHRjEvJS5tb3ZhYmxlbGltaXRzR0YxLyUnYWNjZW50R0YxLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGRS1JJW1zdWJHRiQ2JS1JI21pR0YkNiZRIkZGJy8lJ2l0YWxpY0dRJXRydWVGJ0YvL0YzUSdpdGFsaWNGJy1GIzYmLUZMNiZRIlVGJ0ZPRi9GUkZPRi9GUi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnRitGKy1JJm1vdmVyR0YkNiUtRiM2JkZWRi8vJTBmb250X3N0eWxlX25hbWVHUSVUZXh0RidGMi1GLDYvUSIuRidGLy8lLHBsYWNlaG9sZGVyR0ZRRjJGNUY3RjlGO0Y9Rj9GQUZDRkYvRkJGUUYrLUYsNi5RIj1GJ0YvRjJGNUY3RjlGO0Y9Rj9GQS9GRFEsMC4yNzc3Nzc4ZW1GJy9GR0Zob0YrLUYsNi5RKiZ1bWludXMwO0YnRi9GMkY1RjdGOUY7Rj1GP0ZBL0ZEUSwwLjIyMjIyMjJlbUYnL0ZHRl5wLUZMNiZRJyYjOTU4O0YnL0ZQRjFGL0YyRitGS0YrRmpvRistRkk2JUZLLUYjNiYtRkw2JlEieEYnRk9GL0ZSRk9GL0ZSRllGKy1GZ242JS1GIzYlRmhwRi9GMi1GLDYvRmBvRi9GYW9GMi9GNlEmdW5zZXRGJy9GOEZicS9GOkZicS9GPEZicS9GPkZicS9GQEZicS9GQkZicUZDRkZGY29GK0Zqby1GSTYlRkstRiM2JS1GTDYmUSJ0RidGT0YvRlJGL0YyRllGK0YrRitGK0YrRistRiw2LlE3JkRvdWJsZUxlZnRSaWdodEFycm93O0YnRi9GMkY1RjcvRjpGUUY7Rj1GP0ZBRmdvRmlvRitGKy1GZ242JS1GIzYlRktGL0YyRl9xRmNvRitGZG9GK0Zqb0ZgcEYrRktGK0YrRistSShtZmVuY2VkR0YkNiUtRiM2KUZgcEYrLUYsNi5RIj5GJ0YvRjJGNUY3RjlGO0Y9Rj9GQUZnb0Zpb0YrLUkjbW5HRiQ2JUZlbkYvRjJGL0YyRi9GMi1GTDYjUSFGJ0YvRjI=</Equation>  </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70436" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">and update <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2J1EiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlswLDAsMjU1XUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYmLUYjNiYtRiw2J1EidEYnRi9GMkY1RjhGMkY1L0Y5USdub3JtYWxGJ0YyRjVGQ0YyRjVGQw==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2J1EiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlswLDAsMjU1XUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYmLUYjNiYtRiw2J1EidEYnRi9GMkY1RjhGMkY1L0Y5USdub3JtYWxGJ0YyRjVGQ0YyRjVGQw==</Equation> by integrating <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkmbW92ZXJHRiQ2JS1GIzYmLUkjbWlHRiQ2J1EiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjdGOi9GPlEnbm9ybWFsRictSSNtb0dGJDYwUSIuRidGN0Y6LyUscGxhY2Vob2xkZXJHRjZGQC8lJmZlbmNlR0Y8LyUqc2VwYXJhdG9yR0Y8LyUpc3RyZXRjaHlHRjwvJSpzeW1tZXRyaWNHRjwvJShsYXJnZW9wR0Y8LyUubW92YWJsZWxpbWl0c0dGPC8lJ2FjY2VudEdGPC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRlgvRlVGNi1GQzYvUSJ+RidGN0Y6RkBGSEZKRkxGTkZQRlJGVEZWRlktSShtZmVuY2VkR0YkNiYtRiM2Ji1GMTYnUSJ0RidGNEY3RjpGPUY3RjpGQEY3RjpGQEY3RjpGQA==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkmbW92ZXJHRiQ2JS1GIzYmLUkjbWlHRiQ2J1EiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZm9yZWdyb3VuZEdRKlsyNTUsMCwwXUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjdGOi9GPlEnbm9ybWFsRictSSNtb0dGJDYwUSIuRidGN0Y6LyUscGxhY2Vob2xkZXJHRjZGQC8lJmZlbmNlR0Y8LyUqc2VwYXJhdG9yR0Y8LyUpc3RyZXRjaHlHRjwvJSpzeW1tZXRyaWNHRjwvJShsYXJnZW9wR0Y8LyUubW92YWJsZWxpbWl0c0dGPC8lJ2FjY2VudEdGPC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRlgvRlVGNi1GQzYvUSJ+RidGN0Y6RkBGSEZKRkxGTkZQRlJGVEZWRlktSShtZmVuY2VkR0YkNiYtRiM2Ji1GMTYnUSJ0RidGNEY3RjpGPUY3RjpGQEY3RjpGQEY3RjpGQA==</Equation> as <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY0LUkjbWlHRiQ2JlEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiktRiw2JlEidEYnRi9GMkY1LUkjbW9HRiQ2LlEifkYnRjIvRjZRJ25vcm1hbEYnLyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjQvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGVi1GQTYuUSIrRidGMkZERkZGSEZKRkxGTkZQRlIvRlVRLDAuMjIyMjIyMmVtRicvRlhGZ24tRiw2JlEpJkRlbHRhO3RGJ0YvRjJGNUYyLyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0ZERjJGREZALUZBNi5RIj1GJ0YyRkRGRkZIRkpGTEZORlBGUi9GVVEsMC4yNzc3Nzc4ZW1GJy9GWEZjb0ZARistRjk2JS1GIzYmRj1GMkZcb0ZERjJGREZARllGQC1JJm1vdmVyR0YkNiUtRiM2JkYrRjJGXG9GRC1GQTYvUSIuRidGMi8lLHBsYWNlaG9sZGVyR0YxRkRGRkZIRkpGTEZORlBGUkZURlcvRlNGMUZARmVvLUYsNiZRKCYjOTE2O3RGJ0YvRjJGNS1GQTYuUSIsRidGMkZERkYvRklGMUZKRkxGTkZQRlJGVC9GWFEsMC4zMzMzMzMzZW1GJ0YyRlxvRkQ=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzY0LUkjbWlHRiQ2JlEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkobWZlbmNlZEdGJDYlLUYjNiktRiw2JlEidEYnRi9GMkY1LUkjbW9HRiQ2LlEifkYnRjIvRjZRJ25vcm1hbEYnLyUmZmVuY2VHRjQvJSpzZXBhcmF0b3JHRjQvJSlzdHJldGNoeUdGNC8lKnN5bW1ldHJpY0dGNC8lKGxhcmdlb3BHRjQvJS5tb3ZhYmxlbGltaXRzR0Y0LyUnYWNjZW50R0Y0LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGVi1GQTYuUSIrRidGMkZERkZGSEZKRkxGTkZQRlIvRlVRLDAuMjIyMjIyMmVtRicvRlhGZ24tRiw2JlEpJkRlbHRhO3RGJ0YvRjJGNUYyLyUwZm9udF9zdHlsZV9uYW1lR1EpMkR+SW5wdXRGJ0ZERjJGREZALUZBNi5RIj1GJ0YyRkRGRkZIRkpGTEZORlBGUi9GVVEsMC4yNzc3Nzc4ZW1GJy9GWEZjb0ZARistRjk2JS1GIzYmRj1GMkZcb0ZERjJGREZARllGQC1JJm1vdmVyR0YkNiUtRiM2JkYrRjJGXG9GRC1GQTYvUSIuRidGMi8lLHBsYWNlaG9sZGVyR0YxRkRGRkZIRkpGTEZORlBGUkZURlcvRlNGMUZARmVvLUYsNiZRKCYjOTE2O3RGJ0YvRjJGNS1GQTYuUSIsRidGMkZERkYvRklGMUZKRkxGTkZQRlJGVC9GWFEsMC4zMzMzMzMzZW1GJ0YyRlxvRkQ=</Equation>where a dot notation denotes the derivative with respect to time of the corresponding function and  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUklbXN1YkdGJDYlLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiUtRi82JlEiVUYnRjJGNUY4RjUvRjlRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYuUSJ+RidGNUZALyUmZmVuY2VHRjcvJSpzZXBhcmF0b3JHRjcvJSlzdHJldGNoeUdGNy8lKnN5bW1ldHJpY0dGNy8lKGxhcmdlb3BHRjcvJS5tb3ZhYmxlbGltaXRzR0Y3LyUnYWNjZW50R0Y3LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGWUZFRjVGQA==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUklbXN1YkdGJDYlLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiUtRi82JlEiVUYnRjJGNUY4RjUvRjlRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYuUSJ+RidGNUZALyUmZmVuY2VHRjcvJSpzZXBhcmF0b3JHRjcvJSlzdHJldGNoeUdGNy8lKnN5bW1ldHJpY0dGNy8lKGxhcmdlb3BHRjcvJS5tb3ZhYmxlbGltaXRzR0Y3LyUnYWNjZW50R0Y3LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGWUZFRjVGQA==</Equation>,  <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiUtRi82JlEieEYnRjJGNUY4RjUvRjlRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictRi82I1EhRidGNUZA">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiUtRi82JlEieEYnRjJGNUY4RjUvRjlRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictRi82I1EhRidGNUZA</Equation> and <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiUtRi82JlEidEYnRjJGNUY4RjUvRjlRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYuUSJ+RidGNUZALyUmZmVuY2VHRjcvJSpzZXBhcmF0b3JHRjcvJSlzdHJldGNoeUdGNy8lKnN5bW1ldHJpY0dGNy8lKGxhcmdlb3BHRjcvJS5tb3ZhYmxlbGltaXRzR0Y3LyUnYWNjZW50R0Y3LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGWUY1RkA=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JlEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUYjNiUtRi82JlEidEYnRjJGNUY4RjUvRjlRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYuUSJ+RidGNUZALyUmZmVuY2VHRjcvJSpzZXBhcmF0b3JHRjcvJSlzdHJldGNoeUdGNy8lKnN5bW1ldHJpY0dGNy8lKGxhcmdlb3BHRjcvJS5tb3ZhYmxlbGltaXRzR0Y3LyUnYWNjZW50R0Y3LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGWUY1RkA=</Equation> denote the partial derivate of <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEiVUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation> , <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEieEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation> and <Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JlEidEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUrZXhlY3V0YWJsZUdRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjIvRjZRJ25vcm1hbEYn</Equation>, respectively. </Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70422" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70396" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">This algorithm has only one linear equation at each time and <Font foreground="[255,0,0]">no iteration</Font>. It is used a efficient linear Equation solver <Font bold="true" foreground="[255,0,0]">GMRES</Font>. </Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70373" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">References</Text-field></Title><Table visible="true" exterior="none" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="none" postexecute="insert" drawcaption="false" drawtitle="false" width="100.0%" captionalignment="0" showinput="true" captionposition="1" id="Table4" alignment="left" randomized="false" labelreference="L70464" showgroup="true" order="row"><Table-Column weight="11" separator="true"></Table-Column><Table-Column weight="189" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70393" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">[1]</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70375" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Ohtsuka, T., \342\200\234A Continuation/GMRES Method for Fast Computation of Nonlinear Receding Horizon Control,\342\200\235 Automatica, Vol. 40, No.4, Apr. 2004, pp. 563-574. </Font></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70378" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">[2]</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70397" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Ohtsuka, T., <Font italic="true">Introduction to Nonlinear Optimal Control</Font>, Corona Publishing, 2011 (in Japanese).</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70467" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">[3]</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70390" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Seguchi, H., and Ohtsuka, T., \342\200\234Nonlinear Receding Horizon Control of an Underactuated Hovercraft,\342\200\235 International Journal of Robust and Nonlinear Control, Vol.13, Nos. 3-4, Mar.-Apr. 2003, pp. 381-398</Font></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70387" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">[4]</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70468" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Ohtsuka, T., http://www.symlab.sys.i.kyoto-u.ac.jp/~ohtsuka/index.htm, 2013.</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70465" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">[5]</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70381" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Ohtsuka, T., AutoGenU, http://www.symlab.sys.i.kyoto-u.ac.jp/~ohtsuka/code/index.htm, 2000 (first release), 2013 (current site).</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70466" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">[6]</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70439" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Ohtsuka, T., Shimizu, Y., and Diehl, M., \342\200\234A Continuation/GMRES Method for Real-Time Algorithm of Constrained Nonlinear Model Predictive Control,\342\200\235 The 6th International Congress on Industrial and Applied Mathematics, Zurich, Switzerland, July 2007, IC/MT(MP244)/063/P/1825. </Font></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70372" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70388" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Initialize</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70371" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L70457" display="button"><EC-CodeEditor id="CodeEditRegion13" visible="false" pixel-width="700" pixel-height="652" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Initialize Maple for NMPC 

# Reset all parameters
restart:

# initialize current directry
currentdir():

# setting for restart_flg
resrtart_flg = true:

# Use Packages
with(codegen):
with(FileTools):
with(StringTools):
with(ListTools):
with(ArrayTools):
with(LinearAlgebra):
with(plots):


# slash string for folder (Windows: &quot;\134\134&quot;, Linux/Mac/Solaris/Unknown: &quot;/&quot;)
folderslash := &quot;&quot;:

if CheckOSinfo() = &quot;WINDOWS&quot; then
  folderslash := &quot;\134\134&quot;:
else
  folderslash := &quot;/&quot;;
end if:

# save parameters to file
interface(warnlevel=0):
#interface(displayprecision=4):
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L70453" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70454" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="group" postexecute="insert" drawcaption="false" width="79.21077959576516%" captionalignment="0" showinput="true" captionposition="1" id="Table5" alignment="left" randomized="false" labelreference="L70449" showgroup="true" order="row"><Table-Column weight="823" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70458" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="Label_SetCurrentDir" caption="Current Directory:" enabled="true" visible="true" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-TextArea id="Text_CurrentDir" enabled="true" visible="true" visiblecharacterwidth="60" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="C:\134Users\134Deng\134Desktop\134Comparison\134CGMRES\134Quadrotor" editable="true" wrapping="true" show-border="true" password="false"><MapleCode action="content-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

end use; 
</MapleCode></EC-TextArea>  </Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70450" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">

  Example: </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70455" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">         <Font foreground="[0,0,255]" encoding="UTF-8">C:\134Work\134test  </Font>(for Windows)  or  <Font foreground="[0,0,255]">/usr/Work/test  </Font>(for Mac/Linux/Solaris)</Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70451" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L70456" display="button"><EC-CodeEditor id="CodeEditRegion21" visible="false" pixel-width="600" pixel-height="600" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Check the Current Directory

# Check directory strings
strCD := DocumentTools:-GetProperty(&quot;Text_CurrentDir&quot;, value):
strCD := StringTools:-Trim(strCD):

#strCD := StringTools:-SubstituteAll(strCD, &quot;////&quot;, &quot;\134\134&quot;):
#strCD := StringTools:-SubstituteAll(strCD, &quot;//&quot;, &quot;\134\134&quot;):
#strCD := StringTools:-SubstituteAll(strCD, &quot;\134\134\134\134&quot;, &quot;\134\134&quot;):

# convert strings for currentdir command 
strCD2 := StringTools:-SubstituteAll(strCD, &quot;\134\134&quot;, &quot;//&quot;):

currentdir(strCD2):

if (isdir(strCD2) = false) then
   #printf(&quot;\134nError: Setting of Current directory is failed.\134n\134n&quot;);
   quit:
end if:

# Check the current directory
printf(&quot;\134nCurrent directory is \134&quot;%s\134&quot;.&quot;, currentdir());


# Check OS (WINDOWS/LINUX/MAC/SOLARIS/UNKNOWN)
Check2_OSinfo := proc()::string;
    local res :: string:
    local osinfo_all, keystr:

    # Initialize
    res := &quot;&quot;:
    # Check for OS type for Windows
    osinfo_all := ssystem(&quot;ver&quot;):
    if osinfo_all[1] = 0 then
      if (StringTools:-Search(&quot;Microsoft Windows&quot;, osinfo_all[2]) &gt; 0) then
        res := &quot;WINDOWS&quot;:
        osinfo_all := &quot;&quot;:
        return res:
      end if:
    end if:

    # Check for OS type for Linux/ Solaris
    osinfo_all := ssystem(&quot;uname -a&quot;):
    if osinfo_all[1] = 0 then
      if (StringTools:-Search(&quot;Linux&quot;, osinfo_all[2]) &gt; 0 or 
             StringTools:-Search(&quot;LINUX&quot;, osinfo_all[2]) &gt; 0) then
        res := &quot;LINUX&quot;:
        osinfo_all := &quot;&quot;:
        return res:

      elif (StringTools:-Search(&quot;SunOS&quot;, osinfo_all[2]) &gt; 0 or 
              StringTools:-Search(&quot;Solaris&quot;, osinfo_all[2]) &gt; 0 or 
              StringTools:-Search(&quot;solaris&quot;, osinfo_all[2]) &gt; 0) then
    	     res := &quot;SOLARIS&quot;:
    	     osinfo_all := &quot;&quot;:
      end if:
    end if:

    # Check for OS type for Mac
    ##osinfo := ssystem(&quot;system_profiler&quot;):
    osinfo_all := ssystem(&quot;sw_vers&quot;):
    if osinfo_all[1] = 0 then
      if (StringTools:-Search(&quot;Mac OS&quot;, osinfo_all[2]) &gt; 0) then
        res := &quot;MAC&quot;:
        osinfo_all := &quot;&quot;:
        return res:
      end if:    
    end if:  

    # Case of none for OS type
    if res = &quot;&quot; then
       # default OS setting
      res := &quot;UNKNOWN&quot;:
    end if:
end proc:

 # Create2 topcmd_forMac is not exist
  Create2_topcmd_forMac := proc() 
    local str, CC, cfile,str2:
    cfile := &quot;topcmd_forMac.sh&quot;: 
    str := &quot;#/bin/bash\134ntop -l 1 |grep Maple| grep -v grep\134n&quot;:
    CC := fopen(cfile, WRITE, TEXT):
    try
      fprintf(CC, str):
    finally 
      fclose(CC):
    end try: 
    
    str2:=cat(&quot;chmod +x ./&quot;,cfile):
    ssystem(str2); 
  end proc:

  # Create2 pscmd_forMac is not exist
  Create2_pscmd_forMac := proc() 
    local str, CC, cfile, str2:
    cfile := &quot;pscmd_forMac.sh&quot;: 
    str := &quot;#/bin/bash\134nps alx |grep \134&quot;Maple \134&quot;|grep Maple |grep -v grep\134n&quot;:
    CC := fopen(cfile, WRITE, TEXT):
    try
      fprintf(CC, str):
    finally 
      fclose(CC):
    end try: 
    
    str2:=cat(&quot;chmod +x ./&quot;,cfile):
    ssystem(str2); 
  end proc:

  # Create2 pscmdA_forLinux is not exist
  Create2_pscmdA_forLinux := proc() 
    local str, CC, cfile,str2:
    cfile := &quot;pscmdA_forLinux.sh&quot;: 
    str := &quot;#!/bin/bash\134nps alx |grep \134&quot;maple.exe\134&quot;| grep -v grep\134n&quot;:
    CC := fopen(cfile, WRITE, TEXT):
    try
      fprintf(CC, str):
    finally 
      fclose(CC):
    end try: 
    
    str2:=cat(&quot;chmod +x ./&quot;,cfile):
    ssystem(str2); 
  end proc:


  # Create pscmdB_forLinux is not exist
  Create2_pscmdB_forLinux := proc() 
    local str, CC, cfile, str2, str3,str4, strpath:
    cfile := &quot;pscmdB_forLinux.sh&quot;: 
    str := &quot;#!/bin/bash\134nps alx |grep Maple | grep -v grep\134n&quot;:
    CC := fopen(cfile, WRITE, TEXT):
    try
      fprintf(CC, str):
    finally 
      fclose(CC):
    end try: 
    
    str2:=cat(&quot;chmod +x ./&quot;,cfile):
    ssystem(str2); 
  end proc:


FinalizeMapleApp := proc()
local OSinfo, str2, str3, str4, checkpkill, pidtmp, strpath:

## Get OS info
   OSinfo := Check2_OSinfo():
  # Check OS info
      if (OSinfo = &quot;WINDOWS&quot;) then
        str2:=&quot;taskkill /im maple* /f /t&quot;:
         ssystem(str2)
      elif (OSinfo = &quot;LINUX&quot;) then
        checkpkill := ssystem(&quot;which pkill&quot;);
        if (checktmp[1] = 0) then
          str2:=&quot;pkill -f xmaple&quot;:
          ssystem(str2);
          str2:=&quot;pkill -f maple&quot;:
          ssystem(str2);
        else
          Create_pscmdB_forLinux():
          str2:=&quot;./pscmdB_forLinux.sh&quot;:
          pidtmp := ssystem(str2):
 
          str3:=StringTools:-Split(pidtmp[2]);
          str4:=remove(type,str3,&quot;&quot;);
          strpath:=cat(&quot;kill -9&quot;,&quot; &quot;,str4[3]);
          ssystem(strpath)

        end if:
      elif (OSinfo = &quot;MAC&quot;) then
         ## using ps command
         Create_pscmd_forMac():
         str2:=&quot;./pscmd_forMac.sh&quot;;
         pidtmp := ssystem(str2);

         str3:= StringTools:-Split(pidtmp[2]);
         str4:= remove(type, str3, &quot;&quot;);
         strpath:=cat(&quot;kill -KILL -f&quot;,&quot; &quot;,str4[2]);
         ssystem(strpath)
      elif (OSinifo = &quot;SOLARIS&quot;) then
         str2:=&quot;pkill -9 xmaple&quot;:
         ssystem(str2);
         str2:=&quot;pkill -9 maple&quot;:
         ssystem(str2);
      end if:
  
end proc:  




# check mla file exist
getCheckExistmlaPackage := proc()
   local ret:
   local mlapgname := &quot;NMPCPackage&quot;:
   local mlafname := &quot;NMPCPackage.mla&quot;:
   local libname:
   local OSinfo;

   OSinfo := NULL;

   libname:=libname,currentdir(),&quot;.&quot;:

   if (FileTools[Exists](mlafname) = false) then
     ret := FAIL:

     Maplets[Examples]:-Message(cat(&quot;[Package Error]\134n\134nPackage File: &quot;,mlapgname,&quot; is not found in current directry.\134nThis application will be closed.\134n&quot;));

     FinalizeMapleApp();
   else
     ret := true:
   end if;
   return(ret);
end proc:

# check mla package file
getCheckExistmlaPackage():

# Set libname:
libname:=libname,currentdir(),&quot;.&quot;:
with(NMPCPackage):

# Check Maple version
getCheckflg():
</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70452" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70473" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Define Setting Parameters</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L70234" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">User Settings</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69328" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="all" postexecute="advance" drawcaption="false" drawtitle="false" width="85.75063613231552%" captionalignment="0" showinput="true" captionposition="1" id="Table6" alignment="center" randomized="false" labelreference="L69332" showgroup="false" order="row"><Table-Column weight="278" separator="true"></Table-Column><Table-Column weight="347" separator="false"></Table-Column><Table-Column weight="723" separator="false"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"><Font bold="true" family="Arial">Define Dimensions of x, u, C(x,u,p) and p(t)</Font></Text-field><Text-field style="Text" layout="Normal"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">dimx</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Dimension of the State Vector</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69310" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font size="11">dimx:= 9:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">dimu</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Dimension of the Control Input Vector</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69316" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font size="11">dimu:= 8:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">dimc</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Number of Constraints</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69342" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font size="11">dimc:= 4:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">dimp</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Dimension of Time-Variant Parameters</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69301" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font size="11">dimp:= 9:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="11" family="Arial" layout="Normal"><Font size="11" family="Arial" italic="true">&lt;Create vectors&gt;</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" italic="true" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial" italic="false">xv: State Vector</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">lamdv: Costate Vector</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">uv: Control Input Vector</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">muv: Multiplier Vector for Constraints</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">pv: Vector of Time-Variant Parameters

*vector type: <Font foreground="[255,0,0]">&lt;...&gt; or Vector(...)</Font>
</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" labelreference="L69348" display="code"><EC-CodeEditor id="CodeEditRegion0" visible="false" pixel-width="500" pixel-height="250" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Create vectors

# In default, you do not need to change the following setting.
xv := &lt;seq(x[i],i=1..dimx)&gt;;
lmdv := &lt;seq(lmd[i],i=1..dimx)&gt;;
uv := &lt;seq(u[i],i=1..dimu)&gt;;
muv := &lt;seq(u[i],i=(dimu+1)..(dimu+dimc))&gt;;
pv := &lt;seq(p[i],i=1..dimp)&gt;;
</EC-CodeEditor></CodeEditor-ExecGroup><Text-field style="Text" layout="Normal"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" family="Arial" layout="Normal" alignment="justify"></Text-field><Text-field style="Text" family="Arial" layout="Normal" alignment="justify"><Font bold="true" family="Arial">Define f(x,u,p), C(x,u,p), p(t), L(x,u,p) and phi(x,p)</Font></Text-field><Text-field style="Text" family="Arial" layout="Normal" alignment="justify"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69303" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font size="11" family="Arial" italic="true">&lt;Create temprary parameters&gt;</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69353" drawlabel="true">
<Input><Text-field style="Text" foreground="[255,0,0]" layout="Normal"><Font size="9" foreground="[255,0,0]" family="Arial">(As needed)</Font></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69318" drawlabel="true">
<Input><Text-field style="Text" size="9" layout="Normal" bullet="dot"><Font size="9" family="Arial">If you use temporary parameters when you define the parameters: fxu, Cxu, pt, L and phi,  open the code editor at right side. </Font><Font size="9">
</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69321" drawlabel="true">
<Input><Text-field style="Text" foreground="[255,0,0]" size="9" layout="Normal" bullet="dot"><Font size="9" foreground="[0,0,0]" family="Arial">You can write the temporary parameters using Maple command in a code editor. 
</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69347" drawlabel="true">
<Input><Text-field style="Text" foreground="[255,0,0]" size="9" layout="Normal" bullet="dot"><Font size="9" foreground="[0,0,0]" family="Arial">If you save these custom parameter,  write the temporary parameters using Maple command in a code editor. 

*vector type:  </Font><Font size="9" foreground="[255,0,0]" family="Arial">&lt; .. &gt;  or Vector( ...)</Font><Font size="9" foreground="[0,0,0]">
</Font></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><CodeEditor-ExecGroup view="presentation" hide-input="false" labelreference="L69351" display="code"><EC-CodeEditor id="CodeEditRegion4" visible="true" pixel-width="822" pixel-height="366" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Define temporary parameters by user
# Parameters in this area are not saved to save file in default.  
# 
# Example
#ev:=  Vector([seq(xv[i] - xf[i], i=1..dimx)]);
#ev := &lt;x[1]-p[1],x[2]&gt;;

Ecv := Vector([seq((u[i]-(umax[i] + umin[i])/2)^2 -(umax[i] - (umax[i] + umin[i])/2)^2, i=1..dimc)]);
ex:=  Vector([seq(xv[i] - p[i], i=1..dimx)]);
eu:=  Vector([seq(uv[i] - uf[i], i=1..dimu)]);

</EC-CodeEditor></CodeEditor-ExecGroup><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">fxu</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">State Equation</Font></Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">*vector type:  <Font foreground="[255,0,0]">&lt; .. &gt;  or Vector( ...)</Font></Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-input="false" hide-output="false" labelreference="L69322" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">fxu:= Vector([x[2],
            u[1]*(cos(x[7])*sin(x[8])*cos(x[9]) + sin(x[7])*sin(x[9])),
            x[4],
            u[1]*(cos(x[7])*sin(x[8])*sin(x[9]) - sin(x[7])*cos(x[9])),
            x[6],
            u[1]*cos(x[7])*cos(x[8]) - g,
            (u[2]*cos(x[7]) + u[3]*sin(x[7]))/cos(x[8]),
            -u[2]*sin(x[7]) + u[3]*cos(x[7]),
            u[2]*cos(x[7])*tan(x[8]) + u[3]*sin(x[7])*tan(x[8]) + u[4]]);
</Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">Cxu</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">Constraints</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">*vector type:  <Font foreground="[255,0,0]">&lt; .. &gt;  or Vector( ...)</Font></Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">*If  element of this vector is noting, write <Font foreground="[255,0,0]">&quot;&lt;NULL&gt; or Vector(0, [])&quot;.</Font></Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-input="false" hide-output="false" labelreference="L69334" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Cxu:= Vector([seq(Ecv[i] + u[i+4]^2, i=1..dimc)]);</Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">pt</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">Time-Variant Parameters</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">*vector type:  <Font foreground="[255,0,0]">&lt; .. &gt;  or Vector( ...)</Font>
*If  element of this vector is noting, write <Font foreground="[255,0,0]">&quot;&lt;NULL&gt; or Vector(0, [])&quot;.</Font></Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-input="false" hide-output="false" labelreference="L69324" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">pt:= Vector([1.5-1.5/(1+exp((t-10)*10)),0,1.5-1.5/(1+exp((t-10)*10)),0,1.5-1.5/(1+exp((t-10)*10)),0,0,0,0]);</Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial" italic="true">&lt;Create vectors and Matrices&gt;</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">qv: Vector for diagonal matrix Q</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">rv: Weight Vector</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">sfv: Vector for diagonal matrix Sf </Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">Q: Square matrix (default: Diagonal matrix)</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">R: Square matrix (default: Diagonal matrix)</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" family="Arial">Sf: Square matrix (default: Diagonal matrix)
</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bullet="dot"><Font size="9" foreground="[255,0,0]" family="Arial">You can rewrite matrices Q, R and Sf  if you open a Code Editor and edit  Maple commands for these matrices.

</Font><Font size="9" family="Arial">*vector type<Font foreground="[255,0,0]">: &lt;...&gt; or Vector(...) </Font>
</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" labelreference="L69304" display="code"><EC-CodeEditor id="CodeEditRegion1" visible="false" pixel-width="500" pixel-height="365" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Create weight vectors and matrices for GUI

# vector type:  &lt; ... &gt;
qv := &lt;seq(q[i],i=1..dimx)&gt;;
rv := &lt;seq(r[i],i=1..dimu)&gt;;
sfv := &lt;seq(sf[i],i=1..dimx)&gt;;
Q := LinearAlgebra:-DiagonalMatrix(qv);
R := LinearAlgebra:-DiagonalMatrix(rv);
Sf := LinearAlgebra:-DiagonalMatrix(sfv);

# convert to string for save file
stqv := convert(qv, string):
strv := convert(rv, string):
stsfv := convert(sfv, string):
stQ := convert(stQ, string):
stR := convert(stR, string):
stSf := convert(Sf, string):
</EC-CodeEditor></CodeEditor-ExecGroup><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">L</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">Integrand in the Performance Index
</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-input="false" hide-output="false" labelreference="L69306" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="11">L:= (ex^%T.Q.ex + eu^%T.R.eu- g1*u[5] - g2*u[6]- g3*u[7] - g4*u[8])/2;
</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="false"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">phi</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="11" layout="Normal"><Font size="9" family="Arial">Terminal Penalty</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-input="false" hide-output="false" labelreference="L69335" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="11">phi:= (ex^%T.Sf.ex)/2;
</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" family="Arial" layout="Normal"><Font bold="true" family="Arial">Define User's Variables and Arrays</Font></Text-field><Text-field style="Text" layout="Normal"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">MyVarNames</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">List of Variable Names Defined by User</Font></Text-field><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">
* Use List type: <Font foreground="[255,0,0]">[ .. ] </Font>for MyVarNames
* Use string type: <Font foreground="[255,0,0]">&quot;..&quot;</Font>  for elements of MyVarNames</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L69296" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">MyVarNames:= [&quot;g&quot;, &quot;g1&quot;, &quot;g2&quot;,&quot;g3&quot;, &quot;g4&quot;]:
</Font><Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation><Font size="12">
</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">MyVarValues</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">List of Values for User's Variables

* Use List type: <Font foreground="[255,0,0]">[ .. ] </Font>for elements of MyVarValues</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L69343" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">MyVarValues:= [9.81, 0.01,0.01,0.01,0.01]:

</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">MyArrNames</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">List of Array Names Defined by User</Font></Text-field><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">
* Use List type: <Font foreground="[255,0,0]">[ .. ] </Font>for MyArrNames
* Use string type: <Font foreground="[255,0,0]">&quot;..&quot; </Font>for elements of MyArrNames</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L69336" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">MyArrNames:= [&quot;q&quot;, &quot;r&quot;, &quot;sf&quot;, &quot;xf&quot;, &quot;uf&quot;, &quot;umax&quot;, &quot;umin&quot;]:

</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">MyArrDims</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">List of Dimensions of User's Arrays</Font></Text-field><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">
* Use List type: <Font foreground="[255,0,0]">[ .. ]</Font> for MyArrDims</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L69317" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">MyArrDims:= [dimx, dimu, dimx, dimx, dimu, dimc, dimc]:

</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">MyArrValues</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">List of Values for User's Arrays

* Use List type: <Font foreground="[255,0,0]">[ .. ] </Font>for MyArrValues<Font foreground="[255,0,0]">
</Font>* Use Vector type<Font foreground="[255,0,0]">: &lt; .. &gt; or Vector([...]) </Font>for elements of MyArrValues</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69300" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">MyArrValues:= [&lt;10, 1, 2, 1, 10, 1, 1, 1, 1&gt;, &lt;1, 1, 1, 1,0.1, 0.1, 0.1, 0.1&gt;, &lt;10, 1, 2, 1, 10, 1, 1, 1, 1&gt;, &lt;0, 0, 0, 0, 0, 0,0, 0, 0&gt;, &lt;9.81, 0, 0, 0,3.4167,1,1,1&gt;,&lt;11, 1, 1, 1&gt;, &lt;0, -1, -1, -1&gt;]:
</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" bold="true" layout="Normal"></Text-field><Text-field style="Text" bold="true" layout="Normal"><Font bold="true" family="Arial">Define Simulation Conditions</Font></Text-field><Text-field style="Text" bold="true" layout="Normal"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" bold="true" layout="Normal"><Font size="10" bold="true" family="Arial">&lt;doubles&gt;</Font></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">tim0</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Initial Time of Simulation</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L69326" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="11">tsim0:= 0.0:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">tsim</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Final Time of Simulation</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69313" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="11">tsim:= 20.0:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">ht</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Time Step in Simulation</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69323" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">ht:= 1.0/100.0:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">tf</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Final Horizon Length</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69338" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">tf:= 1.00:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">alpha</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">Parameter for Variable Horizon,  </Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">T = tf*(1-exp(-alpha*t)) </Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69307" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">alpha:= 1:</Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">zeta</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Parameter for Stabilization of Continuation Method</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69315" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">zeta:= 100.0:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">x0</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" family="Arial" layout="Normal"><Font size="9" family="Arial">Initial State
*vector type<Font foreground="[255,0,0]">: &lt;...&gt; or Vector(...) </Font></Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69344" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">x0:= &lt;1, 0, 1, 0, 1, 0, 0,0,0&gt;:

</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">u0</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" family="Arial" layout="Normal"><Font size="9" family="Arial">Initial Guess for Initial Control Input and Multipliers 
*vector type<Font foreground="[255,0,0]">: &lt;...&gt; or Vector(...) </Font></Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69311" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">u0:= &lt;11, 0, 0, 0, 0, 1, 1, 1&gt;:

</Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">rtol</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Tolerance of Error in Initial Control Input and Multipliers, u0</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69337" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">rtol:= 1.0e-6:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">hdir</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Step in the Forward Difference Approximation</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69314" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">hdir:= 0.0001:</Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" bold="true" layout="Normal"><Font size="10" bold="true" family="Arial">&lt;integers&gt;</Font></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">kmax</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Number of Iteration in GMRES</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69295" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">kmax:= 7:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">dv</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Number of Grids on the Horizon</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69319" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dv:= 48:</Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">dstep</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Step for Saving Data</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69349" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dstep:= 1:</Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" bold="true" layout="Normal"><Font size="10" bold="true" family="Arial">&lt;string&gt;</Font></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">outfn</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Filename of C Source File</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group hide-output="false" labelreference="L69339" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">outfn:= &quot;coQuadcopter_xfnopre_Command&quot;:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">fndat</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="9" family="Arial">Header of Data Filenames</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L69346" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">fndat:= &quot;coxfproCommand_&quot;:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" family="Arial" layout="Normal"></Text-field><Text-field style="Text" family="Arial" layout="Normal"><Font bold="true" family="Arial">Define SymplifyLevel</Font></Text-field><Text-field style="Text" layout="Normal"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="11" family="Arial" layout="Normal"><Font size="11" family="Arial">SimplifyLevel</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="9" family="Arial" layout="Normal" bulletsuffix="."><Font size="9" foreground="[255,0,0]" family="Arial">SimplifyLevel = 0:  </Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bulletsuffix="."><Font size="9" family="Arial">simplify is not used.</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bulletsuffix="."></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bulletsuffix="."><Font size="9" foreground="[255,0,0]" family="Arial">SimplifyLevel&gt;0: </Font><Font size="9" family="Arial">  </Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal" bulletsuffix="."><Font size="9" family="Arial"> simplify is used.

The larger SimplifyLevel is, the more expressions are simplified.</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L69330" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">SimplifyLevel:= 0:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" family="Arial" layout="Normal"></Text-field><Text-field style="Text" family="Arial" layout="Normal"><Font bold="true" family="Arial">Define Precondition</Font></Text-field><Text-field style="Text" family="Arial" layout="Normal"></Text-field></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" layout="Normal"><Font size="11" family="Arial">Precondition</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" foreground="[255,0,0]" family="Arial">Precondition=0:   </Font><Font size="9" family="Arial"> </Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">preconditioning for a linear  equation in the algorithm.</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" foreground="[255,0,0]" family="Arial">Precondition=1, </Font><Font size="9" family="Arial">preconditioning by the Hessian of the Hamiltonian.</Font></Text-field></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1">
<Group labelreference="L69352" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" size="11" layout="Normal"><Font size="12">Precondition:= 0:</Font></Text-field>
</Input>
</Group></Table-Cell></Table-Row><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="3"><Text-field style="Text" size="10" family="Arial" layout="Normal"><Font size="11" bold="true" family="Arial">[Note1]  </Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">    Specification of Simplify[]</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">    SimplifyLevel = 0 :  Simplify[] is not used in Maple.</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">    SimplifyLevel &gt; 0 :  H_x, H_u (H is the Hamiltonian), and phi_x are simplified.</Font></Text-field><Text-field style="Text" size="10" family="Arial" layout="Normal"></Text-field><Text-field style="Text" size="10" family="Arial" layout="Normal"><Font size="11" bold="true" family="Arial">[Note2]</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">    Specification of Preconditioning</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">    Precondition=0 :  no preconditioning for a linear equation in the algorithm.</Font></Text-field><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">    Precondition=1 :  preconditioning by the Hessian of the Hamiltonian. </Font></Text-field></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69299" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69340" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Check the Dimension Parameters</Text-field></Title><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69354" display="button"><EC-CodeEditor id="CodeEditRegion16" visible="false" pixel-width="700" pixel-height="500" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Check the dimentions parameter

# errfile name
errfile := cat(currentdir(),&quot;\134\134&quot;,&quot;err.txt&quot;):

# initialize error parmeter
errfp := NULL:
iserr := false:
errmsg := NULL:

compmsg := &quot;Check of dimension parameters is OK.&quot;:

# fxu: vector, My****: list
if dimx &lt;&gt; Dimension(fxu) then
  errmsg := &quot;Warning! Dimension Missmatch in dimx and fxu.\134n&quot;:
  iserr := true:
elif nops(MyVarNames) &lt;&gt; nops(MyVarValues) then
  errmsg := &quot;Warning! Dimension Missmatch in MyVarNames and MyVarValues.\134n&quot;:
  iserr := true:
elif nops(MyArrNames) &lt;&gt; nops(MyArrDims) or
         nops(MyArrDims) &lt;&gt; nops(MyArrValues) then
  errmsg := &quot;Warning! Dimension Missmatch in MyArrNames, MyArrDims and MyArrValues.\134n&quot;:  
  iserr := true:
end if:

if iserr = true then
  errfp:=fopen(errfile, WRITE, TEXT):
  try
    fprintf(errfp, &quot;%s&quot;, errmsg):
    printf(&quot;%s&quot;, errmsg);
  finally
    fclose(errfp):
    errfp:= NULL:
  end try:
  
  quit:
else
  printf(&quot;%s&quot;,compmsg);
end if:

# Set GUI Component for Option
# Case:  dimp = 0 
if dimp = 0 then
  DocumentTools:-SetProperty(&quot;Check_ptOpt&quot;, enabled, false):
else
  DocumentTools:-SetProperty(&quot;Check_ptOpt&quot;, enabled, false):
end if:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69298" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69350" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Save Setting Parameters</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69312" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69333" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Set a saved file name to the following text area.  When you save a file, the program automatically assigns the extension &quot;.mpl&quot; to the filename.</Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="group" postexecute="insert" drawcaption="false" width="71.61100196463654%" captionalignment="0" showinput="true" captionposition="1" id="Table6" alignment="left" randomized="false" labelreference="L69325" showgroup="true" order="row"><Table-Column weight="219" separator="true"></Table-Column><Table-Column weight="510" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69308" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font family="Arial">paramfn</Font></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69302" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><EC-TextArea id="Text_ParamFileName" enabled="true" visible="true" visiblecharacterwidth="40" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="saveparam" editable="true" wrapping="true" show-border="true" password="false"><MapleCode action="content-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.


# Check save file name strings
CheckSaveFileNameStrings := proc(textname::string)
  local tfname, strExt, defaultname, poslist, pfname:

  # Remove white space
  tfname := StringTools:-Trim(textfname):

  strExt := &quot;.mpl&quot;:
  defaultname := &quot;saveparam&quot;:

  if tfname = &quot;&quot; then
    tfname = &quot;saveparam&quot;:
  end if:

  # Search the position of extension string 
  poslist := [StringTools:-SearchAll(strExt, tfname)]:

  # Set parameter file name
  if nops(poslist) &gt; 0 then
    if StringTools:-SubString(tfname, -4..-1) = strExt then
      pfname := tfname:
    else
      pfname := cat(tfname, strExt):
    end if:
  else
    pfname := cat(tfname, strExt):
  end if:

  # check first string
  if StringTools:-SubString(pfname, 1..1) = &quot;.&quot; then
    pfname := cat(defaultname,pfname):
  end if:

  tfname := StringTools:-SubString(pfname, 1..-5):
  return tfname:
end proc:

# Get text strings
textfname := DocumentTools:-GetProperty(&quot;Text_ParamFileName&quot;, value):

# Check file name
newtextfname := CheckSaveFileNameStrings(textfname);

# Set textname to Text Area
DocumentTools:-SetProperty(&quot;Text_ParamFileName&quot;, value, newtextfname):

end use; 
</MapleCode></EC-TextArea><Font family="Arial">.mpl</Font></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69305" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69329" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">You can save additional temporary parameters, if you expand the following code editor and add the parameter names in save command.  </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69345" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69320" display="button"><EC-CodeEditor id="CodeEditRegion20" visible="false" pixel-width="500" pixel-height="462" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Save setting parameters to file

# Get file name
# ------------------------------
# Do not change the setting
strfname := DocumentTools:-GetProperty(&quot;Text_ParamFileName&quot;, value):
strExt := &quot;.mpl&quot;:
paramfn := cat(strfname, strExt):
# -------------------------------


# Save these parameters to file
# You can save additioan temporary parameters, 
# if you add the parameter names in the 
# following &quot;save&quot; command.  
save 
 dimx, dimu, dimc, dimp, 
 xv, lmdv, uv, muv, pv, fxu, Cxu, pt,
 qv, rv, sfv, Q, R, Sf, 
 L, phi, MyVarNames, MyVarValues, MyArrNames, MyArrDims, MyArrValues,
 tsim0, tsim, tf, ht, alpha, zeta, x0, u0, hdir, rtol, kmax, dv, dstep, outfn, 
 fndat, SimplifyLevel, Precondition, 
 paramfn;
</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69327" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69309" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69331" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Function for C Code Generation</Text-field></Title>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Differentiation by a Vector: Dv</Text-field></Title><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L45595" display="button"><EC-CodeEditor id="CodeEditRegion3" visible="false" pixel-width="600" pixel-height="424" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true">Dv := proc(f,x)
  local xtmp, ans;
  xtmp := convert(x, list):

  if type(f, algebraic) then
    ans :=Matrix([seq(diff(f,xtmp[i]),i=1..nops(xtmp))]);
  else
    ans := VectorCalculus[Jacobian](convert(f,list),xtmp);
  end if;

  if Dimension(ans)&lt;&gt;1 then
    ans:= LinearAlgebra:-Transpose(Matrix(ans));
  else
    ans:
  end if:
end proc;
</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L45567" drawlabel="true">
<Input><Text-field style="Text" size="14" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61569" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Generate Euler-Lagrange Equations</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61637" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L61602" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">H:=L + lmdv^%T.fxu + muv^%T.Cxu;</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L61615" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">uv := convert([uv, muv], Vector);</Text-field>
</Input>
</Group>
<Group labelreference="L61600" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dimuc := dimu + dimc:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L61605" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Hx := Dv(H,xv);</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L61612" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Hu := Dv(H,uv);</Text-field>
</Input>
</Group>
<Group labelreference="L61608" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">if SimplifyLevel &gt; 0 then
  Hx := simplify(Hx);
  Hu := simplify(Hu);
end if:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L61616" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">dlmddt := -Hx;</Text-field>
</Input>
</Group>
<Group labelreference="L61609" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">if Precondition = 1 then
  Huu := Dv(Hu, uv);
  Hu := LinearAlgebra[LinearSolve](Huu,Hu);
  if SimplifyLevel &gt; 0 then 
    Hu := simplify(Hu); 
  end if;
end if;</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61617" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61593" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-input="false" labelreference="L61632" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">phix := Dv(phi,xv);</Text-field>
</Input>
</Group>
<Group labelreference="L61633" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">if SimplifyLevel &gt; 0 then
  phix := simplify(phix);
end if;</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61614" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="group" postexecute="insert" drawcaption="false" width="79.46943483275663%" captionalignment="0" showinput="true" captionposition="1" id="Table7" alignment="left" randomized="false" labelreference="L61611" showgroup="true" order="row"><Table-Column weight="689" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61590" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="Label_OptSetting" caption="Optimization Setting: " enabled="true" visible="true" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-CheckBox id="Check_ptOpt" groupname="" caption="pt" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="true" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Check_ptOpt&quot;, value);
DocumentTools:-SetProperty(&quot;Check_ptOpt&quot;, value, val);

end use; 
</MapleCode></EC-CheckBox>    <EC-CheckBox id="Check_phixOpt" groupname="" caption="phix" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="true" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Check_phixOpt&quot;, value);
DocumentTools:-SetProperty(&quot;Check_phixOpt&quot;, value, val);

end use; 
</MapleCode></EC-CheckBox>   <EC-CheckBox id="Check_fxuOpt" groupname="" caption="fxu" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="true" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Check_fxuOpt&quot;, value);
DocumentTools:-SetProperty(&quot;Check_fxuOpt&quot;, value, val);

end use; 
</MapleCode></EC-CheckBox>   <EC-CheckBox id="Check_dlmddtOpt" groupname="" caption="dlmddt" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="true" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Check_dlmddtOpt&quot;, value);
DocumentTools:-SetProperty(&quot;Check_dlmddtOpt&quot;, value, val);

end use; 
</MapleCode></EC-CheckBox>   <EC-CheckBox id="Check_HuOpt" groupname="" caption="Hu" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="true" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Check_HuOpt&quot;, value);
DocumentTools:-SetProperty(&quot;Check_HuOpt&quot;, value, val);

end use; 
</MapleCode></EC-CheckBox>    <EC-Button id="Button_ResetOptSetting" caption="Reset Optimization Settings" pixel-width="300" pixel-height="200" enabled="true" visible="true" show-border="true" user-size="false" fontcolor="[0,0,0]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

  DocumentTools:-SetProperty(&quot;Check_ptOpt&quot;, value, true):
  DocumentTools:-SetProperty(&quot;Check_phixOpt&quot;, value, true):
  DocumentTools:-SetProperty(&quot;Check_fxuOpt&quot;, value, true):
  DocumentTools:-SetProperty(&quot;Check_dlmddtOpt&quot;, value, true):
  DocumentTools:-SetProperty(&quot;Check_HuOpt&quot;, value, true):

  # Case:  dimp = 0 
  if dimp = 0 then
    DocumentTools:-SetProperty(&quot;Check_ptOpt&quot;, enabled, false):
  else
    DocumentTools:-SetProperty(&quot;Check_ptOpt&quot;, enabled, true):
  end if:
end use; 
</MapleCode></EC-Button></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61591" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61623" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">  If it is checked for each checkbox , a optimize command is used for the corresponding function: pt, phix, fxu, dlmddt and  Hu, which are used the parameters. Default settings are all checked. </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61601" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">
<Font size="9" family="Arial">     <Font foreground="[0,0,255]">pt</Font>: a function </Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2KFEicEYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSShtZmVuY2VkR0YkNictRiM2Jy1GLDYoUSJ0RidGL0YyRjVGOEY7Ri9GMkY4L0Y8USdub3JtYWxGJ0YvRjJGOEZGRi9GMkY4RkY=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2KFEicEYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSShtZmVuY2VkR0YkNictRiM2Jy1GLDYoUSJ0RidGL0YyRjVGOEY7Ri9GMkY4L0Y8USdub3JtYWxGJ0YvRjJGOEZGRi9GMkY4RkY=</Equation><Font size="9" family="Arial">  (If dimp = 0, the checkbox for &quot;pt&quot; is unenabled.)  
     <Font foreground="[0,0,255]">phix</Font><Font encoding="UTF-8">: a derivative function of  \317\225</Font></Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkobWZlbmNlZEdGJDYnLUYjNiktSSNtaUdGJDYoUSJ4RicvJSdmYW1pbHlHUSZBcmlhbEYnLyUlc2l6ZUdRIjlGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNjBRIixGJ0Y0RjdGPS9GQVEnbm9ybWFsRicvJSZmZW5jZUdGPy8lKnNlcGFyYXRvckdGPC8lKXN0cmV0Y2h5R0Y/LyUqc3ltbWV0cmljR0Y/LyUobGFyZ2VvcEdGPy8lLm1vdmFibGVsaW1pdHNHRj8vJSdhY2NlbnRHRj8vJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GMTYoUSJwRidGNEY3RjpGPUZARjRGN0Y9RkdGNEY3Rj1GR0Y0RjdGPUZH">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkobWZlbmNlZEdGJDYnLUYjNiktSSNtaUdGJDYoUSJ4RicvJSdmYW1pbHlHUSZBcmlhbEYnLyUlc2l6ZUdRIjlGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNjBRIixGJ0Y0RjdGPS9GQVEnbm9ybWFsRicvJSZmZW5jZUdGPy8lKnNlcGFyYXRvckdGPC8lKXN0cmV0Y2h5R0Y/LyUqc3ltbWV0cmljR0Y/LyUobGFyZ2VvcEdGPy8lLm1vdmFibGVsaW1pdHNHRj8vJSdhY2NlbnRHRj8vJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR1EsMC4zMzMzMzMzZW1GJy1GMTYoUSJwRidGNEY3RjpGPUZARjRGN0Y9RkdGNEY3Rj1GR0Y0RjdGPUZH</Equation><Font size="9" family="Arial"> with respect to </Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEieEYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRidGL0YyRjgvRjxRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEieEYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRidGL0YyRjgvRjxRJ25vcm1hbEYn</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61634" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">     <Font foreground="[0,0,255]">fxu</Font>: a function  </Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2KFEiZkYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSShtZmVuY2VkR0YkNictRiM2LS1GLDYoUSJ4RidGL0YyRjVGOEY7LUkjbW9HRiQ2MFEiLEYnRi9GMkY4L0Y8USdub3JtYWxGJy8lJmZlbmNlR0Y6LyUqc2VwYXJhdG9yR0Y3LyUpc3RyZXRjaHlHRjovJSpzeW1tZXRyaWNHRjovJShsYXJnZW9wR0Y6LyUubW92YWJsZWxpbWl0c0dGOi8lJ2FjY2VudEdGOi8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZHNjBRIn5GJ0YvRjJGOEZKRkwvRk9GOkZQRlJGVEZWRlhGWi9GaG5GZm4tRiw2KFEidUYnRi9GMkY1RjhGO0ZGRmpuLUYsNihRInBGJ0YvRjJGNUY4RjtGL0YyRjhGSkYvRjJGOEZKRi9GMkY4Rko=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbWlHRiQ2KFEiZkYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSShtZmVuY2VkR0YkNictRiM2LS1GLDYoUSJ4RidGL0YyRjVGOEY7LUkjbW9HRiQ2MFEiLEYnRi9GMkY4L0Y8USdub3JtYWxGJy8lJmZlbmNlR0Y6LyUqc2VwYXJhdG9yR0Y3LyUpc3RyZXRjaHlHRjovJSpzeW1tZXRyaWNHRjovJShsYXJnZW9wR0Y6LyUubW92YWJsZWxpbWl0c0dGOi8lJ2FjY2VudEdGOi8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUZHNjBRIn5GJ0YvRjJGOEZKRkwvRk9GOkZQRlJGVEZWRlhGWi9GaG5GZm4tRiw2KFEidUYnRi9GMkY1RjhGO0ZGRmpuLUYsNihRInBGJ0YvRjJGNUY4RjtGL0YyRjhGSkYvRjJGOEZKRi9GMkY4Rko=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61636" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">     <Font foreground="[0,0,255]">dlmddt</Font>: a derivative function of  </Font><Equation executable="false" style="Text" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2J1EnJiM5NTU7RicvJSdmYW1pbHlHUSZBcmlhbEYnLyUlc2l6ZUdRIjlGJy8lJ2l0YWxpY0dRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnRi9GMkY4">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2J1EnJiM5NTU7RicvJSdmYW1pbHlHUSZBcmlhbEYnLyUlc2l6ZUdRIjlGJy8lJ2l0YWxpY0dRJmZhbHNlRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnRi9GMkY4</Equation><Font size="9" family="Arial"> with respect to time</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61635" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">     <Font foreground="[0,0,255]">Hu</Font>: a derivative function of </Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEiSEYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRidGL0YyRjgvRjxRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEiSEYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRidGL0YyRjgvRjxRJ25vcm1hbEYn</Equation><Font size="9" family="Arial"> with respect to </Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEidUYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRidGL0YyRjgvRjxRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEidUYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRidGL0YyRjgvRjxRJ25vcm1hbEYn</Equation><Font size="9" family="Arial"> </Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61628" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61607" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61621" display="button"><EC-CodeEditor id="CodeEditRegion22" visible="false" pixel-width="600" pixel-height="300" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Check Optimization Flags

# Case:  dimp = 0 
if dimp = 0 then
  DocumentTools:-SetProperty(&quot;Check_ptOpt&quot;, enabled, false):
else
  DocumentTools:-SetProperty(&quot;Check_ptOpt&quot;, enabled, true):
end if:

flg_pt := parse(DocumentTools:-GetProperty(&quot;Check_ptOpt&quot;, value)):
flg_phix := parse(DocumentTools:-GetProperty(&quot;Check_phixOpt&quot;, value)):
flg_fxu := parse(DocumentTools:-GetProperty(&quot;Check_fxuOpt&quot;, value)):
flg_dlmddt := parse(DocumentTools:-GetProperty(&quot;Check_dlmddtOpt&quot;, value)):
flg_Hu := parse(DocumentTools:-GetProperty(&quot;Check_HuOpt&quot;, value)):

if flg_pt = true then	
  if LinearAlgebra:-Dimension(pt) &gt; 0 then
    #pt := simplify(pt):
    simplipt := optimize(pt,'tryhard'):
  else
    simplipt := NULL:
  end if:
else
  simplipt := NULL:
end if:

if flg_phix = true then
  #phix := simplify(phix):
  simpliphix := optimize(phix,'tryhard'):
else
  simpliphix := NULL:
end if:

if flg_fxu = true then
  #fxu := simplify(fxu):
  simplifxu := optimize(fxu,'tryhard'):
else
  simplifxu := NULL:
end if:

if flg_dlmddt = true then
  #dlmddt := simplify(dlmddt):
  simplidlmddt :=optimize(dlmddt,'tryhard'):
else
  simplidlmddt := NULL:
end if:

if flg_Hu = true then
  #Hu := simplify(Hu):
  simpliHu :=optimize(Hu,'tryhard'):
else
  simpliHu := NULL:
end if:


# Check optimized parameters
printf(&quot;\134nsimplipt := &quot;);
if simplipt = NULL then
  printf(&quot;NULL&quot;);
else
  simplipt;
end if;

printf(&quot;\134nsimpliphix := &quot;);
if simpliphix = NULL then
  printf(&quot;NULL&quot;);
else
  simpliphix;
end if;

printf(&quot;\134nsimplifxu := &quot;);
if simplifxu = NULL then
  printf(&quot;NULL&quot;);
else
  simplifxu;
end if;

printf(&quot;\134nsimplidlmddt := &quot;);
if simplidlmddt = NULL then
  printf(&quot;NULL&quot;);
else
  simplidlmddt;
end if;

printf(&quot;\134nsimpliHu := &quot;);
if simpliHu = NULL then
  printf(&quot;NULL&quot;);
else
  simpliHu;
end if;
</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61610" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61618" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Generate C Code</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61592" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="none" postexecute="insert" drawcaption="false" drawtitle="false" width="79.57589%" captionalignment="0" showinput="true" captionposition="1" id="Table8" alignment="left" randomized="false" labelreference="L61630" showgroup="true" order="row"><Table-Column weight="713" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61627" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="Label_NMPCOption" caption="NMPC &quot;#define&quot; Option:" enabled="true" visible="true" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label>  <EC-CheckBox id="Check_define_HDIR_EQ_HT" groupname="" caption="HDIR_EQ_HT" tooltip="Flag for using &quot;#define HDIR_EQ_HT&quot; " pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="false" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Check_define_HDIR_EQ_HT&quot;, value);
DocumentTools:-SetProperty(&quot;Check_define_HDIR_EQ_HT&quot;, value, val);

end use; 
</MapleCode></EC-CheckBox>   <EC-CheckBox id="Check_define_RESET_DU" groupname="" caption="RESET_DU" tooltip="Flag for using &quot;#define RESET_DU&quot;" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="false" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Check_define_RESET_DU&quot;, value);
DocumentTools:-SetProperty(&quot;Check_define_RESET_DU&quot;, value, val);

end use; 
</MapleCode></EC-CheckBox>   <EC-CheckBox id="Check_define_ADAMS" groupname="" caption="ADAMS" tooltip="Flag for using &quot;#define ADAMS&quot;" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="false" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Check_define_ADAMS&quot;, value);
DocumentTools:-SetProperty(&quot;Check_define_ADAMS&quot;, value, val);

end use; 
</MapleCode></EC-CheckBox>       <EC-Button id="Button_ResetNMPCOption" caption="Reset option settings" pixel-width="300" pixel-height="200" enabled="true" visible="true" show-border="true" user-size="false" fontcolor="[0,0,0]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

DocumentTools:-SetProperty(&quot;Check_define_HDIR_EQ_HT&quot;, value, false):
DocumentTools:-SetProperty(&quot;Check_define_RESET_DU&quot;, value, false):
DocumentTools:-SetProperty(&quot;Check_define_ADAMS&quot;, value, false):

end use; 
</MapleCode></EC-Button></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61597" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61599" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">  If  each checkbox is selected, you can use the corresponding &quot;#define&quot; option in C Code. </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61606" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">
      <Font foreground="[0,0,255]">HDIR_EQ_HT</Font>:  Flag for </Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkjbWlHRiQ2KFEtJiM5MTY7JiM5NjQ7RicvJSdmYW1pbHlHUSZBcmlhbEYnLyUlc2l6ZUdRIjlGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNjBRIn5GJ0YvRjJGOC9GPFEnbm9ybWFsRicvJSZmZW5jZUdGOi8lKnNlcGFyYXRvckdGOi8lKXN0cmV0Y2h5R0Y6LyUqc3ltbWV0cmljR0Y6LyUobGFyZ2VvcEdGOi8lLm1vdmFibGVsaW1pdHNHRjovJSdhY2NlbnRHRjovJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZURj4tRj82MFEiPUYnRi9GMkY4RkJGREZGRkhGSkZMRk5GUC9GU1EsMC4yNzc3Nzc4ZW1GJy9GVkZlbkY+LUYsNihRKCYjOTE2O3RGJ0YvRjJGNUY4RjtGL0YyRjhGQg==">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYsLUkjbWlHRiQ2KFEtJiM5MTY7JiM5NjQ7RicvJSdmYW1pbHlHUSZBcmlhbEYnLyUlc2l6ZUdRIjlGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNjBRIn5GJ0YvRjJGOC9GPFEnbm9ybWFsRicvJSZmZW5jZUdGOi8lKnNlcGFyYXRvckdGOi8lKXN0cmV0Y2h5R0Y6LyUqc3ltbWV0cmljR0Y6LyUobGFyZ2VvcEdGOi8lLm1vdmFibGVsaW1pdHNHRjovJSdhY2NlbnRHRjovJSdsc3BhY2VHUSYwLjBlbUYnLyUncnNwYWNlR0ZURj4tRj82MFEiPUYnRi9GMkY4RkJGREZGRkhGSkZMRk5GUC9GU1EsMC4yNzc3Nzc4ZW1GJy9GVkZlbkY+LUYsNihRKCYjOTE2O3RGJ0YvRjJGNUY4RjtGL0YyRjhGQg==</Equation><Font size="9" family="Arial">, where </Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEtJiM5MTY7JiM5NjQ7RicvJSdmYW1pbHlHUSZBcmlhbEYnLyUlc2l6ZUdRIjlGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJ0YvRjJGOC9GPFEnbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEtJiM5MTY7JiM5NjQ7RicvJSdmYW1pbHlHUSZBcmlhbEYnLyUlc2l6ZUdRIjlGJy8lJ2l0YWxpY0dRJXRydWVGJy8lK2V4ZWN1dGFibGVHUSZmYWxzZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJ0YvRjJGOC9GPFEnbm9ybWFsRic=</Equation><Font size="9" family="Arial">  is discretization step and </Font></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61625" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61620" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61596" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61595" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61594" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEoJiM5MTY7dEYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRidGL0YyRjgvRjxRJ25vcm1hbEYn">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2KFEoJiM5MTY7dEYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRidGL0YyRjgvRjxRJ25vcm1hbEYn</Equation><Font size="9" family="Arial"> is sampling period</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61613" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">      <Font foreground="[0,0,255]">RESET_DU</Font>:  Flag for reset to </Font><Equation executable="false" style="Text" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2I1EhRictSSZtb3ZlckdGJDYlLUYjNictRiw2J1EiVUYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjdGOkY9RkAtSSNtb0dGJDYwUSIuRidGN0Y6LyUscGxhY2Vob2xkZXJHRj8vRkFRJ25vcm1hbEYnLyUmZmVuY2VHUSZ1bnNldEYnLyUqc2VwYXJhdG9yR0ZNLyUpc3RyZXRjaHlHRk0vJSpzeW1tZXRyaWNHRk0vJShsYXJnZW9wR0ZNLyUubW92YWJsZWxpbWl0c0dGTS8lJ2FjY2VudEdGTS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRmZuL0ZZRj9GN0Y6Rkk=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2I1EhRictSSZtb3ZlckdGJDYlLUYjNictRiw2J1EiVUYnLyUnZmFtaWx5R1EmQXJpYWxGJy8lJXNpemVHUSI5RicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnRjdGOkY9RkAtSSNtb0dGJDYwUSIuRidGN0Y6LyUscGxhY2Vob2xkZXJHRj8vRkFRJ25vcm1hbEYnLyUmZmVuY2VHUSZ1bnNldEYnLyUqc2VwYXJhdG9yR0ZNLyUpc3RyZXRjaHlHRk0vJSpzeW1tZXRyaWNHRk0vJShsYXJnZW9wR0ZNLyUubW92YWJsZWxpbWl0c0dGTS8lJ2FjY2VudEdGTS8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRmZuL0ZZRj9GN0Y6Rkk=</Equation><Font size="9" family="Arial"> = 0  in GMRES method</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61619" drawlabel="true">
<Input><Text-field style="Text" size="9" family="Arial" layout="Normal"><Font size="9" family="Arial">      <Font foreground="[0,0,255]">ADAMS</Font>:  Flag for using the Adams-Bashforth-Moulton method  (If you do not check the checkbox, it is used the Euler method.)</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61626" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61631" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block>
<Group hide-input="false" labelreference="L61604" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">OutCFile:=cat(outfn,&quot;.c&quot;);</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L61603" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">cfile := cat(currentdir(),folderslash,OutCFile);</Text-field>
</Input>
</Group><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61624" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L61598" display="button"><EC-CodeEditor id="CodeEditRegion19" visible="false" pixel-width="600" pixel-height="158" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Save to C File 

# Save to C File with define option flg
try
  SaveToCFile_withAllOptions(cfile):
finally
  quit:
end try:</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L69841" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L68710" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Run Simulation</Text-field></Title><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68789" display="button"><EC-CodeEditor id="CodeEditRegion10" visible="false" pixel-width="700" pixel-height="4756" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Setting C Complier

# procedure for setting C compiler 
SetCCompiler := proc(cfile::string)
  local C_exe, exename, op1, opt2, targetfile, cexestr, compilestr:
  local tmp_location, cl_location, batpath:
  local OSinfo, OSbit:
  local isWhereCommand:
  local wherebatname:
  local search_cmd:

  # c compile wrapper bat file:
  local cwrapper_bat:
  
  # initialize
  C_exe := &quot;&quot;:
  exename := &quot;&quot;:
  op1 := &quot;&quot;:
  opt2 := &quot;&quot;:
  opt3 := &quot;&quot;:
  targetfile := &quot;&quot;:
  compilestr := &quot;&quot;:

  tmp_location := NULL:
  cl_location := NULL:
  batpath := &quot;&quot;:
  cwrapper_bat := &quot;&quot;:

  # initialize of OSinfo (WINDOWS/LINUX/MAC/SOLARIS/UNKNOWN)
  # and OStype (32bit/64bit)
  OSinfo := &quot;&quot;:
  OSbit := &quot;&quot;:

  search_cmd := &quot;&quot;:

  # Get OSytpe
  OSinfo := CheckOSinfo():
  OSbit := CheckOSbittype():
  
  # Get exefile and targetfile name 
  exename := DocumentTools:-GetProperty(&quot;TextOutCExe&quot;, value);
  targetfile := DocumentTools:-GetProperty(&quot;TextOutCFile&quot;, value);

  # Get Ccompile type
  if parse(DocumentTools:-GetProperty(&quot;RBtn_cl&quot;, value)) = true  then
    cexestr := &quot;cl.exe&quot;:
  elif parse(DocumentTools:-GetProperty(&quot;RBtn_gcc&quot;, value)) = true then
    cexestr := &quot;gcc.exe&quot;:
  elif parse(DocumentTools:-GetProperty(&quot;RBtn_custom&quot;, value)) = true then
    cexestr := &quot;custom&quot;:
  end if:

  # OS check for path search command: where
  if (CheckOSinfo() = &quot;WINDOWS&quot;) then
    # Check where command 
    isWhereCommand := ssystem(&quot;where where.exe&quot;);
    wherebatname := &quot;whereXP.bat&quot;:

    # Check for exist where command in Wnidows OS
    # whereXP.bat:  search path for excutable file
    if (isWhereCommand[1] &lt;&gt; 0) then
       if FileTools[Exists](wherebatname) = false then
         try
           Create_whereXPbatfile():
         end try:
       end if:
    end if:
  end if:

  # -----------------------------------
  # Check OS and selected radio button
  # -----------------------------------
  # If OS is not windows and C compile type is selected, 
  # then &quot;gcc.exe&quot; is selected as default. 
  if (CheckOSinfo() = &quot;WINDOWS&quot;) then
    	 DocumentTools:-SetProperty(&quot;RBtn_cl&quot;,enabled,true):
  end if:
     
  if (CheckOSinfo() &lt;&gt; &quot;WINDOWS&quot; and cexestr = &quot;cl.exe&quot;) then
    # GUI setting is changed  
    DocumentTools:-SetProperty(&quot;RBtn_cl&quot;,enabled,false):
    DocumentTools:-SetProperty(&quot;RBtn_cl&quot;,value, false):
    DocumentTools:-SetProperty(&quot;RBtn_gcc&quot;,enabled,true):
    DocumentTools:-SetProperty(&quot;RBtn_gcc&quot;, value, true):
    
    cexestr := &quot;gcc.exe&quot;:
  end if:

  if (cexestr = &quot;gcc.exe&quot;) then
    # GUI setting
    DocumentTools:-SetProperty(&quot;Label_SettingVCbatfile&quot;,enabled,false):
    DocumentTools:-SetProperty(&quot;Text_VCbatpath&quot;,enabled,false):
    DocumentTools:-SetProperty(&quot;Btn_Browse&quot;,enabled,false):
    DocumentTools:-SetProperty(&quot;Label_CommentVCbatfile&quot;,enabled,false):

    DocumentTools:-SetProperty(&quot;TextOutCExe&quot;, visible, false):
    DocumentTools:-SetProperty(&quot;TextOutCFile&quot;, visible, false):
    DocumentTools:-SetProperty(&quot;Label_exename&quot;, visible, false):
    DocumentTools:-SetProperty(&quot;Label_targetname&quot;, visible, false):


    if (CheckOSinfo() = &quot;WINDOWS&quot;) then
      C_exe := &quot;gcc.exe&quot;:
    else
    	 C_exe := &quot;gcc&quot;:
    end if:  
    
    op1 := &quot;-O3&quot;:
    opt2 := &quot;-o &quot;: #need a half-width space after the option &quot;-o&quot;
    
    if (CheckOSinfo() = &quot;MAC&quot; or CheckOSinfo()=&quot;WINDOWS&quot;) then
      opt3 := &quot;&quot;:  
      exename := cat(StringTools:-SubString(cfile, 1..-3),&quot;.exe&quot;):
      targetfile := cfile:
      compilestr := cat(C_exe,&quot; &quot;,targetfile,&quot; &quot;,op1,&quot; &quot;, cat(opt2,exename)):
    
    else
      opt3 := &quot;-lm&quot;:
      end if:
      exename := cat(StringTools:-SubString(cfile, 1..-3),&quot;.exe&quot;):
      targetfile := cfile:
      compilestr := cat(C_exe,&quot; &quot;,targetfile,&quot; &quot;,op1,&quot; &quot;, cat(opt2,exename),&quot; &quot;,opt3):
    
  elif (cexestr = &quot;cl.exe&quot;) then
    # GUI setting
    DocumentTools:-SetProperty(&quot;Label_SettingVCbatfile&quot;,enabled,true):
    DocumentTools:-SetProperty(&quot;Text_VCbatpath&quot;,enabled,true):
    DocumentTools:-SetProperty(&quot;Btn_Browse&quot;,enabled,true):
    DocumentTools:-SetProperty(&quot;Label_CommentVCbatfile&quot;,enabled,true):

    DocumentTools:-SetProperty(&quot;TextOutCExe&quot;, visible, false);
    DocumentTools:-SetProperty(&quot;TextOutCFile&quot;, visible, false);
    DocumentTools:-SetProperty(&quot;Label_exename&quot;, visible, false):
    DocumentTools:-SetProperty(&quot;Label_targetname&quot;, visible, false):

    # OS check
    if (CheckOSinfo() = &quot;WINDOWS&quot;) then
      # First setting for a location of VC++ bat file 
      if Trim(DocumentTools:-GetProperty(&quot;Text_VCbatpath&quot;, value)) = &quot;&quot; then

        # Get Search command strings
        search_cmd := GetSearchCommand():
        
        # Search for &quot;cl.exe&quot; command
        tmp_location := ssystem(cat(search_cmd, &quot; &quot;,&quot;cl.exe&quot;));
    	 
        # if it is successful for the location path, check path name
    	   if tmp_location[1] = 0 then
    	     cl_location :=StringTools:-StringSplit(tmp_location[2],&quot;cl.exe&quot;);

    	     # Check for first &quot;cl.exe&quot; path for VC++
    	     if (StringTools:-Search(&quot;Microsoft Visual Studio&quot;, cl_location[1]) &gt; 0) then
    	       if StringTools:-Search(&quot;x86_amd64&quot;, cl_location[1]) &gt; 0 then
    	         batpath := cat(cl_location[1], &quot;vcvarsx86_amd64.bat&quot;):
    	       elif StringTools:-Search(&quot;amd64&quot;, cl_location[1]) &gt; 0 then
    	         batpath := cat(cl_location[1], &quot;vcvars64.bat&quot;):
    	       else
    	         batpath := cat(cl_location[1], &quot;vcvars32.bat&quot;):
    	       end if:

    	       cwrapper_bat := &quot;&quot;:
    	     elif (StringTools:-Search(&quot;WATCOM&quot;, cl_location[1]) &gt; 0 or 
    	             StringTools:-Search(&quot;Watcom&quot;, cl_location[1]) &gt; 0 or
				StringTools:-Search(&quot;watcom&quot;, cl_location[1]) &gt; 0) then
            cwrapper_bat := &quot;&quot;:
    	       batpath := &quot;&quot;:
    	     else
    	       cwrapper_bat  := &quot;&quot;:
    	       batpath := &quot;&quot;:
    	     end if:
    	     
          cwrapper_bat = &quot;&quot;:
    	     DocumentTools:-SetProperty(&quot;Text_VCbatpath&quot;, value, batpath):
    	   else
    	   	#cwrapper_bat = &quot;&quot;:
          batpath :=&quot;&quot;:
    	     DocumentTools:-SetProperty(&quot;Text_VCbatpath&quot;, value, batpath):
    	   end if: 
      end if:
    # OS: without WINDOWS
    else
    	  batpath := &quot;&quot;:
    end if:

    C_exe := &quot;cl.exe&quot;;
    op1 := &quot;/O2&quot;:
    opt2 := &quot;/Fe&quot;:
    exename := cat(StringTools:-SubString(cfile, 1..-3),&quot;.exe&quot;);
    targetfile := cfile:
    compilestr := cat(C_exe,&quot; &quot;,targetfile,&quot; &quot;,op1,&quot; &quot;, cat(opt2,exename)):
    
  elif (cexestr = &quot;custom&quot;) then
    DocumentTools:-SetProperty(&quot;Label_SettingVCbatfile&quot;,enabled,false):
    DocumentTools:-SetProperty(&quot;Text_VCbatpath&quot;,enabled,false):
    DocumentTools:-SetProperty(&quot;Btn_Browse&quot;,enabled,false):
    DocumentTools:-SetProperty(&quot;Label_CommentVCbatfile&quot;,enabled,false):

    DocumentTools:-SetProperty(&quot;TextOutCExe&quot;, visible, true);
    DocumentTools:-SetProperty(&quot;TextOutCFile&quot;, visible, true);

    DocumentTools:-SetProperty(&quot;Label_exename&quot;, visible, true):
    DocumentTools:-SetProperty(&quot;Label_targetname&quot;, visible, true):

    # First setting for custom compile
    if DocumentTools:-GetProperty(&quot;Text_CompileStr&quot;, value) = &quot;&quot; then
      C_exe := &quot;&quot;:
      op1 := &quot;&quot;:
      opt2 := &quot;&quot;:
      
      exename := cat(StringTools:-SubString(cfile, 1..-3),&quot;.exe&quot;);
      
      targetfile := cfile:
      compilestr := cat(&quot;-- Set C Compile Command -- &quot;):
    else
    	  compilestr := DocumentTools:-GetProperty(&quot;Text_CompileStr&quot;, value)
    end if:
  end if:

  DocumentTools:-SetProperty(&quot;Text_CompileStr&quot;, value, compilestr);
  DocumentTools:-SetProperty(&quot;TextOutCExe&quot;, value, exename):
  DocumentTools:-SetProperty(&quot;TextOutCFile&quot;, value, targetfile):
  return exename:
end proc: 

# Set C compiler
targetfile := convert(OutCFile, string):
DocumentTools:-SetProperty(&quot;TextOutCFile&quot;, value, exename):
DocumentTools:-SetProperty(&quot;TextOutCFile&quot;, value, targetfile):

if targerfile &lt;&gt; &quot;&quot; then
  exename := SetCCompiler(targetfile):
  DocumentTools:-SetProperty(&quot;TextOutCExe&quot;, value, exename):
  DocumentTools:-SetProperty(&quot;TextOutCFile&quot;, value, targetfile):
else
  exename := &quot;&quot;:
  DocumentTools:-SetProperty(&quot;TextOutCExe&quot;, value, exename):
  DocumentTools:-SetProperty(&quot;TextOutCFile&quot;, value, targetfile):
end if:


# \345\210\235\345\233\236\350\250\255\345\256\232
# Check for TextOut parameter names
if assigned(OutCFile) = false then
  OutCFile := &quot;test1.c&quot;:
end if:

# Set C compiler
stroutcfile := convert(OutCFile, string):
SetCCompiler(stroutcfile):
</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68772" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68795" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68793" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="group" postexecute="insert" drawcaption="false" width="98.85057471264368%" captionalignment="0" showinput="true" captionposition="1" id="Table9" alignment="left" randomized="false" labelreference="L68773" showgroup="true" order="row"><Table-Column weight="688" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68778" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="Lb_SelectCCompiler1" caption="Select compiler:" enabled="true" visible="true" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-RadioButton id="RBtn_cl" groupname="Group_Ccompiler" caption="cl.exe" fontcolor="[0,0,0]" fillcolor="[255,255,255]" enabled="true" visible="true" selected="true"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

# Check for TextOut parameter names
if assigned(OutCFile) = false then
  OutCFile := &quot;test1.c&quot;:
end if:

# Set C compiler
stroutcfile := convert(OutCFile, string);
SetCCompiler(stroutcfile);

end use; 
</MapleCode></EC-RadioButton>  <EC-RadioButton id="RBtn_gcc" groupname="Group_Ccompiler" caption="gcc.exe" fontcolor="[0,0,0]" fillcolor="[255,255,255]" enabled="true" visible="true" selected="false"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

# Check for TextOut parameter names
if assigned(OutCFile) = false then
  OutCFile := &quot;test1.c&quot;:
end if:

# Set C compiler
stroutcfile := convert(OutCFile, string);
SetCCompiler(stroutcfile);

end use; 
</MapleCode></EC-RadioButton>  <EC-RadioButton id="RBtn_custom" groupname="Group_Ccompiler" caption="custom" fontcolor="[0,0,0]" fillcolor="[255,255,255]" enabled="true" visible="true" selected="false"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

# Set C compiler
stroutcfile := convert(OutCFile, string):
SetCCompiler(stroutcfile):

end use; 
</MapleCode></EC-RadioButton></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68787" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">  </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68790" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="Label_SettingVCbatfile" caption="Setting for VC++:" tooltip="VC++ Compile Setting" enabled="true" visible="true" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-TextArea id="Text_VCbatpath" enabled="true" visible="true" visiblecharacterwidth="35" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="C:\134Program Files (x86)\134Microsoft Visual Studio 14.0\134VC\134bin\134amd64\134vcvars64.bat" editable="true" wrapping="true" show-border="true" password="false"></EC-TextArea> <EC-Button id="Btn_Browse" caption="Browse..." tooltip="" pixel-width="300" pixel-height="200" enabled="true" visible="true" show-border="true" user-size="false" fontcolor="[0,0,0]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

with(Maplets[Examples]): 

tmpfilepath := DocumentTools:-GetProperty(&quot;Text_VCbatpath&quot;, value):

try
  filepath := GetFile('filefilter' = &quot;bat&quot;);

  if (StringTools:-Search(&quot;GetFile&quot;, filepath) &gt; 0) then
      filepath := tmpfilepath;
  else
    Do(%Text_VCbatpath = filepath);
  end if:
catch:
  filepath := tmpfilepath;
finally
end try:

end use; 
</MapleCode></EC-Button> <EC-Label id="Label_CommentVCbatfile" caption="Location of  &quot;vcvars**.bat&quot; file" enabled="true" visible="true" visiblecharacterwidth="20" pixel-width="300" pixel-height="200" user-size="false" user-width="true" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label>  </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68792" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68774" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="LabelCompileCommand1" caption="Compile Command:" enabled="true" visible="true" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-TextArea id="Text_CompileStr" tooltip="C Compile Strings" enabled="true" visible="true" visiblecharacterwidth="60" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="cl.exe coQuadcopter_xfnopre_Command.c /O2 /FecoQuadcopter_xfnopre_Command.exe" editable="true" wrapping="true" show-border="true" password="false"></EC-TextArea>  </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68791" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="Label_exename" caption="Execution File      " enabled="true" visible="false" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-TextArea id="TextOutCExe" enabled="true" visible="false" visiblecharacterwidth="30" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="coQuadcopter_xfnopre_Command.exe" editable="true" wrapping="true" show-border="true" password="false"></EC-TextArea></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68776" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68771" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68775" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><EC-Label id="Label_targetname" caption="      Target File " enabled="true" visible="false" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-TextArea id="TextOutCFile" enabled="true" visible="false" visiblecharacterwidth="30" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="coQuadcopter_xfnopre_Command.c" editable="true" wrapping="true" show-border="true" password="false"></EC-TextArea></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68794" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68779" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> Example:
    VC++ compile command:  cl.exe <Font foreground="[0,0,255]">test1.c</Font><Font foreground="[255,0,0]"> </Font>/O2 /Fe<Font foreground="[255,0,0]">test1.exe </Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68781" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">    gcc  compile command:  gcc.exe <Font foreground="[0,0,255]">test1.c </Font>-O3 -o <Font foreground="[255,0,0]">test1.exe   </Font>or <Font foreground="[255,0,0]">  gcc test1.c -O3 test.exe   </Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68764" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">         <Font size="10">   </Font><Font size="9" family="Arial">(Sometimes  you need to use a additonal option &quot; <Font foreground="[0,0,255]">-lm</Font>&quot;.)<Font foreground="[255,0,0]">
</Font></Font><Font foreground="[255,0,0]">    </Font>custom compile command:  <Font foreground="[255,0,0]" encoding="UTF-8">C:\134Work\134test\134test1.bat  </Font>(for Windows) <Font foreground="[255,0,0]"> </Font>or <Font foreground="[255,0,0]"> /usr/Work/test/test1.sh  </Font>(for Mac/Linux/Solaris)</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68768" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">           <Font size="9" family="Arial">(Write C custom compile command or custom bat file  or sh file for c compile. It is needed &quot;<Font foreground="[0,0,255]">chmod +x</Font>&quot; for the &quot;.sh file&quot;.)</Font>
                  </Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68770" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68755" display="code"><EC-CodeEditor id="CodeEditRegion17" visible="false" pixel-width="700" pixel-height="600" code-language="text/maple" autoexpand="false" wrapping="false" show-border="true" code-line-numbers="true"># Start Compile and Run Simulation

# Create shell script file for Linux (Shell: bash)
Create_gccWrapper_shFileforLinuxRedHat:= proc()
  local OSinfo:
  local OSbit:
  local gccpath:
  local search_cmd:
  local folderslash:
  local pathlen:
  local str, cstr:
  local cmdstr:
  local CC:
  local shfile:
  local lentmp:
  local Cexe := &quot;&quot;:
  local curdirstr := &quot;&quot;:
  local nkftmp:
  local mvstr:

  OSinfo := CheckOSinfo():
  OSbit := CheckOSbittype():
  pathlen := 0:
  str := &quot;&quot;:
  cmdstr := &quot;&quot;:
  bfile := &quot;&quot;:
  bfilestr := &quot;&quot;:
  cfile := &quot;&quot;:
  lentmp := 0:
  curdirstr := currentdir():
  nkftmp := NULL:
  mvstr := &quot;&quot;:

  if (OSinfo = &quot;WINDOWS&quot;) then
    folderslash := &quot;\134\134&quot;:
  else
    folderslash := &quot;/&quot;:
  end if:

  # Get search command strings (where.exe/whereXP.bat/which command)
  search_cmd := GetSearchCommand():

 # Search gcc.exe path (only strings: &quot;gcc&quot;)
  str := cat(search_cmd, &quot; &quot;, &quot;gcc&quot;);
  gccpath := ssystem(str):

  str := &quot;&quot;:


# gcc.exe (WINDOWS) or gcc (Linux/Mac/Solaris) folder string length 
  pathlen := max(StringTools:-SearchAll(&quot;gcc&quot;, gccpath[2])):

  if (pathlen &lt;= 0) then
  	printf(&quot;Setting for \134&quot;gcc.exe\134&quot; is failed.&quot;);
  	return:
  end if:

  gccpath[2];
  #SearchText(&quot;gcc&quot;,gccpath[2], -3..-1):
  #SearchText(&quot;gcc.exe&quot;, gccpath[2], -7..-1):
  
  if SearchText(&quot;gcc&quot;, gccpath[2], -3..-1) &gt; 0 then
    cexe_folder:= StringTools:-SubString(gccpath[2], 1..-5):
    Cexe := &quot;gcc&quot;:
  elif SearchText(&quot;gcc.exe&quot;, gccpath[2], -7..-1) &gt; 0 then
    cexe_folder:= StringTools:-SubString(gccpath[2], 1..-9):
    Cexe := &quot;gcc.exe&quot;:
  end if:

  cstr := DocumentTools:-GetProperty(&quot;Text_CompileStr&quot;, value):
  shfile := &quot;Linux_Ccompile.sh&quot;:
  str := &quot;#/bin/bash\134n&quot;:
  str := cat(str, &quot;export PATH =&quot;,cexe_folder,&quot;:&quot;,curdirstr,&quot;:$PATH\134necho $PATH\134n&quot;):
  str := cat(str, cstr):
  str := cat(str,&quot;\134n&quot;):

  CC := fopen(shfile, WRITE, TEXT):
  try
    fprintf(CC, str):
  finally 
    fclose(CC):
  end try: 

  # check for sh file
  if FileTools[Exists](shfile) = true then
    nkftmp := cat(search_cmd, &quot; &quot;, &quot;nkf&quot;):
    
    # Check for euc code
    if (nkftmp[1] = 0) then
      ssystem(cat(&quot;nkf -e -Lu&quot;,&quot; &quot;,shfile,&quot; &quot;,&quot;&gt; Linux_euc.sh&quot;)):
      mvstr := cat(search_cmd, &quot; &quot;, &quot;mv&quot;);
      ssystem(cat(mvstr,&quot; &quot;,&quot;Linux_euc.sh&quot;,&quot; &quot;,shfile)); 
    end if:
    
    ssystem(cat(&quot;chmod +x&quot;,&quot; &quot;,shfile)):  
      #ssystem(cat(&quot;./&quot;,shfile));
      #ssystem(cat(currentdir(),&quot;/&quot;,exename)):
  end if:
  
  return:
end proc:


# Create shell script file for Mac X
Create_gccWrapper_shFileforMacLinux:= proc()
  local OSinfo:
  local OSbit:
  local gccpath:
  local search_cmd:
  local folderslash:
  local pathlen:
  local str, cstr:
  local cmdstr:
  local CC:
  local shfile:
  local lentmp:
  local Cexe := &quot;&quot;:

  OSinfo := CheckOSinfo():
  OSbit := CheckOSbittype():
  pathlen := 0:
  str := &quot;&quot;:
  cmdstr := &quot;&quot;:
  bfile := &quot;&quot;:
  bfilestr := &quot;&quot;:
  cfile := &quot;&quot;:
  lentmp := 0:

  if (OSinfo = &quot;WINDOWS&quot;) then
    folderslash := &quot;\134\134&quot;:
  else
    folderslash := &quot;/&quot;:
  end if:

  # Get search command strings (where.exe/whereXP.bat/which command)
  search_cmd := GetSearchCommand():

 # Search gcc.exe path (only strings: &quot;gcc&quot;)
  str := cat(search_cmd, &quot; &quot;, &quot;gcc&quot;);
  gccpath := ssystem(str):

  str := &quot;&quot;:


# gcc.exe (WINDOWS) or gcc (Linux/Mac/Solaris) folder string length 
  pathlen := max(StringTools:-SearchAll(&quot;gcc&quot;, gccpath[2])):

  if (pathlen &lt;= 0) then
  	printf(&quot;Setting for \134&quot;gcc.exe\134&quot; is failed.&quot;);
  	return:
  end if:

  gccpath[2];
  SearchText(&quot;gcc&quot;,gccpath[2], -3..-1):
  SearchText(&quot;gcc.exe&quot;, gccpath[2], -7..-1):
  
  if SearchText(&quot;gcc&quot;, gccpath[2], -3..-1) &gt; 0 then
    cexe_folder:= StringTools:-SubString(gccpath[2], 1..-5):
    Cexe := &quot;gcc&quot;:
  elif SearchText(&quot;gcc.exe&quot;, gccpath[2], -7..-1) &gt; 0 then
    cexe_folder:= StringTools:-SubString(gccpath[2], 1..-9):
    Cexe := &quot;gcc.exe&quot;:
  end if:

  cstr := DocumentTools:-GetProperty(&quot;Text_CompileStr&quot;, value):
  shfile := &quot;Mac_Ccompile.sh&quot;:
  str := &quot;#/bin/bash\134n&quot;:
  str := cat(str, &quot;export PATH =&quot;,cexe_folder,&quot;:$PATH\134necho $PATH\134n&quot;):
  str := cat(str, cstr):
  str := cat(str,&quot;\134n&quot;):

  CC := fopen(shfile, WRITE, TEXT):
  try
    fprintf(CC, str):
  finally 
    fclose(CC):
  end try: 

  # check for sh file
  if FileTools[Exists](shfile) = true then
    ssystem(cat(&quot;chmod +x&quot;,&quot; &quot;,shfile)):  
    #ssystem(cat(&quot;./&quot;,shfile));
    #ssystem(cat(currentdir(),&quot;/&quot;,exename)):
  end if:

  return:
end proc:



# Create cl.exe Wrapper bat file for Windows x86
Create_clWrapperBatFileforWin:= proc()
  local OSinfo:
  local OSbit:
  local gccpath:
  local search_cmd:
  local folderslash:
  local pathlen:
  local str:
  local cmdstr:
  local CC:
  local mingwpath, mingwstr:
  local bfile, cfile:
  local lentmp:
  
  OSinfo := CheckOSinfo():
  OSbit := CheckOSbittype():
  pathlen := 0:
  str := &quot;&quot;:
  cmdstr := &quot;&quot;:
  bfile := &quot;&quot;:
  cfile := &quot;&quot;:
  lentmp := 0:

  # Check for Windows
  if (OSinfo &lt;&gt; &quot;WINDOWS&quot;) then
   return:
  end if:

  # folder slash 
  folderslash := &quot;\134\134&quot;:
  
  # Get search command strings (where.exe/whereXP.bat/which command)
  search_cmd := GetSearchCommand();
  search_cmd:= StringTools:-SubstituteAll(search_cmd,&quot;\134\134&quot;, &quot;\134\134\134\134&quot;);

  # Search cl.exe path
  str := &quot;&quot;:
  str := cat(search_cmd, &quot; &quot;, &quot;cl.exe&quot;);
  clpath := ssystem(str);

  # Check cl.exe in Microsoft Visual Studio 
  if (SearchText(&quot;Microsoft Visual Studio&quot;, clpath[2]) &lt;= 0) then
    printf(&quot;\134&quot;cl.exe\134&quot; is not for VC++.\134n&quot;):
    printf(&quot;Setting for \134&quot;cl.exe\134&quot; is failed.\134n&quot;);
    return:
  end if:

  str := &quot;&quot;:

# cl.exe for Windows
  pathlen := max(StringTools:-SearchAll(&quot;cl&quot;, clpath[2]));

  if (pathlen &lt;= 0) then
  	  printf(&quot;Setting for \134&quot;cl.exe\134&quot; is failed.\134n&quot;);
  	  return:
  end if:

  # For Windows OS
  if (OSinfo = &quot;WINDOWS&quot;) then
    lentmp := StringTools:-Length(&quot;\134\134bin&quot;);

    # Search vcvars32.bat for Windows 32bit
    str := &quot;&quot;:
    str := cat(search_cmd, &quot; &quot;,&quot;vcvars32.bat&quot;);

    clbatpath := ssystem(str);

    clbatstr := StringTools:-SubstituteAll(clbatpath[2],&quot;\134\134&quot;, &quot;\134\134\134\134&quot;);
    if SearchText(&quot; &quot;,clbatstr) &gt; 0 then
      clbatstr := cat(&quot;\134&quot;&quot;,clbatstr,&quot;\134&quot;&quot;);
    end if:

    # Create wrapper bat file
    CC := NULL:
    str := &quot;&quot;:
     
    str := &quot;@echo off\134n&quot;:
    str := cat(str,&quot;call&quot;,&quot; &quot;,clbatstr,&quot;\134n&quot;):
    
    cmdstr := DocumentTools:-GetProperty(&quot;Text_CompileStr&quot;, value):
    str := cat(str, StringTools:-SubstituteAll(cmdstr,&quot;\134\134&quot;, &quot;\134\134\134\134&quot;)):
    str := cat(str,&quot;\134n&quot;):
    
    cfile := cat(currentdir(),folderslash,&quot;cl_Winx86_Ccompile.bat&quot;):
    cfile := StringTools:-SubstituteAll(cfile,&quot;\134\134&quot;,&quot;\134\134\134\134&quot;):

    if FileTools[Exists](cfile) = true then
      try
        FileTools[Remove](cfile):
      end try:
    end if:

    # Create wrapper bat file using cl.exe for VC++
    CC := fopen(cfile, WRITE, TEXT):
  
    try
      fprintf(CC, str):
    finally 
      fclose(CC):
    end try: 

  else
  	# nothing
  end if:

  return:
end proc:


# Create C complie wrapper bat file
Create_gccWrapperBatFile := proc()
  local OSinfo:
  local OSbit:
  local gccpath:
  local search_cmd:
  local folderslash:
  local pathlen:
  local str:
  local cmdstr:
  local CC:
  local mingwpath, mingwstr:
  local bfile, cfile:
  local lentmp:

  OSinfo := CheckOSinfo():
  OSbit := CheckOSbittype():
  pathlen := 0:
  str := &quot;&quot;:
  cmdstr := &quot;&quot;:
  bfile := &quot;&quot;:
  bfilestr := &quot;&quot;:
  cfile := &quot;&quot;:
  lentmp := 0:

  if (OSinfo = &quot;WINDOWS&quot;) then
    folderslash := &quot;\134\134&quot;:
  else
    folderslash := &quot;/&quot;:
  end if:

  # Get search command strings (where.exe/whereXP.bat/which command)
  search_cmd := GetSearchCommand():

  # Search gcc.exe path
  str := cat(search_cmd, &quot; &quot;, &quot;gcc.exe&quot;);
  gccpath := ssystem(str):

  str := &quot;&quot;:

# gcc.exe (WINDOWS) or gcc (Linux/Mac/Solaris) folder string length 
  pathlen := max(StringTools:-SearchAll(&quot;gcc&quot;, gccpath[2])):

  if (pathlen &lt;= 0) then
  	printf(&quot;Setting for \134&quot;gcc.exe\134&quot; is failed.&quot;);
  	return:
  end if:

  # For Windows OS
  if (OSinfo = &quot;WINDOWS&quot;) then
    lentmp := StringTools:-Length(&quot;\134\134bin&quot;):

    # Set MingGW main directory strings path (full path strings) 
    if (StringTools:-SearchAll(&quot;MinGW&quot;, gccpath[2]) &gt; 0) then
      mingwpath := StringTools:-SubString(gccpath[2], 1..pathlen-2 -lentmp);
      mingwstr := StringTools:-SubstituteAll(mingwpath,&quot;\134\134&quot;, &quot;\134\134\134\134&quot;);

      # Create setting bat file for gcc.exe (Windows OS)
      str := &quot;@echo off\134n&quot;:
      str := cat(str,&quot;SET PATH=&quot;, mingwpath,&quot;\134\134bin;&quot;,&quot;%%PATH%%\134n&quot;):
      str := cat(str,&quot;SET C_INCLUDE_PATH=&quot;, mingwpath,&quot;\134\134include;&quot;,&quot;%%C_INCLUDE_PATH%%\134n&quot;):
      str := cat(str, &quot;SET LIBRARY_PATH=&quot;, mingwpath,&quot;\134\134lib;&quot;,&quot;%%LIBRARY_PATH%%\134n&quot;):
      str := cat(str,&quot;SET CPLUS_INCLUDE_PATH=&quot;, mingwpath,&quot;\134\134include;&quot;,&quot;%%CPLUS_INCLUDE_PATH%%\134n&quot;):

      # Create setting bat file
      bfile := cat(currentdir(),folderslash,&quot;MinGW_Setting.bat&quot;);
      bfilestr := StringTools:-SubstituteAll(bfile,&quot;\134\134&quot;, &quot;\134\134\134\134&quot;);
      if FileTools[Exists](bfile) = false then
        try
          CC := fopen(bfile, WRITE, TEXT):
          try
            fprintf(CC, str):
          finally 
            fclose(CC):
          end try: 
        end try:
      end if:

      # Create wrapper bat file
      CC := NULL:
      str := &quot;&quot;:
      
      str := &quot;@echo off\134n&quot;:
      str := cat(str,&quot;call&quot;,&quot; &quot;,bfile,&quot;\134n&quot;);
      cmdstr := DocumentTools:-GetProperty(&quot;Text_CompileStr&quot;, value):
      str := cat(str, StringTools:-SubstituteAll(cmdstr,&quot;\134\134&quot;, &quot;\134\134\134\134&quot;)):
      str := cat(str,&quot;\134n&quot;):
      
      cfile := cat(currentdir(),folderslash,&quot;MinGW_Ccompile.bat&quot;):
      
      if FileTools[Exists](cfile) = true then
        try
          FileTools[Remove](cfile):
        end try:
      end if:
      # Create wrapper bat file for gcc.exe using MinGW
      CC := fopen(cfile, WRITE, TEXT):
  
      try
        fprintf(CC, str):
      finally 
        fclose(CC):
      end try: 
    else
      printf(&quot;Setting for \134&quot;gcc.exe\134&quot; is failed.&quot;);
      return:
    end if:
    
  # for another OS (Linux/Mac/Solaris/Unknown)
  else
  	# nothing
  end if:

  return:
end proc:


# -----------------------
# C compile setting start
# -----------------------

# Get Ccompile type
if parse(DocumentTools:-GetProperty(&quot;RBtn_cl&quot;, value)) = true  then
  ctype := &quot;cl.exe&quot;:
elif parse(DocumentTools:-GetProperty(&quot;RBtn_gcc&quot;, value)) = true then
  ctype := &quot;gcc.exe&quot;:
elif parse(DocumentTools:-GetProperty(&quot;RBtn_custom&quot;, value)) = true then
  ctype := &quot;custom&quot;:
end if:

# Get Ccompile command
# if ctype = custom, get exename and targetfile from TextBox: TextoutCExe and TextOutCFile
if ctype = custom then
  exename := DocumentTools:-GetProperty(&quot;TextOutCExe&quot;, value);
  targetfile := DocumentTools:-GetProperty(&quot;TextOutCFile&quot;, value);
end if;
vcpath := DocumentTools:-GetProperty(&quot;Text_VCbatpath&quot;, value):
compilestr := StringTools:-Trim(DocumentTools:-GetProperty(&quot;Text_CompileStr&quot;, value));

# Compile path strings
compilepath := &quot;&quot;:
cresult := NULL:

if ctype = &quot;cl.exe&quot; then
  # Case of 64bit Windows OS
  if CheckOSbittype() = &quot;x64&quot; then
    if vcpath = NULL or vcpath = &quot;&quot; then
      Compiler:-Setup():
    else
      if FileTools[Exists](vcpath) = true then
        Compiler:-Setup(vcpath):
      else
    	   Compiler:-Setup():
      end if:
    end if:
  end if:
end if:


# delete old result data and exe files
# folderslash is already defined.  (Windows: &quot;\134\134&quot;, Linux/Mac/Soralis/Unknown: &quot;/&quot;)
cfile := cat(currentdir(),folderslash, fndat,&quot;c.m&quot;):
xfile := cat(currentdir(),folderslash, fndat,&quot;x.m&quot;):
ufile := cat(currentdir(),folderslash, fndat,&quot;u.m&quot;):
pfile := cat(currentdir(),folderslash, fndat,&quot;p.m&quot;):
efile := cat(currentdir(),folderslash, fndat,&quot;e.m&quot;):
exepath := cat(currentdir(),folderslash, exename):

# check for ***c.m 
if FileTools[Exists](cfile) = true then
  try
    FileTools[Remove](cfile);
  end try:
end if:

# check for ***x.m 
if FileTools[Exists](xfile) = true then
  try
    FileTools[Remove](xfile);
  end try:
end if:

# check for ***u.m 
if FileTools[Exists](ufile) = true then
  try
    FileTools[Remove](ufile);
  end try:
end if:

# check for ***p.m 
if FileTools[Exists](pfile) = true then
  try
    FileTools[Remove](pfile);
  end try:
end if:

# check for ***e.m
if FileTools[Exists](efile) = true then
  try
    FileTools[Remove](efile);
  end try:
end if:

# check for ***.exe
if FileTools[Exists](exepath) = true then
  try
    FileTools[Remove](exepath);
  end try:
end if:



# run c compile\302\216
compileflg := false:
printf(&quot;%s: %s&quot;,ctype, &quot;Start Compile\134n&quot;);

if compilestr = &quot;&quot; or compilerstr = NULL then
  compilestr := &quot;-- Set C Compiler Command --&quot;
end if:

# First setting for custom compile
if DocumentTools:-GetProperty(&quot;Text_CompileStr&quot;, value) = &quot;&quot; then
  compilestr := cat(&quot;-- Set C Compile Command -- &quot;):
  DocumentTools:-SetProperty(&quot;Text_CompileStr&quot;, value, compilestr)
end if:


# Setting for compile strings
if ctype = &quot;cl.exe&quot; then
  if (CheckOSinfo() = &quot;WINDOWS&quot;) then
  	if (CheckOSbittype() = &quot;x86&quot;) then
       Create_clWrapperBatFileforWin():
       compilepath := cat(currentdir(),folderslash,&quot;cl_Winx86_Ccompile.bat&quot;);
       compilepath := StringTools:-SubstituteAll(compilepath,&quot;\134\134&quot;, &quot;\134\134\134\134&quot;);
     else
       compilepath := compilestr:
     end if:
  end if:
elif ctype = &quot;gcc.exe&quot; then
  if StringTools:-Length(compilestr) &gt; 2 then
    # Case for Windows OS
    if CheckOSinfo() = &quot;WINDOWS&quot; then
    	  Create_gccWrapperBatFile():
      compilepath := cat(currentdir(),folderslash,&quot;MinGW_Ccompile.bat&quot;);
      compilepath := StringTools:-SubstituteAll(compilepath,&quot;\134\134&quot;, &quot;\134\134\134\134&quot;):
 
    # Case for Linux/Mac/Solaris/Unknown
    elif CheckOSinfo() = &quot;MAC&quot; then
      Create_gccWrapper_shFileforMacLinux():
      compilepath := cat(&quot;./&quot;,&quot;Mac_Ccompile.sh&quot;);
    else
      Create_gccWrapper_shFileforLinuxRedHat():
      compilepath := cat(&quot;./&quot;,&quot;Linux_Ccompile.sh&quot;);
    end if:
  end if:
elif ctype = &quot;custom&quot; then
  if StringTools:-Length(compilestr) &gt; 2 then
    # Case for Windows OS
    if CheckOSinfo() = &quot;WINDOWS&quot; then
      if StringTools:-SubString(compilestr, 2..3) &lt;&gt; &quot;:\134\134&quot; then
        compilepath := cat(currentdir(),folderslash, compilestr);
        compilepath := StringTools:-SubstituteAll(compilepath,&quot;\134\134&quot;, &quot;\134\134\134\134&quot;):
      else
        compilepath := compilestr:
      end if:
    # Case for Linux/Mac/Solaris/Unknown
    else
    	 if StringTools:-SubString(compilestr, 1..1) &lt;&gt; &quot;/&quot; then
        compilepath := cat(currentdir(),folderslash, compilestr);
      end if:
    end if:
  end if:
end if:

try
  if compilerstr = &quot;&quot; or compilestr = NULL then
  	printf(&quot;\134nCompile command is nothing\134n&quot;);
    quit:
  end if:

  cresult := ssystem(compilepath):
catch:
  printf(&quot;\134nCompile is failed\134n&quot;);
  quit;
end try;

# check for a compile result 
if ctype = &quot;cl.exe&quot; then	
  # cl.exe: return 0 -&gt; success,  another -&gt; failed 
  if cresult[1] &lt;&gt; 0 then
    printf(&quot;\134nCompile is failed\134n&quot;);
    compileflg := false:
    #quit;
  else
    printf(&quot;\134nCompile is successful.\134n&quot;);
    compileflg := true:
  end if;
elif ctype = &quot;gcc.exe&quot; then

  # gcc.exe: return 0 -&gt; success,  another -&gt; failed 
  if cresult[1] &lt;&gt; 0 then
    printf(&quot;\134nCompile is failed.\134n&quot;);
    compileflg := false:
    #quit;
  else
    printf(&quot;\134nCompile is success.\134n&quot;);
    compileflg := true;
  end if;
elif ctype = &quot;custom&quot; then
  if cresult[1] &lt;&gt; 0 then
    printf(&quot;\134nCompilation failed.\134n&quot;);
    compileflg := false:
    #quit;
  else
    printf(&quot;\134nCompilation is successful.\134n&quot;);
    compileflg := true:
  end if:
end if;

if compileflg = false then
  quit;
end if:

# check for execute file
#exeflg := false:

# run exe file
try
  printf(&quot;\134nRun execute file.\134n&quot;);
  currentdir();
  exename;

  pathname := &quot;&quot;:

  # Case for Windows OS
  if CheckOSinfo() = &quot;WINDOWS&quot; then
    if StringTools:-SubString(exename, 2..3) = &quot;:\134\134&quot; then
      pathname := exename;
    else
      pathname := cat(currentdir(),folderslash,exename);
    end if:
  # Case for Linux/Mac/Solaris/Unknown OS
  else
    if StringTools:-SubString(exename, 1..1) = &quot;/&quot; then
      pathname := exename:
    else
      pathname := cat(currentdir(),folderslash,exename):
    end if:
  end if:

  #pathname;
  calres2 := ssystem(pathname);

  if calres2[1] &lt; 0 then
  	printf(&quot;\134nProcessing failed.\134n&quot;);
  else
  	printf(&quot;\134nProcessing is complete.\134n&quot;);
  	#exeflg := true:
  end if;
catch:
  printf(&quot;\134nProcessing failed--.\134n&quot;);
  #exeflg := false:
  quit:
end try;

# Set Strings in Text Component in Show Graphs
DocumentTools:-SetProperty(&quot;Text_ResetCurrentDir&quot;, value, currentdir()):
DocumentTools:-SetProperty(&quot;Text_HeaderStrings&quot;, value, fndat):
</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68757" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68751" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Show Graphs</Text-field></Title>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Initialize Parameters</Text-field></Title><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68749" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68783" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">If you remove a first pound character (&quot;#&quot;) in the following each line, you can clear all parameters. In this case, you need to set current directory and header of data filenames. 
</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" hide-output="false" labelreference="L68765" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">## Reset all parameters
#restart:</Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68767" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Table visible="true" exterior="all" pagebreak="cell" showlabel="true" title="" plotalignlists="" hiddenborderdisplay="worksheet" interior="group" postexecute="insert" drawcaption="false" width="79.21077959576516%" captionalignment="0" showinput="true" captionposition="1" id="Table10" alignment="left" randomized="false" labelreference="L68780" showgroup="true" order="row"><Table-Column weight="823" separator="true"></Table-Column><Table-Row align="top" separator="true"><Table-Cell padding="5" visible="true" fillcolor="[255,255,255]" rowspan="1" backgroundstyle="0" columnspan="1"><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68801" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68758" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="Label_SetCurrentDir1" caption="Current Directory:" enabled="true" visible="true" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-TextArea id="Text_ResetCurrentDir" enabled="true" visible="true" visiblecharacterwidth="60" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="C:\134Users\134Deng\134Desktop\134Comparison\134CGMRES\134Quadrotor" editable="true" wrapping="true" show-border="true" password="false"><MapleCode action="content-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

# Get old current directory
strCDold := DocumentTools:-GetProperty(&quot;Text_ResetCurrentDir&quot;, value):

# remove white space 
strCDold := StringTools:-Trim(strCDold):

# Check input Strings (Windows style string)
if strCDold = &quot;&quot; then
  strCDold := currentdir():
else
  # Check Current Directory strings
  # Change &quot;/&quot; to &quot;\134\134&quot;
  strCDnew := StringTools:-SubstituteAll(strCDold, &quot;/&quot;,&quot;\134\134&quot;); 

  # Change &quot;\134\134\134\134&quot; to &quot;\134\134&quot;
  strCDnew := StringTools:-SubstituteAll(strCDnew, &quot;\134\134\134\134&quot;,&quot;\134\134&quot;);

  # Remove white space
  strCDnew := StringTools:-Trim(strCDnew);	
end if:

# Set Current Directory
if strCDnew = &quot;&quot; then
  strCDnew := currentdir():
else
  try
    currentdir(StringTools:-SubstituteAll(strCDnew, &quot;\134\134&quot;, &quot;\134\134\134\134&quot;)):
    strCDnew := currentdir():
  catch:
    #try
    #  currentdir(StringTools:-SubstituteAll(strCDold, &quot;\134\134&quot;, &quot;\134\134\134\134&quot;)):
    #  strCDnew := currentdir():
    #catch:
    #  strCDnew := currentdir():
    #end try:
  end try:

DocumentTools:-SetProperty(&quot;Text_ResetCurrentDir&quot;, value, strCDnew);
end if:

end use; 
</MapleCode></EC-TextArea>  </Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68759" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68786" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68753" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68782" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> <EC-Label id="Label_fndat" caption="Header of Data Filenames:" enabled="true" visible="true" visiblecharacterwidth="10" pixel-width="300" pixel-height="200" user-size="false" user-width="false" fillcolor="[255,255,255]" fontcolor="[0,0,0]"></EC-Label><EC-TextArea id="Text_HeaderStrings" enabled="true" visible="true" visiblecharacterwidth="30" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="coxfproCommand_" editable="true" wrapping="true" show-border="true" password="false"><MapleCode action="content-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

val := DocumentTools:-GetProperty(&quot;Text_HeaderStrings&quot;, value):
DocumentTools:-SetProperty(&quot;Text_HeaderStrings&quot;, value, val):

end use; 
</MapleCode></EC-TextArea>    *<Font size="9" family="Arial">A default is used the parameter &quot;fndat&quot;.</Font></Text-field>
</Input>
</Group></Presentation-Block></Table-Cell></Table-Row></Table><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68777" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68761" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68797" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68796" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68798" display="button"><EC-CodeEditor id="CodeEditRegion18" visible="false" pixel-width="800" pixel-height="600" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Set parameters and check file info

#if resrtart_flg = NULL redefine procedures
# ----------------
if restart_flg = NULL then


# Create where.bat file for Windwos XP if where.exe is not exist
Create_whereXPbatfile := proc() 
  local str, CC, cfile:
  cfile := &quot;whereXP.bat&quot;: 
  str := &quot;@echo off\134nfor %%%%I in (%%1 %%1.com %%1.exe %%1.bat %%1.cmd %%1.vbs %%1.js %%1.wsf) do if exist %%%%~$path:I echo %%%%~$path:I\134n&quot;:
  CC := fopen(cfile, WRITE, TEXT):
  try
    fprintf(CC, str):
  finally 
    fclose(CC):
  end try: 
end proc:

# Check OS (WINDOWS/LINUX/MAC/SOLARIS/UNKNOWN)
CheckOSinfo := proc()::string;
  local res :: string:
  local osinfo_all, keystr:

  # Initialize
  res := &quot;&quot;:
 # Check for OS type for Windows
  osinfo_all := ssystem(&quot;ver&quot;):
  if osinfo_all[1] = 0 then
    if (StringTools:-Search(&quot;Microsoft Windows&quot;, osinfo_all[2]) &gt; 0) then
      res := &quot;WINDOWS&quot;:
      osinfo_all := &quot;&quot;:
      return res:
    end if:
  end if:

  # Check for OS type for Linux/ Solaris
  osinfo_all := ssystem(&quot;uname -a&quot;):
  if osinfo_all[1] = 0 then
    if (StringTools:-Search(&quot;Linux&quot;, osinfo_all[2]) &gt; 0 or 
           StringTools:-Search(&quot;LINUX&quot;, osinfo_all[2]) &gt; 0) then
      res := &quot;LINUX&quot;:
      osinfo_all := &quot;&quot;:
      return res:

    elif (StringTools:-Search(&quot;SunOS&quot;, osinfo_all[2]) &gt; 0 or 
            StringTools:-Search(&quot;Solaris&quot;, osinfo_all[2]) &gt; 0 or 
            StringTools:-Search(&quot;solaris&quot;, osinfo_all[2]) &gt; 0) then
    	   res := &quot;SOLARIS&quot;:
    	   osinfo_all := &quot;&quot;:
    end if:
  end if:

  # Check for OS type for Mac
  ##osinfo := ssystem(&quot;system_profiler&quot;):
  osinfo_all := ssystem(&quot;sw_vers&quot;):
  if osinfo_all[1] = 0 then
    if (StringTools:-Search(&quot;Mac OS&quot;, osinfo_all[2]) &gt; 0) then
      res := &quot;MAC&quot;:
      osinfo_all := &quot;&quot;:
      return res:
    end if:    
  end if:  

  # Case of none for OS type
  if res = &quot;&quot; then
    # default OS setting
    res := &quot;UNKNOWN&quot;:
  end if:

end proc:

# Check OS bittype for ALL OS
CheckOSbittype := proc()::string;
  local res :: string:
  local keystr, sinfo, tmpstr, splitlist, targetstr:
  local OSinfo:

  # Initialize parameters
  res := &quot;&quot;:
  keystr := &quot;&quot;:
  sinfo := &quot;&quot;:
  tmpstr := &quot;&quot;:
  splitlist := &quot;&quot;:
  targetstr := &quot;&quot;:

  # Get OS info
  OSinfo := CheckOSinfo():
  
  # Windows OS
  if (OSinfo = &quot;WINDOWS&quot;) then
    keystr := &quot;based PC&quot;:
    sinfo := ssystem(&quot;systeminfo&quot;):
    res := &quot;x86&quot;:

    tmpstr := StringTools:-Trim(StringTools:-Take(sinfo[2], StringTools:-SearchAll(keystr, sinfo[2]) + length(keystr))):
    splitlist := StringTools:-Split(tmpstr, &quot;\134n&quot;):
  
    # Get target OS bit type strings from systeminfo 
    targetstr := splitlist[nops(splitlist)];
  
    # Check for bit type: x64 for Windows
    if (SearchText(&quot;x64&quot;, targetstr) &gt; 0  or 
         SearchText(&quot;64-bit&quot;, targetstr) &gt; 0) then
       return &quot;x64&quot;:
    end if:

    # result: x86
    return res:

  # Linux / Mac OS
  elif (OSinfo = &quot;LINUX&quot; or OSinfo = &quot;MAC&quot;) then
  	targetstr := ssystem(&quot;uname -a&quot;):

     # Check for bit type: x64 for Linux
  	if (SearchText(&quot;X86_64&quot;, targetstr[2]) &gt; 0 or 
  	     SearchText(&quot;x86_64&quot;, targetstr[2]) &gt; 0 or
  	       SearchText(&quot;amd64&quot;, targetstr[2]) &gt; 0) then
  	   return &quot;x64&quot;:
  	end if:

  	# result: x86
  	return res:
  elif (OSinifo = &quot;SOLARIS&quot;) then
  	targetstr := ssystem(&quot;isainfo -v&quot;):

     # Check for bit type: x64 for Linux
  	if (SearchText(&quot;64-bit &quot;, targetstr[2]) &gt; 0) then
  	   return &quot;x64&quot;:
  	end if:

  	# result: x86
  	return res:
  else
  	return res:
  end if:
end proc:


# Search execute file path (in PATH) for all OS
GetSearchCommand := proc()::string;
  local search_cmd, ret, OSinfo:
  local isWhereCommand, wherebatname:

  # initialize
  ret := &quot;&quot;:
  wherebatname := &quot;&quot;:

  # Get OS info
  OSinfo := CheckOSinfo():

  # OS check for path search command: where
  if (OSinfo = &quot;WINDOWS&quot;) then
    # Check where command 
    isWhereCommand := ssystem(&quot;where where.exe&quot;);
    wherebatname := &quot;whereXP.bat&quot;:

    # Check for exist where command in Wnidows OS
    # whereXP.bat:  search path for excutable file
    if (isWhereCommand[1] &lt;&gt; 0) then
       if FileTools[Exists](wherebatname) = false then
         try
           Create_whereXPbatfile():
         end try:
       end if:
       search_cmd := cat(currentdir(), &quot;\134\134&quot;, &quot;whereXP.bat&quot;):
    else
   	  search_cmd := &quot;where.exe&quot;:
    end if:
  # Another OS(Linux/Mac/Solaris/Unknown)
  # command strings only &quot;which&quot; (not &quot;which.exe&quot;)
  else
  	search_cmd := &quot;which&quot;:
  end if:

    return search_cmd:
  end proc:


  # initialize current directry
  currentdir():
end if:
# -----------------

# slash string for folder (Windows: &quot;\134\134&quot;, Linux/Mac/Solaris/Unknown: &quot;/&quot;)
folderslash := &quot;&quot;:

if CheckOSinfo() = &quot;WINDOWS&quot; then
  folderslash := &quot;\134\134&quot;:
else
  folderslash := &quot;/&quot;;
end if:



# Set parameters and check file info
strcurrentdir := DocumentTools:-GetProperty(&quot;Text_ResetCurrentDir&quot;, value):
strfname := DocumentTools:-GetProperty(&quot;Text_HeaderStrings&quot;, value):

if strcurrentdir = NULL or strcurrentdir = &quot;&quot; or strcurrentdir = &quot;strCDnew&quot; then
  try
    currentdir():
    strcurrentdir := currentdir():
    DocumentTools:-SetProperty(&quot;Text_ResetCurrentDir&quot;, value, strcurrentdir):
  end try:
end if:

# Case of using  restart command 
if (fndat = NULL or fndata = &quot;&quot;) then
  currentdir(strcurrentdir):
end if:

# Set and check scurrentdir and fndat
currentdir();
fndat := strfname;

# Setting for component parameters
# Initialize for GraphArea pixel size
ww::integer := 700:
hh::integer := 1000:

wtmp := StringTools:-Trim(DocumentTools:-GetProperty(&quot;Text_GraphAreaWidth1&quot;, value)):
htmp := StringTools:-Trim(DocumentTools:-GetProperty(&quot;Text_GraphAreaHeight1&quot;, value)):

if wtmp &lt;&gt; &quot;&quot; then
  ww := wtmp:
end if:
if htmp &lt;&gt; &quot;&quot; then
  hh := htmp:
end if:

DocumentTools:-SetProperty(&quot;plotgraph1&quot;,pixelWidth, ww):
DocumentTools:-SetProperty(&quot;plotgraph1&quot;, pixelHeight, hh):
DocumentTools:-SetProperty(&quot;Text_GraphAreaWidth1&quot;,value, ww):
DocumentTools:-SetProperty(&quot;Text_GraphAreaHeight1&quot;,value, hh):

DocumentTools:-SetProperty(&quot;Check_Vecx&quot;, value, true);
DocumentTools:-SetProperty(&quot;Check_Vecu&quot;, value, true);
DocumentTools:-SetProperty(&quot;Check_Vecp&quot;, value, true);
DocumentTools:-SetProperty(&quot;Check_Errnorm&quot;, value, true);

# Graph Clear
DocumentTools:-Do( %plotgraph1 = plots[display](plot([[0,0]],'axes'='none'))):

</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68763" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Read Data File</Text-field></Title><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68760" display="button"><EC-CodeEditor id="CodeEditRegion11" visible="false" pixel-width="800" pixel-height="5725" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Read data file
with(LinearAlgebra):
with(FileTools):
with(StringTools):




# Setting for Graph
cfile := cat(currentdir(),folderslash, fndat,&quot;c.m&quot;):
xfile := cat(currentdir(),folderslash, fndat,&quot;x.m&quot;):
ufile := cat(currentdir(),folderslash, fndat,&quot;u.m&quot;):
pfile := cat(currentdir(),folderslash, fndat,&quot;p.m&quot;):
efile := cat(currentdir(),folderslash, fndat,&quot;e.m&quot;):

# import data (Matrix style)
if FileTools[Exists](xfile) = true then
  try
    data_x := ImportMatrix(xfile, delimiter = &quot; &quot;):
  end try:
end if:

if FileTools[Exists](ufile) = true then
  try
    data_u := ImportMatrix(ufile, delimiter = &quot; &quot;):
  end try:
end if:

if FileTools[Exists](pfile) = true then
  try
    data_p := ImportMatrix(pfile, delimiter = &quot; &quot;):
    flgp := true;
  end try:
end if:

if FileTools[Exists](efile) = true then
  try
    data_e := ImportMatrix(efile, delimiter = &quot; &quot;):
  end try:
end if:

# Read Data Files
# Open cfile
if FileTools[Exists](cfile) = true then
  if IsOpen(cfile) = false then
    Text[Open](cfile): 
  end if:

  Linenum:=Text[CountLines](cfile):
  
  try
    for i to Linenum do
      # save to temporary buf (table type)
      buf[i] := Text:-ReadLine(cfile):
    end do:
  catch 
    &quot;Reading File is FAIL.&quot;:
  finally
    Text[Close](cfile):
  end try:
else
  printf(&quot;%s does not exist.\134n&quot;, cfile);
  Linenum := 0;
end if:

tsim0 := 0.0:
tsim := 0.0:
ht := 0.0:
dstep:= 0:

if FileTools[Exists](xfile) = true then
  if (data_x &lt;&gt; NULL and nops(data_x) &gt; 0) then
    dimx := ColumnDimension(data_x):
  end if:
end if:

if FileTools[Exists](ufile) = true then
  if (data_u &lt;&gt; NULL and nops(data_u) &gt; 0) then
    dimuc := ColumnDimension(data_u):
  end if:
end if:

if FileTools[Exists](pfile) = true then
  if (data_p &lt;&gt; NULL and nops(data_p) &gt; 0) then
    dimp := ColumnDimension(data_p):
  end if:
end if:

#dimu := dimuc - dim 

# \350\250\255\345\256\232\345\200\244\347\224\250\343\203\221\343\203\251\343\203\241\343\203\274\343\202\277
pairstr := NULL:

tmpstr := NULL:
depthlevel := 0:
namestr := &quot;&quot;:
valuestr := &quot;&quot;:

for i from 1 to Linenum do
  # &quot;%&quot;\346\226\207\345\255\227\344\273\245\351\231\215\343\201\257\343\202\263\343\203\241\343\203\263\343\203\210\343\201\256\343\201\237\343\202\201\346\244\234\347\264\242\343\201\253\343\201\257\345\210\251\347\224\250\343\201\227\343\201\252\343\201\204
  perNo := Search(&quot;%&quot;, buf[i]):

  if perNo &gt; 0 then
     tmp := Take(buf[i], perNo-1):
  else
  	tmp := buf[i]:
  end if:
	
  tstrNo := Length(tmp):
  icount := 0:
 
  # 1\350\241\214\343\201\247\345\217\226\345\276\227\343\201\227\343\201\246\343\201\204\343\202\213\346\226\207\345\255\227\345\210\227\343\201\256\345\207\246\347\220\206
  while (tstrNo &gt; 0) do

   #printf(&quot;*** tmp = %s\134n&quot;, tmp);
   
   # &quot;=&quot;\346\226\207\345\255\227\345\210\227\343\201\256\345\240\264\346\211\200\343\202\222\346\216\242\343\201\231
   eqnstrNo := Search(&quot;=&quot;,tmp):
   commaNo := Search(&quot;,&quot;, tmp):


   if depthlevel &gt; 0 then
        # \345\220\214\343\201\230\350\241\214\343\201\253&quot;]&quot; \343\201\214\343\201\202\343\202\213\345\240\264\345\220\210
        if Search(&quot;]&quot;, tmp) &gt; 0 then
          wstrNo := Search(&quot;]&quot;, tmp):
          valuestr := cat(valuestr, Trim(Take(tmp, wstrNo))):
          tmp := Trim(Drop(tmp, wstrNo)):
          depthlevel := depthlevel-1:

          # Check the parameter
          printf(&quot;&lt;%s&gt; = %s\134n&quot;, namestr, valuestr):
          pairstr := pairstr, [namestr, valuestr]:

          namestr := &quot;&quot;:
          valuestr := &quot;&quot;:
        else
        	  wstrNo := Length(tmp):
            valuestr := cat(valuestr,Trim(Take(tmp, wstrNo))):
            tmp := Trim(Drop(tmp, wstrNo)):
        end if:

        break;
    end if;

      # \345\210\235\346\234\237\345\214\226
      valuestr := &quot;&quot;:
        
      # &quot;\357\274\235&quot;\345\211\215\343\201\276\343\201\247\343\201\256\345\244\211\346\225\260\345\220\215\343\201\250 &quot;=&quot; \343\201\276\343\201\247\345\207\246\347\220\206\343\202\222\351\200\262\343\202\201\343\202\213
      if (eqnstrNo &gt; 0) then
        
        namestr := Trim(Take(tmp, eqnstrNo-1)):
        valuestr := &quot;&quot;:
        tmp := TrimLeft(Drop(tmp, eqnstrNo)):

        # &quot;=&quot; \343\201\256\346\254\241\343\201\256\346\226\207\345\255\227\345\210\227\343\201\250\343\201\227\343\201\246 &quot;[&quot; \343\201\214\350\246\213\343\201\244\343\201\213\343\201\243\343\201\237\345\240\264\345\220\210
        if (tmp[1] = &quot;[&quot;) then
        	wstrNo := 1:
        	valuestr := Trim(Take(tmp, wstrNo)):
        	tmp := Trim(Drop(tmp, wstrNo)):
          depthlevel := depthlevel + 1:
        end if;

        # \345\220\214\343\201\230\350\241\214\343\201\253&quot;]&quot; \343\201\214\343\201\202\343\202\213\345\240\264\345\220\210
        if Search(&quot;]&quot;, tmp) &gt; 0 then
          wstrNo := Search(&quot;]&quot;, tmp):
          valuestr := cat(valuestr, Trim(Take(tmp, wstrNo))):
          tmp := Trim(Drop(tmp, wstrNo)):
          depthlevel := depthlevel-1:

          # Check the parameter
                    # printf(&quot;&lt;%s&gt; = %s\134n&quot;, namestr, valuestr):
          pairstr := pairstr, [namestr, valuestr]:

          namestr := &quot;&quot;:
          valuestr := &quot;&quot;:
        end if:

      if (tmp[1] = &quot;,&quot;  and length(tmp) &gt; 0) then
            if depthlevel = 0 then
              wstrNo := 1:
              tmp := Trim(Drop(tmp,wstrNo)):
              namestr := &quot;&quot;:
              valuestr := &quot;&quot;:
            elif (depthlevel &gt; 0 and Search(&quot;]&quot;, tmp) &gt; 0) then
            	wsrtNo := Length(tmp);
            	valuestr := Trim(Take(tmp, wstrNo)):
            	tmp := Trim(Drop(tmp, wstrNo)):
            end if:

        else
          if (Search(&quot;,&quot;, tmp) = 0 
                  and Search(&quot;=&quot;, tmp) = 0  
                  and Length(tmp) &gt; 0) then
            wstrNo := Length(tmp):
            valuestr := Trim(Take(tmp, wstrNo)):
            tmp := Trim(Drop(tmp,wstrNo)):

            if depthlevel = 0 then
                 # printf(&quot;&lt;%s&gt; = %s\134n&quot;, namestr, valuestr):
              pairstr := pairstr, [namestr, valuestr]:
              
              namestr := &quot;&quot;:
              valuestr := &quot;&quot;:
            end if:

            # Check the parameter
            namestr := &quot;&quot;:
            valuestr := &quot;&quot;:          
        	elif Search(&quot;,&quot;, tmp) &lt; Search(&quot;=&quot;,tmp) then
            wstrNo := Search(&quot;,&quot;, tmp):
            valuestr := Trim(Take(tmp, wstrNo -1)):
            tmp := Trim(Drop(tmp,wstrNo)):

            # Check the parameter
              # printf(&quot;&lt;%s&gt; = %s\134n&quot;, namestr, valuestr):
            pairstr := pairstr, [namestr, valuestr]:
              
            namestr := &quot;&quot;:
            valuestr := &quot;&quot;:
         	end if:
        end if:
        
      else
        if Search(&quot;,&quot;, tmp) &gt; 0 then
          wstrNo := Search(&quot;,&quot;, tmp):

          valuestr := Trim(Take(tmp, wstrNo -1)):
          tmp := Trim(Drop(tmp,wstrNo)):
              # printf(&quot;&lt;%s&gt; = %s\134n&quot;, namestr, valuestr):
          pairstr := pairstr, [namestr, valuestr]:
          
          namestr := &quot;&quot;:
          valuestr := &quot;&quot;:
        else
          wstrNo := Length(tmp);
          valuestr := Trim(Take(tmp, wstrNo)):
          tmp := Drop(tmp, wstrNo):
        end if:
  
      end if:
 
    tstrNo := length(tmp):

    # check of rest string length
    if tstrNo = 0 then
      break:
    end if:

  end do:
end do:

# Set param as list
pairstr := [pairstr]:

# get param value (strings)
GetInitParam := proc(targetparam::string)
   local i, pstr, vstr;
   vstr := NULL;

   # search of target paramter name
   for i from 1 to nops(pairstr) do
     pstr := pairstr[i][1]:
     
     if pstr = targetparam then
       vstr := parse(pairstr[i][2]);
     end if;
   end do;
   
   return vstr:
end proc:

# Set Function for saving all plots to ps/eps file.
MakeWidePlot := proc(p::evaln, fname::string, ww::integer, hh::integer)
  local namestr, place, opts,tmpstr:
     
  ## Check file extension
  ## default extension: eps
  if (StringTools:-SubString(fname, -4..-1) &lt;&gt; &quot;.eps&quot; and 
           StringTools:-SubString(fname, -3..-1) &lt;&gt; &quot;.ps&quot;) then
    tmpstr := cat(fname, &quot;.eps&quot;); 
  else
    tmpstr := fname;
  end if;

  namestr := cat(currentdir(),&quot;\134\134&quot;,convert(tmpstr,string)):
  opts := `landscape,width=ww,height=hh,noborder`:
  #opts := &quot;&quot;;
     try
       #plotsetup('ps', 'plotoutput'=cat(name), 'plotoptions'=opts):
        plotsetup('ps', plotoptions=`color,portrait`, 'plotoutput'= cat(namestr));

       print( plots:-display( eval(p), 'axesfont' = [ TIMES, 10 ],
                            'labelfont' = [ TIMES, ROMAN, 10] ) ):
     finally
       plotsetup(default);
     end try:
   end proc:

# Save all plot image to eps file 
SaveAllPlotToFile := proc(fname::string, ww::integer, hh::integer)
  MakeWidePlot(plotframe, psfname, ww, hh);
end proc:
</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68762" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 2" layout="Heading 2">Create and Show Graph</Text-field></Title><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68785" display="button"><EC-CodeEditor id="CodeEditRegion12" visible="false" pixel-width="800" pixel-height="3920" code-language="text/maple" autoexpand="true" wrapping="false" show-border="true" code-line-numbers="true"># Create Graph and Show 
tsim0 := 0.0:
tsim := 0.0:
ht := 0.0:
dstep := 0:

# Get parameters for time from read data file:
tmp1 := GetInitParam(&quot;tsim0&quot;):
tmp2 := GetInitParam(&quot;tsim&quot;):
tmp3 := GetInitParam(&quot;ht&quot;):
tmp4 := GetInitParam(&quot;dstep&quot;):

if tmp1 &lt;&gt; NULL then
  tsim0 := convert(tmp1, float):
end if:

if tmp2 &lt;&gt; NULL then
  tsim := convert(tmp2, float):
end if:

if tmp3 &lt;&gt; NULL then
  ht := convert(tmp3, float):
end if:

# not convert for integer type
if tmp4 &lt;&gt; NULL then
  dstep := tmp4:
end if:

# set paremeter; 
delt := ht*dstep:
tt:=[seq(t,t=tsim0..tsim, delt)]:

# \346\254\241\345\205\203\343\201\256\350\250\255\345\256\232\357\274\210\345\206\215\345\217\226\345\276\227\357\274\211
if assigned(data_x) = true then 
  dimx := ColumnDimension(data_x):
end if:

if assigned(data_u) = true then 
  dimuc := ColumnDimension(data_u):
end if:

if assigned(data_p) = true then 
  dimp := ColumnDimension(data_p):
end if:
dime := 1:

# 2\344\271\227\343\203\216\343\203\253\343\203\240\343\201\256\350\250\210\347\256\227
if assigned(data_e) = true then 
  data_errnorm := [seq(sqrt(add(data_e[k][j], j=1..dimuc)), k=1..RowDimension(data_e))]:
  data_errnorm := convert(data_errnorm, Vector):
end if:

if assigned(data_x) = true then 
  labelx:=cat(&quot;x&quot;, 1..dimx):
end if:

if assigned(data_u) = true then
  labelu:=cat(&quot;u&quot;, 1..dimuc):
end if:

if assigned(data_p) = true then
  labelp:=cat(&quot;p&quot;, 1..dimp):
end if:

if assigned(data_e) = true then
  labelerrnorm := cat(&quot;error norm&quot;):
end if:

if assigned(data_x) = true then 
showx := parse(DocumentTools:-GetProperty(&quot;Check_Vecx&quot;, value)):
end if:


if assigned(data_u) = true then 
showu := parse(DocumentTools:-GetProperty(&quot;Check_Vecu&quot;, value)):
end if:

if assigned(data_p) = true then 
  showp := parse(DocumentTools:-GetProperty(&quot;Check_Vecp&quot;, value)):
end if:

if assigned(data_e) = true then 
showe := parse(DocumentTools:-GetProperty(&quot;Check_Errnorm&quot;, value)):
end if:

showElem:= NULL:
labelElem := NULL:

if showx = true then
  showElem := showElem, data_x:
  labelElem := labelElem, labelx:
end if:

if showu = true then
  showElem := showElem, data_u:
  labelElem := labelElem, labelu:
end if:


if assigned(data_p) = true then 
  if showp = true then
    showElem := showElem, data_p:
    labelElem := labelElem, labelp:
  end if:
end if:

if showe = true then
  showElem := showElem, data_errnorm:
  labelElem := labelElem, labelerrnorm:
end if:

graphAllData := convert([showElem], Matrix):
graphLabels:= [labelElem]:

framenum::integer := ColumnDimension(graphAllData):
colnum::integer := 2: # fixed value
rownum::integer := ceil(evalf(framenum / colnum)): # ?ceil of rownum
with(plots):

iframe := 0:
frg := Array(1..rownum * colnum):
errdim := 1:

k := NULL:
fcount := 0:

iframe := 0:
frg := Array(1..rownum * colnum):
errdim := 1:

k := NULL:
fcount := 0:


# Create plot data
for k from 1 to ColumnDimension(graphAllData) do
  fcount := fcount + 1:
  tmpdata := [seq([tt[i],graphAllData[i,k]], i=1..RowDimension(graphAllData))]:
  titletext := graphLabels[k]:
  frg[fcount] := plot(tmpdata, title = titletext, axes=framed, labels=[&quot;time&quot;, &quot;&quot;]):
end do:

# Create array for view window
arrnum := rownum * colnum:

if fcount &lt; arrnum then
  for k from fcount + 1  to arrnum do
    frg[k] := plots[textplot]([0, 0, &quot;&quot;], axes = none):
  end do:
end if:
testB2:=seq(frg[i], i=1..framenum):
plotframe := Array(1..rownum, 1..colnum):

for k from 1 to arrnum do
  i := ceil(evalf(k/colnum)):
  if modp(k, colnum) = 0 then
    j := colnum:
  else
    j := modp(k, colnum):
  end if:
  #printf(&quot;i, j = %d, %d\134n&quot;, i, j);
  
  if k &lt;= arrnum then
    plotframe[i,j] := frg[k]:
  else
    plotframe[i,j] := plot([[0, 0]], 'axes' = 'none'):
  end if: 
end do:

# Initialize plot graph
DocumentTools:-Do(%plotgraph1 = plots[display](plot([[0, 0]], 'axes' = 'none'))):

if framenum &gt; 0 then
  DocumentTools:-SetProperty(&quot;plotgraph1&quot;,value, display(plotframe)):
end if:

# Setting GUI components
# Vector x
if assigned(data_x) = true then
  DocumentTools:-SetProperty(&quot;Check_Vecx&quot;, visible, true)
else
  DocumentTools:-SetProperty(&quot;Check_Vecx&quot;, visible, false)
end if:

# Vector u
if assigned(data_u) = true then
  DocumentTools:-SetProperty(&quot;Check_Vecu&quot;, visible, true)
else
  DocumentTools:-SetProperty(&quot;Check_Vecu&quot;, visible, false)
end if:

# Vector p
if assigned(data_p) = true then
  DocumentTools:-SetProperty(&quot;Check_Vecp&quot;, visible, true)
else
  DocumentTools:-SetProperty(&quot;Check_Vecp&quot;, visible, false)
end if:

# Error norm
if assigned(data_e) = true then
  DocumentTools:-SetProperty(&quot;Check_Errnorm&quot;, visible, true)
else
  DocumentTools:-SetProperty(&quot;Check_Errnorm&quot;, visible, false)
end if:
</EC-CodeEditor></CodeEditor-ExecGroup>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68784" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68750" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group hide-output="false" labelreference="L68788" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"> Width:  <EC-TextArea id="Text_GraphAreaWidth1" enabled="true" visible="true" visiblecharacterwidth="10" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="1200" editable="true" wrapping="true" show-border="true" password="false"><MapleCode action="content-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

Do (%Text_GraphAreaWidth1):

ww := GetProperty(&quot;Text_GraphAreaWidth1&quot;, &quot;value&quot;):

# Check width size
if (parse(ww) &lt; 200 or parse(ww) = NULL or ww = &quot;&quot;) then
  ww := &quot;200&quot;:
  DocumentTools:-SetProperty(&quot;Text_GraphAreaWidth1&quot;,&quot;value&quot;, ww): 
end if:

SetProperty(&quot;plotgraph1&quot;, pixelWidth, ww):

end use; 
</MapleCode></EC-TextArea>    Height: <EC-TextArea id="Text_GraphAreaHeight1" enabled="true" visible="true" visiblecharacterwidth="10" visiblerows="1" fontcolor="[0,0,0]" fillcolor="[255,255,255]" contents="3000" editable="true" wrapping="true" show-border="true" password="false"><MapleCode action="content-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

Do (%Text_GraphAreaHeight1);

hh := GetProperty(&quot;Text_GraphAreaHeight1&quot;, &quot;value&quot;):

# Check hight size
if (parse(hh) &lt; 200 or parse(hh) = NULL or hh = &quot;&quot;) then
  hh := &quot;200&quot;:
  DocumentTools:-SetProperty(&quot;Text_GraphAreaHeight1&quot;,&quot;value&quot;, hh): 
end if:

SetProperty(&quot;plotgraph1&quot;, pixelHeight, hh):

end use; 
</MapleCode></EC-TextArea> </Text-field><Text-field style="Text" layout="Normal"> Parameters:  <EC-CheckBox id="Check_Vecx" groupname="" caption="vector x" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="false" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"></EC-CheckBox>  <EC-CheckBox id="Check_Vecu" groupname="" caption="vector u" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="false" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"></EC-CheckBox> <EC-CheckBox id="Check_Vecp" groupname="" caption="vector p" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="false" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"></EC-CheckBox><EC-CheckBox id="Check_Errnorm" groupname="" caption="error norm" pixel-width="300" pixel-height="200" enabled="true" visible="true" selected="false" user-size="false" fontcolor="[0,0,0]" fillcolor="[255,255,255]"></EC-CheckBox></Text-field><Text-field style="Text" layout="Normal"><EC-Plot id="plotgraph1" visible="true" pixel-width="1200" pixel-height="3000" continuous="false" delay="100" fillcolor="[255,255,255]" clickx="0.0" clicky="0.0" hoverx="0.0" hovery="0.0" startx="-0.8102189781021898" starty="-0.2840466926070039" endx="0.0" endy="0.0" clickdefault="false" labelreference="L15074" drawcaption="false" captionposition="1" captionalignment="0" show-border="true"><Plot height="-1.0" type="two-dimensional" width="-1.0" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" gridlinevisibility="1" legendvisibility="false">NiktJSdDVVJWRVNHNiQ3IzckJCIiISEiIiQiIiEhIiItJSZDT0xPUkc2JyUkUkdCRyQiKUMpZXElISIpJCIiISEiIiQiKCc+IVwmISIpLSUrX0FUVFJJQlVURUc2Iy8lJ3NvdXJjZUclLG1hdGhkZWZhdWx0Ry0mJSZfQVhJU0c2IyIiIjYnLSUrX0dSSURMSU5FU0c2Iy0lKV9WSVNJQkxFRzYjIiIhLSUmQ09MT1JHNiYlJFJHQkckIiIhISIiJCIiISEiIiQiIiEhIiItJSpMSU5FU1RZTEVHNiMiIiEtJSpUSElDS05FU1NHNiMiIiEtJS1UUkFOU1BBUkVOQ1lHNiMkIiIhISIiLSYlJl9BWElTRzYjIiIjNictJStfR1JJRExJTkVTRzYjLSUpX1ZJU0lCTEVHNiMiIiEtJSZDT0xPUkc2JiUkUkdCRyQiIiEhIiIkIiIhISIiJCIiISEiIi0lKkxJTkVTVFlMRUc2IyIiIS0lKlRISUNLTkVTU0c2IyIiIS0lLVRSQU5TUEFSRU5DWUc2IyQiIiEhIiItJSpBWEVTU1RZTEVHNiMlJU5PTkVHLSUpX1ZJU0lCTEVHNiMiIiItJSVST09URzYnLSUpQk9VTkRTX1hHNiMkIiNdISIiLSUpQk9VTkRTX1lHNiMkIiNdISIiLSUtQk9VTkRTX1dJRFRIRzYjJCImXT0iISIiLSUuQk9VTkRTX0hFSUdIVEc2IyQiJl0pSCEiIi0lKUNISUxEUkVORzYiLSUrQU5OT1RBVElPTkc2Jy0lKUJPVU5EU19YRzYjJCIiISEiIi0lKUJPVU5EU19ZRzYjJCIiISEiIi0lLUJPVU5EU19XSURUSEc2IyQiJStTISIiLSUuQk9VTkRTX0hFSUdIVEc2IyQiJStTISIiLSUpQ0hJTERSRU5HNiI=NiI=</Plot></EC-Plot></Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"><EC-Button id="Btn_DeleteGraph1" caption="Delete" pixel-width="300" pixel-height="200" enabled="true" visible="true" show-border="true" user-size="false" fontcolor="[0,0,0]"><MapleCode action="click-event-handler">use DocumentTools in 
# Enter Maple commands to be executed when the specified
# action is carried out on the component.
# Use: 
#    Do( %component_name );
# and
#    Do( %component_name = value );
# to set and get properties of the component.
# You can also use arbitrary expressions
# involving components, e.g.:
#    Do( %target = %input1 + 2*%input2 );
# Note the %-prefix to each component name.
# See ?CustomizingComponents for more information.

# Initialize plot graph
DocumentTools:-Do(%plotgraph1 = plots[display](plot([[0, 0]], 'axes' = 'none'))):

end use; 
</MapleCode></EC-Button>  </Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68769" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68766" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L68752" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L68802" drawlabel="true">
<Input><Text-field style="Text" size="10" family="Arial" layout="Normal"><Font size="10" family="Arial">  Copyright (c) 2013--2014 CYBERNET SYSTEMS CO.,LTD. All rights reserved. </Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L68800" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Font size="10" family="Arial">  ID Number:  201401291700</Font><Equation executable="false" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="true" inline-output="false" labelreference="L8" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" hide-input="false" hide-output="false" inline-output="false" labelreference="L9" drawlabel="true">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70616" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70617" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70618" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70619" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70620" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70621" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70622" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70623" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70624" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70625" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70626" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70627" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70628" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70629" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70685" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70686" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70687" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70688" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70689" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70690" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70691" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70692" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70693" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70694" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70695" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70696" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70697" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70698" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70699" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70721" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70722" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70723" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70724" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70725" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70726" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70727" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbWlHRiQ2I1EhRic=</Equation></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L70728" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Equation executable="true" style="2D Math" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2I1EhRicvJStleGVjdXRhYmxlR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRic=">JSFH</Equation></Text-field>
</Input>
</Group></Presentation-Block>
</Worksheet>